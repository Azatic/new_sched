// Generated by js_of_ocaml
//# buildInfo:effects=false, use-js-string=false, version=5.0.1
(function
   (globalThis)
   {"use strict";
    var
     runtime=globalThis.jsoo_runtime,
     caml_compare=runtime.caml_compare,
     caml_equal=runtime.caml_equal,
     caml_fresh_oo_id=runtime.caml_fresh_oo_id,
     caml_get_public_method=runtime.caml_get_public_method,
     caml_obj_tag=runtime.caml_obj_tag,
     caml_register_global=runtime.caml_register_global,
     caml_string_of_jsbytes=runtime.caml_string_of_jsbytes,
     caml_trampoline=runtime.caml_trampoline,
     caml_trampoline_return=runtime.caml_trampoline_return,
     caml_update_dummy=runtime.caml_update_dummy,
     caml_wrap_exception=runtime.caml_wrap_exception;
    function caml_call1(f,a0)
     {return f.length == 1?f(a0):runtime.caml_call_gen(f,[a0])}
    function caml_call2(f,a0,a1)
     {return f.length == 2?f(a0,a1):runtime.caml_call_gen(f,[a0,a1])}
    function caml_call3(f,a0,a1,a2)
     {return f.length == 3?f(a0,a1,a2):runtime.caml_call_gen(f,[a0,a1,a2])}
    function caml_call4(f,a0,a1,a2,a3)
     {return f.length == 4
              ?f(a0,a1,a2,a3)
              :runtime.caml_call_gen(f,[a0,a1,a2,a3])}
    function caml_call5(f,a0,a1,a2,a3,a4)
     {return f.length == 5
              ?f(a0,a1,a2,a3,a4)
              :runtime.caml_call_gen(f,[a0,a1,a2,a3,a4])}
    function caml_call6(f,a0,a1,a2,a3,a4,a5)
     {return f.length == 6
              ?f(a0,a1,a2,a3,a4,a5)
              :runtime.caml_call_gen(f,[a0,a1,a2,a3,a4,a5])}
    function caml_call8(f,a0,a1,a2,a3,a4,a5,a6,a7)
     {return f.length == 8
              ?f(a0,a1,a2,a3,a4,a5,a6,a7)
              :runtime.caml_call_gen(f,[a0,a1,a2,a3,a4,a5,a6,a7])}
    var
     global_data=runtime.caml_get_global_data(),
     cst=caml_string_of_jsbytes("; "),
     cst$0=caml_string_of_jsbytes(", "),
     global_anchor=[0,-8,0],
     cst_OCanren_Term_Different_sha=
      caml_string_of_jsbytes("OCanren__Term.Different_shape"),
     cst_OCanren_fatal_Env_check_wr=
      caml_string_of_jsbytes("OCanren fatal (Env.check): wrong environment"),
     cst_OCanren_Env_Open_Term=
      caml_string_of_jsbytes("OCanren__Env.Open_Term"),
     cst_OCanren_fatal_Subst_merge_=
      caml_string_of_jsbytes
       ("OCanren fatal (Subst.merge_disjoint): substitutions intersect"),
     cst_unifying_two_wildcards_wil=
      caml_string_of_jsbytes("unifying two wildcards will be fixed later"),
     cst_OCanren_fatal_Subst_of_lis=
      caml_string_of_jsbytes
       ("OCanren fatal (Subst.of_list): invalid substituion"),
     cst_OCanren_Subst_Occurs_check=
      caml_string_of_jsbytes("OCanren__Subst.Occurs_check"),
     cst_OCanren_Subst_Unification_=
      caml_string_of_jsbytes("OCanren__Subst.Unification_failed"),
     cst_OCanren_fatal_Conjunct_mer=
      caml_string_of_jsbytes
       ("OCanren fatal (Conjunct.merge_disjoint): conjuncts intersect"),
     cst_OCanren_Disequality_Disequ=
      caml_string_of_jsbytes("OCanren__Disequality.Disequality_violated"),
     cst_OCanren_Disequality_Disequ$0=
      caml_string_of_jsbytes("OCanren__Disequality.Disequality_fulfilled"),
     cst$20=caml_string_of_jsbytes(""),
     cst$18=caml_string_of_jsbytes("=/= "),
     cst$19=caml_string_of_jsbytes(""),
     cst$17=caml_string_of_jsbytes(""),
     cst$15=caml_string_of_jsbytes(""),
     cst$16=caml_string_of_jsbytes(""),
     cst$13=caml_string_of_jsbytes(""),
     cst$14=caml_string_of_jsbytes(""),
     cst_Var=caml_string_of_jsbytes("Var"),
     cst_Value=caml_string_of_jsbytes("Value"),
     cst$11=caml_string_of_jsbytes(""),
     cst$12=caml_string_of_jsbytes(""),
     cst$9=caml_string_of_jsbytes(""),
     cst$10=caml_string_of_jsbytes(""),
     cst$7=caml_string_of_jsbytes(""),
     cst$8=caml_string_of_jsbytes(""),
     cst$5=caml_string_of_jsbytes(""),
     cst$6=caml_string_of_jsbytes(""),
     cst$3=caml_string_of_jsbytes(""),
     cst$4=caml_string_of_jsbytes(""),
     partial=[12,41,[17,0,0]],
     partial$0=[0,caml_string_of_jsbytes("@,"),0,0],
     cst$1=caml_string_of_jsbytes(""),
     cst$2=caml_string_of_jsbytes(""),
     _t_=[0,caml_string_of_jsbytes("reify"),caml_string_of_jsbytes("is_open")],
     _u_=
      [0,
       caml_string_of_jsbytes("gmap"),
       caml_string_of_jsbytes("html"),
       caml_string_of_jsbytes("show"),
       caml_string_of_jsbytes("eq"),
       caml_string_of_jsbytes("fmt"),
       caml_string_of_jsbytes("compare"),
       caml_string_of_jsbytes("foldl"),
       caml_string_of_jsbytes("foldr")],
     _v_=[0,caml_string_of_jsbytes("c_Value"),caml_string_of_jsbytes("c_Var")],
     _w_=[0,caml_string_of_jsbytes("c_Var"),caml_string_of_jsbytes("c_Value")],
     shared=
      [0,
       caml_string_of_jsbytes("show"),
       caml_string_of_jsbytes("html"),
       caml_string_of_jsbytes("gmap"),
       caml_string_of_jsbytes("foldr"),
       caml_string_of_jsbytes("foldl"),
       caml_string_of_jsbytes("fmt"),
       caml_string_of_jsbytes("eq"),
       caml_string_of_jsbytes("compare")],
     cst_OCanren_Logic_Not_a_value=
      caml_string_of_jsbytes("OCanren__Logic.Not_a_value"),
     cst_OCanren_fatal_Stream_zip_s=
      caml_string_of_jsbytes
       ("OCanren fatal (Stream.zip): streams have different lengths"),
     cst_OCanren_fatal_Stream_hd_em=
      caml_string_of_jsbytes("OCanren fatal (Stream.hd): empty stream"),
     cst_should_not_happen=caml_string_of_jsbytes("should not happen"),
     cst_Wrong_argument_of=caml_string_of_jsbytes("Wrong argument of (?!)"),
     cst_OCanren_fatal_Answer_check=
      caml_string_of_jsbytes
       ("OCanren fatal (Answer.check_envs): answers from different environments"),
     cst_OCanren_Core_Prunes_Fail=
      caml_string_of_jsbytes("OCanren__Core.Prunes.Fail"),
     partial$1=
      [17,
       [0,caml_string_of_jsbytes("@ "),1,0],
       [15,[17,[0,caml_string_of_jsbytes("@,"),0,0],[12,41,[17,0,0]]]]],
     partial$2=[0,caml_string_of_jsbytes("@,"),0,0],
     partial$3=
      [17,
       [0,caml_string_of_jsbytes("@ "),1,0],
       [15,[17,[0,caml_string_of_jsbytes("@,"),0,0],[12,41,[17,0,0]]]]],
     partial$4=[0,caml_string_of_jsbytes("@,"),0,0],
     cst$60=caml_string_of_jsbytes(""),
     cst$61=caml_string_of_jsbytes(""),
     cst$62=caml_string_of_jsbytes(""),
     cst_c_GROUND$6=caml_string_of_jsbytes("c_GROUND"),
     cst$57=caml_string_of_jsbytes(""),
     cst$58=caml_string_of_jsbytes(""),
     cst$59=caml_string_of_jsbytes(""),
     cst_c_GROUND$5=caml_string_of_jsbytes("c_GROUND"),
     cst$54=caml_string_of_jsbytes(""),
     cst$55=caml_string_of_jsbytes(""),
     cst$56=caml_string_of_jsbytes(""),
     cst_c_GROUND$4=caml_string_of_jsbytes("c_GROUND"),
     cst$51=caml_string_of_jsbytes(""),
     cst$52=caml_string_of_jsbytes(""),
     cst$53=caml_string_of_jsbytes(""),
     cst_c_GROUND$3=caml_string_of_jsbytes("c_GROUND"),
     cst$48=caml_string_of_jsbytes(""),
     cst$49=caml_string_of_jsbytes(""),
     cst$50=caml_string_of_jsbytes(""),
     cst_c_GROUND$2=caml_string_of_jsbytes("c_GROUND"),
     cst$45=caml_string_of_jsbytes(""),
     cst$46=caml_string_of_jsbytes(""),
     cst$47=caml_string_of_jsbytes(""),
     cst_c_GROUND$1=caml_string_of_jsbytes("c_GROUND"),
     partial$5=
      [17,
       [0,caml_string_of_jsbytes("@ "),1,0],
       [15,[17,[0,caml_string_of_jsbytes("@,"),0,0],[12,41,[17,0,0]]]]],
     partial$6=[0,caml_string_of_jsbytes("@,"),0,0],
     cst$42=caml_string_of_jsbytes(""),
     cst$43=caml_string_of_jsbytes(""),
     cst$44=caml_string_of_jsbytes(""),
     cst_c_GROUND$0=caml_string_of_jsbytes("c_GROUND"),
     cst_c_GROUND=caml_string_of_jsbytes("c_GROUND"),
     cst$39=caml_string_of_jsbytes(""),
     cst$40=caml_string_of_jsbytes(""),
     cst$41=caml_string_of_jsbytes(""),
     cst_c_T$6=caml_string_of_jsbytes("c_T"),
     cst$36=caml_string_of_jsbytes(""),
     cst$37=caml_string_of_jsbytes(""),
     cst$38=caml_string_of_jsbytes(""),
     cst_c_T$5=caml_string_of_jsbytes("c_T"),
     cst$33=caml_string_of_jsbytes(""),
     cst$34=caml_string_of_jsbytes(""),
     cst$35=caml_string_of_jsbytes(""),
     cst_c_T$4=caml_string_of_jsbytes("c_T"),
     cst$30=caml_string_of_jsbytes(""),
     cst$31=caml_string_of_jsbytes(""),
     cst$32=caml_string_of_jsbytes(""),
     cst_c_T$3=caml_string_of_jsbytes("c_T"),
     cst$27=caml_string_of_jsbytes(""),
     cst$28=caml_string_of_jsbytes(""),
     cst$29=caml_string_of_jsbytes(""),
     cst_c_T$2=caml_string_of_jsbytes("c_T"),
     cst$24=caml_string_of_jsbytes(""),
     cst$25=caml_string_of_jsbytes(""),
     cst$26=caml_string_of_jsbytes(""),
     cst_c_T$1=caml_string_of_jsbytes("c_T"),
     partial$7=
      [17,
       [0,caml_string_of_jsbytes("@ "),1,0],
       [15,[17,[0,caml_string_of_jsbytes("@,"),0,0],[12,41,[17,0,0]]]]],
     partial$8=[0,caml_string_of_jsbytes("@,"),0,0],
     cst$21=caml_string_of_jsbytes(""),
     cst$22=caml_string_of_jsbytes(""),
     cst$23=caml_string_of_jsbytes(""),
     cst_c_T$0=caml_string_of_jsbytes("c_T"),
     cst_c_T=caml_string_of_jsbytes("c_T"),
     _aN_=
      [0,
       caml_string_of_jsbytes("gmap"),
       caml_string_of_jsbytes("show"),
       caml_string_of_jsbytes("eq"),
       caml_string_of_jsbytes("fmt"),
       caml_string_of_jsbytes("compare"),
       caml_string_of_jsbytes("foldl"),
       caml_string_of_jsbytes("foldr")],
     _aO_=[0,caml_string_of_jsbytes("c_GROUND")],
     _aP_=
      [0,
       caml_string_of_jsbytes("show"),
       caml_string_of_jsbytes("gmap"),
       caml_string_of_jsbytes("foldr"),
       caml_string_of_jsbytes("foldl"),
       caml_string_of_jsbytes("fmt"),
       caml_string_of_jsbytes("eq"),
       caml_string_of_jsbytes("compare")],
     _aQ_=
      [0,caml_string_of_jsbytes("c_Value"),caml_string_of_jsbytes("c_Var")],
     _aR_=
      [0,caml_string_of_jsbytes("c_Var"),caml_string_of_jsbytes("c_Value")],
     shared$0=[0,caml_string_of_jsbytes("c_T")],
     cst_Timer_is_not_installed_Add=
      caml_string_of_jsbytes
       ("Timer is not installed. Add linkage with OCanren.install_timer"),
     empty_span=[254,0.,0.],
     cst_tuple$2=caml_string_of_jsbytes("tuple"),
     cst_tuple$1=caml_string_of_jsbytes("tuple"),
     partial$9=[17,0,0],
     partial$10=[17,0,0],
     cst$93=caml_string_of_jsbytes(""),
     cst$94=caml_string_of_jsbytes(""),
     cst_c_GROUND$15=caml_string_of_jsbytes("c_GROUND"),
     cst$91=caml_string_of_jsbytes(""),
     cst$92=caml_string_of_jsbytes(""),
     cst_c_GROUND$14=caml_string_of_jsbytes("c_GROUND"),
     cst_tuple$0=caml_string_of_jsbytes("tuple"),
     cst$89=caml_string_of_jsbytes(""),
     cst$90=caml_string_of_jsbytes(""),
     cst_c_GROUND$13=caml_string_of_jsbytes("c_GROUND"),
     cst$87=caml_string_of_jsbytes(""),
     cst$88=caml_string_of_jsbytes(""),
     cst_c_GROUND$12=caml_string_of_jsbytes("c_GROUND"),
     cst$85=caml_string_of_jsbytes(""),
     cst$86=caml_string_of_jsbytes(""),
     cst_c_GROUND$11=caml_string_of_jsbytes("c_GROUND"),
     cst$83=caml_string_of_jsbytes(""),
     cst$84=caml_string_of_jsbytes(""),
     cst_c_GROUND$10=caml_string_of_jsbytes("c_GROUND"),
     cst$81=caml_string_of_jsbytes(""),
     cst$82=caml_string_of_jsbytes(""),
     cst_c_GROUND$9=caml_string_of_jsbytes("c_GROUND"),
     partial$11=[17,0,0],
     cst$79=caml_string_of_jsbytes(""),
     cst$80=caml_string_of_jsbytes(""),
     cst_c_GROUND$8=caml_string_of_jsbytes("c_GROUND"),
     cst_c_GROUND$7=caml_string_of_jsbytes("c_GROUND"),
     cst$77=caml_string_of_jsbytes(""),
     cst$78=caml_string_of_jsbytes(""),
     cst_c_T$15=caml_string_of_jsbytes("c_T"),
     cst$75=caml_string_of_jsbytes(""),
     cst$76=caml_string_of_jsbytes(""),
     cst_c_T$14=caml_string_of_jsbytes("c_T"),
     cst_tuple=caml_string_of_jsbytes("tuple"),
     cst$73=caml_string_of_jsbytes(""),
     cst$74=caml_string_of_jsbytes(""),
     cst_c_T$13=caml_string_of_jsbytes("c_T"),
     cst$71=caml_string_of_jsbytes(""),
     cst$72=caml_string_of_jsbytes(""),
     cst_c_T$12=caml_string_of_jsbytes("c_T"),
     cst$69=caml_string_of_jsbytes(""),
     cst$70=caml_string_of_jsbytes(""),
     cst_c_T$11=caml_string_of_jsbytes("c_T"),
     cst$67=caml_string_of_jsbytes(""),
     cst$68=caml_string_of_jsbytes(""),
     cst_c_T$10=caml_string_of_jsbytes("c_T"),
     cst$65=caml_string_of_jsbytes(""),
     cst$66=caml_string_of_jsbytes(""),
     cst_c_T$9=caml_string_of_jsbytes("c_T"),
     partial$12=[17,0,0],
     cst$63=caml_string_of_jsbytes(""),
     cst$64=caml_string_of_jsbytes(""),
     cst_c_T$8=caml_string_of_jsbytes("c_T"),
     cst_c_T$7=caml_string_of_jsbytes("c_T"),
     _cz_=
      [0,
       caml_string_of_jsbytes("gmap"),
       caml_string_of_jsbytes("html"),
       caml_string_of_jsbytes("show"),
       caml_string_of_jsbytes("eq"),
       caml_string_of_jsbytes("fmt"),
       caml_string_of_jsbytes("compare"),
       caml_string_of_jsbytes("foldl"),
       caml_string_of_jsbytes("foldr")],
     _cA_=[0,caml_string_of_jsbytes("c_GROUND")],
     _cB_=
      [0,caml_string_of_jsbytes("c_Value"),caml_string_of_jsbytes("c_Var")],
     _cC_=
      [0,caml_string_of_jsbytes("c_Var"),caml_string_of_jsbytes("c_Value")],
     _cD_=
      [0,
       caml_string_of_jsbytes("show"),
       caml_string_of_jsbytes("html"),
       caml_string_of_jsbytes("gmap"),
       caml_string_of_jsbytes("foldr"),
       caml_string_of_jsbytes("foldl"),
       caml_string_of_jsbytes("fmt"),
       caml_string_of_jsbytes("eq"),
       caml_string_of_jsbytes("compare")],
     shared$1=[0,caml_string_of_jsbytes("c_T")],
     _e1_=
      [0,caml_string_of_jsbytes("c_None"),caml_string_of_jsbytes("c_Some")],
     _e2_=
      [0,
       caml_string_of_jsbytes("gmap"),
       caml_string_of_jsbytes("html"),
       caml_string_of_jsbytes("show"),
       caml_string_of_jsbytes("eq"),
       caml_string_of_jsbytes("fmt"),
       caml_string_of_jsbytes("compare"),
       caml_string_of_jsbytes("foldl"),
       caml_string_of_jsbytes("foldr")],
     _e3_=
      [0,caml_string_of_jsbytes("c_Some"),caml_string_of_jsbytes("c_None")],
     _e4_=
      [0,caml_string_of_jsbytes("c_Value"),caml_string_of_jsbytes("c_Var")],
     _e5_=
      [0,caml_string_of_jsbytes("c_Var"),caml_string_of_jsbytes("c_Value")],
     shared$2=
      [0,
       caml_string_of_jsbytes("show"),
       caml_string_of_jsbytes("html"),
       caml_string_of_jsbytes("gmap"),
       caml_string_of_jsbytes("foldr"),
       caml_string_of_jsbytes("foldl"),
       caml_string_of_jsbytes("fmt"),
       caml_string_of_jsbytes("eq"),
       caml_string_of_jsbytes("compare")],
     cst_t_bool$16=caml_string_of_jsbytes("t_bool"),
     cst_t_bool$15=caml_string_of_jsbytes("t_bool"),
     cst_t_bool$14=caml_string_of_jsbytes("t_bool"),
     cst_t_bool$13=caml_string_of_jsbytes("t_bool"),
     cst_t_bool$12=caml_string_of_jsbytes("t_bool"),
     cst_t_bool$11=caml_string_of_jsbytes("t_bool"),
     cst_t_bool$10=caml_string_of_jsbytes("t_bool"),
     cst_t_bool$9=caml_string_of_jsbytes("t_bool"),
     cst_t_bool$8=caml_string_of_jsbytes("t_bool"),
     cst_t_bool$7=caml_string_of_jsbytes("t_bool"),
     cst_t_bool$6=caml_string_of_jsbytes("t_bool"),
     cst_t_bool$5=caml_string_of_jsbytes("t_bool"),
     cst_t_bool$4=caml_string_of_jsbytes("t_bool"),
     cst_t_bool$3=caml_string_of_jsbytes("t_bool"),
     cst_t_bool$2=caml_string_of_jsbytes("t_bool"),
     cst_t_bool$1=caml_string_of_jsbytes("t_bool"),
     cst_t_bool$0=caml_string_of_jsbytes("t_bool"),
     cst_t_bool=caml_string_of_jsbytes("t_bool"),
     _hi_=
      [0,
       caml_string_of_jsbytes("gmap"),
       caml_string_of_jsbytes("html"),
       caml_string_of_jsbytes("show"),
       caml_string_of_jsbytes("eq"),
       caml_string_of_jsbytes("fmt"),
       caml_string_of_jsbytes("compare"),
       caml_string_of_jsbytes("foldl"),
       caml_string_of_jsbytes("foldr")],
     _hj_=
      [0,caml_string_of_jsbytes("c_Value"),caml_string_of_jsbytes("c_Var")],
     _hk_=
      [0,
       caml_string_of_jsbytes("show"),
       caml_string_of_jsbytes("html"),
       caml_string_of_jsbytes("gmap"),
       caml_string_of_jsbytes("foldr"),
       caml_string_of_jsbytes("foldl"),
       caml_string_of_jsbytes("fmt"),
       caml_string_of_jsbytes("eq"),
       caml_string_of_jsbytes("compare")],
     _hl_=
      [0,caml_string_of_jsbytes("c_Var"),caml_string_of_jsbytes("c_Value")],
     shared$3=[0,caml_string_of_jsbytes("t_bool")],
     cst_O$0=caml_string_of_jsbytes("O"),
     cst$102=caml_string_of_jsbytes(""),
     cst$101=caml_string_of_jsbytes(""),
     cst_O=caml_string_of_jsbytes("O"),
     cst_S=caml_string_of_jsbytes("S"),
     cst$100=caml_string_of_jsbytes(""),
     cst$99=caml_string_of_jsbytes(""),
     cst$98=caml_string_of_jsbytes(""),
     cst$97=caml_string_of_jsbytes(""),
     cst$96=caml_string_of_jsbytes(""),
     cst$95=caml_string_of_jsbytes(""),
     _jb_=[0,caml_string_of_jsbytes("c_O"),caml_string_of_jsbytes("c_S")],
     _jc_=
      [0,
       caml_string_of_jsbytes("gmap"),
       caml_string_of_jsbytes("html"),
       caml_string_of_jsbytes("show"),
       caml_string_of_jsbytes("eq"),
       caml_string_of_jsbytes("fmt"),
       caml_string_of_jsbytes("compare"),
       caml_string_of_jsbytes("foldl"),
       caml_string_of_jsbytes("foldr")],
     _jd_=
      [0,caml_string_of_jsbytes("c_Value"),caml_string_of_jsbytes("c_Var")],
     _je_=
      [0,
       caml_string_of_jsbytes("show"),
       caml_string_of_jsbytes("html"),
       caml_string_of_jsbytes("gmap"),
       caml_string_of_jsbytes("foldr"),
       caml_string_of_jsbytes("foldl"),
       caml_string_of_jsbytes("fmt"),
       caml_string_of_jsbytes("eq"),
       caml_string_of_jsbytes("compare")],
     _jf_=
      [0,caml_string_of_jsbytes("c_Var"),caml_string_of_jsbytes("c_Value")],
     shared$4=[0,caml_string_of_jsbytes("c_S"),caml_string_of_jsbytes("c_O")],
     cst_List_logic_to_ground_exn_v=
      caml_string_of_jsbytes("List.logic_to_ground_exn: variables inside"),
     cst$128=caml_string_of_jsbytes(""),
     cst$127=caml_string_of_jsbytes(""),
     cst$126=caml_string_of_jsbytes("; "),
     cst$125=caml_string_of_jsbytes(""),
     cst$129=caml_string_of_jsbytes("]"),
     cst$130=caml_string_of_jsbytes("["),
     cst$122=caml_string_of_jsbytes(""),
     cst$120=caml_string_of_jsbytes("; "),
     cst$121=caml_string_of_jsbytes(""),
     cst$119=caml_string_of_jsbytes(""),
     cst$123=caml_string_of_jsbytes("]"),
     cst$124=caml_string_of_jsbytes("["),
     cst_Nil$0=caml_string_of_jsbytes("Nil"),
     cst$117=caml_string_of_jsbytes(""),
     cst$118=caml_string_of_jsbytes(""),
     cst$115=caml_string_of_jsbytes(""),
     cst$116=caml_string_of_jsbytes(""),
     cst_Nil=caml_string_of_jsbytes("Nil"),
     cst_Cons=caml_string_of_jsbytes("Cons"),
     cst$113=caml_string_of_jsbytes(""),
     cst$114=caml_string_of_jsbytes(""),
     cst$111=caml_string_of_jsbytes(""),
     cst$112=caml_string_of_jsbytes(""),
     cst$109=caml_string_of_jsbytes(""),
     cst$110=caml_string_of_jsbytes(""),
     cst$107=caml_string_of_jsbytes(""),
     cst$108=caml_string_of_jsbytes(""),
     cst$105=caml_string_of_jsbytes(""),
     cst$106=caml_string_of_jsbytes(""),
     partial$13=[12,41,[17,0,0]],
     partial$14=[0,caml_string_of_jsbytes("@,"),0,0],
     cst$103=caml_string_of_jsbytes(""),
     cst$104=caml_string_of_jsbytes(""),
     _k$_=
      [0,
       caml_string_of_jsbytes("gmap"),
       caml_string_of_jsbytes("html"),
       caml_string_of_jsbytes("show"),
       caml_string_of_jsbytes("eq"),
       caml_string_of_jsbytes("fmt"),
       caml_string_of_jsbytes("compare"),
       caml_string_of_jsbytes("foldl"),
       caml_string_of_jsbytes("foldr")],
     _la_=[0,caml_string_of_jsbytes("c_Cons"),caml_string_of_jsbytes("c_Nil")],
     _lb_=
      [0,caml_string_of_jsbytes("c_Value"),caml_string_of_jsbytes("c_Var")],
     _lc_=[0,caml_string_of_jsbytes("c_Nil"),caml_string_of_jsbytes("c_Cons")],
     _ld_=
      [0,
       caml_string_of_jsbytes("show"),
       caml_string_of_jsbytes("html"),
       caml_string_of_jsbytes("gmap"),
       caml_string_of_jsbytes("foldr"),
       caml_string_of_jsbytes("foldl"),
       caml_string_of_jsbytes("fmt"),
       caml_string_of_jsbytes("eq"),
       caml_string_of_jsbytes("compare")],
     shared$5=
      [0,caml_string_of_jsbytes("c_Var"),caml_string_of_jsbytes("c_Value")],
     Stdlib_List=global_data.Stdlib__List,
     Stdlib_String=global_data.Stdlib__String,
     Stdlib_Printf=global_data.Stdlib__Printf,
     Stdlib_Obj=global_data.Stdlib__Obj,
     Assert_failure=global_data.Assert_failure,
     Stdlib_Hashtbl=global_data.Stdlib__Hashtbl,
     Stdlib=global_data.Stdlib,
     Stdlib_Set=global_data.Stdlib__Set,
     Stdlib_Map=global_data.Stdlib__Map,
     Match_failure=global_data.Match_failure,
     Stdlib_ListLabels=global_data.Stdlib__ListLabels,
     CamlinternalOO=global_data.CamlinternalOO,
     Stdlib_Format=global_data.Stdlib__Format,
     GT=global_data.GT,
     HTML=global_data.HTML,
     OCanren=[0];
    caml_register_global(315,OCanren,"OCanren__");
    var
     scope=[0,0],
     _e_=
      [0,
       [11,
        caml_string_of_jsbytes("_."),
        [4,0,0,0,[11,caml_string_of_jsbytes("{=/= "),[2,0,[12,125,0]]]]],
       caml_string_of_jsbytes("_.%d{=/= %s}")],
     _f_=
      [0,
       [11,caml_string_of_jsbytes("_."),[4,0,0,0,0]],
       caml_string_of_jsbytes("_.%d")],
     _g_=
      [0,
       [11,
        caml_string_of_jsbytes("boxed "),
        [4,0,0,0,[11,caml_string_of_jsbytes(" <"),[2,0,[12,62,0]]]]],
       caml_string_of_jsbytes("boxed %d <%s>")],
     _h_=
      [0,
       [11,caml_string_of_jsbytes("int<"),[4,0,0,0,[12,62,0]]],
       caml_string_of_jsbytes("int<%d>")],
     _i_=
      [0,
       [11,caml_string_of_jsbytes("string<"),[2,0,[12,62,0]]],
       caml_string_of_jsbytes("string<%s>")],
     _j_=
      [0,
       [11,caml_string_of_jsbytes("double<"),[8,[0,0,1],0,0,[12,62,0]]],
       caml_string_of_jsbytes("double<%e>")],
     _k_=[0,caml_string_of_jsbytes("OCanren/src/core/Term.ml"),193,9],
     _d_=
      [0,
       [11,
        caml_string_of_jsbytes("OCanren fatal: invalid value tag ("),
        [4,0,0,0,[12,41,0]]],
       caml_string_of_jsbytes("OCanren fatal: invalid value tag (%d)")],
     _q_=[0,1],
     _p_=[0,caml_string_of_jsbytes("OCanren/src/core/Subst.ml"),181,15],
     _r_=[0,caml_string_of_jsbytes("OCanren/src/core/Disequality.ml"),180,8],
     _ay_=[0,[15,0],caml_string_of_jsbytes("%a")],
     _az_=[0,[2,0,0],caml_string_of_jsbytes("%s")],
     _av_=[0,[12,32,[2,0,0]],caml_string_of_jsbytes(" %s")],
     _aw_=
      [0,
       [11,caml_string_of_jsbytes("_."),[4,0,0,0,[2,0,0]]],
       caml_string_of_jsbytes("_.%d%s")],
     _O_=
      [0,
       [11,
        caml_string_of_jsbytes("Var ("),
        [2,0,[11,caml_string_of_jsbytes(", "),[2,0,[12,41,0]]]]],
       caml_string_of_jsbytes("Var (%s, %s)")],
     _N_=
      [0,
       [11,caml_string_of_jsbytes("Value ("),[2,0,[12,41,0]]],
       caml_string_of_jsbytes("Value (%s)")],
     _G_=[0,0,0],
     _F_=[1,0],
     _B_=
      [0,
       [11,
        caml_string_of_jsbytes("Var "),
        [18,
         [1,[0,0,caml_string_of_jsbytes("")]],
         [12,
          40,
          [17,
           [0,caml_string_of_jsbytes("@,"),0,0],
           [15,
            [12,
             44,
             [17,
              [0,caml_string_of_jsbytes("@,"),0,0],
              [17,
               [0,caml_string_of_jsbytes("@ "),1,0],
               [15,[17,partial$0,partial]]]]]]]]]],
       caml_string_of_jsbytes("Var @[(@,%a,@,@ %a@,)@]")],
     _A_=
      [0,
       [11,
        caml_string_of_jsbytes("Value "),
        [18,
         [1,[0,0,caml_string_of_jsbytes("")]],
         [12,
          40,
          [17,
           [0,caml_string_of_jsbytes("@,"),0,0],
           [15,[17,[0,caml_string_of_jsbytes("@,"),0,0],[12,41,[17,0,0]]]]]]]],
       caml_string_of_jsbytes("Value @[(@,%a@,)@]")],
     _aI_=[0,0,0],
     _aM_=[0,caml_string_of_jsbytes("OCanren/src/core/Core.ml"),789,28],
     _aL_=[0,caml_string_of_jsbytes("OCanren/src/core/Core.ml"),714,36],
     _aK_=[0,caml_string_of_jsbytes("OCanren/src/core/Core.ml"),478,10],
     _aJ_=[0,caml_string_of_jsbytes("OCanren/src/core/Core.ml"),226,4],
     _b2_=
      [0,
       [12,
        40,
        [2,
         0,
         [11,
          caml_string_of_jsbytes(", "),
          [2,0,[11,caml_string_of_jsbytes(", "),[2,0,[12,41,0]]]]]]],
       caml_string_of_jsbytes("(%s, %s, %s)")],
     _b0_=
      [0,
       [12,
        40,
        [2,
         0,
         [11,
          caml_string_of_jsbytes(", "),
          [2,0,[11,caml_string_of_jsbytes(", "),[2,0,[12,41,0]]]]]]],
       caml_string_of_jsbytes("(%s, %s, %s)")],
     _bS_=
      [0,
       [18,
        [1,[0,0,caml_string_of_jsbytes("")]],
        [12,
         40,
         [17,
          [0,caml_string_of_jsbytes("@,"),0,0],
          [15,
           [12,
            44,
            [17,
             [0,caml_string_of_jsbytes("@,"),0,0],
             [17,
              [0,caml_string_of_jsbytes("@ "),1,0],
              [15,[12,44,[17,partial$2,partial$1]]]]]]]]]],
       caml_string_of_jsbytes("@[(@,%a,@,@ %a,@,@ %a@,)@]")],
     _bR_=
      [0,
       [18,
        [1,[0,0,caml_string_of_jsbytes("")]],
        [12,
         40,
         [17,
          [0,caml_string_of_jsbytes("@,"),0,0],
          [15,
           [12,
            44,
            [17,
             [0,caml_string_of_jsbytes("@,"),0,0],
             [17,
              [0,caml_string_of_jsbytes("@ "),1,0],
              [15,[12,44,[17,partial$4,partial$3]]]]]]]]]],
       caml_string_of_jsbytes("@[(@,%a,@,@ %a,@,@ %a@,)@]")],
     _bv_=
      [0,
       [12,
        40,
        [2,
         0,
         [11,
          caml_string_of_jsbytes(", "),
          [2,0,[11,caml_string_of_jsbytes(", "),[2,0,[12,41,0]]]]]]],
       caml_string_of_jsbytes("(%s, %s, %s)")],
     _bn_=
      [0,
       [18,
        [1,[0,0,caml_string_of_jsbytes("")]],
        [12,
         40,
         [17,
          [0,caml_string_of_jsbytes("@,"),0,0],
          [15,
           [12,
            44,
            [17,
             [0,caml_string_of_jsbytes("@,"),0,0],
             [17,
              [0,caml_string_of_jsbytes("@ "),1,0],
              [15,[12,44,[17,partial$6,partial$5]]]]]]]]]],
       caml_string_of_jsbytes("@[(@,%a,@,@ %a,@,@ %a@,)@]")],
     _a3_=
      [0,
       [12,
        40,
        [2,
         0,
         [11,
          caml_string_of_jsbytes(", "),
          [2,0,[11,caml_string_of_jsbytes(", "),[2,0,[12,41,0]]]]]]],
       caml_string_of_jsbytes("(%s, %s, %s)")],
     _aV_=
      [0,
       [18,
        [1,[0,0,caml_string_of_jsbytes("")]],
        [12,
         40,
         [17,
          [0,caml_string_of_jsbytes("@,"),0,0],
          [15,
           [12,
            44,
            [17,
             [0,caml_string_of_jsbytes("@,"),0,0],
             [17,
              [0,caml_string_of_jsbytes("@ "),1,0],
              [15,[12,44,[17,partial$8,partial$7]]]]]]]]]],
       caml_string_of_jsbytes("@[(@,%a,@,@ %a,@,@ %a@,)@]")],
     _eo_=
      [0,
       [12,40,[2,0,[11,caml_string_of_jsbytes(", "),[2,0,[12,41,0]]]]],
       caml_string_of_jsbytes("(%s, %s)")],
     _em_=
      [0,
       [12,40,[2,0,[11,caml_string_of_jsbytes(", "),[2,0,[12,41,0]]]]],
       caml_string_of_jsbytes("(%s, %s)")],
     _ec_=
      [0,
       [18,
        [1,[0,0,caml_string_of_jsbytes("")]],
        [12,
         40,
         [17,
          [0,caml_string_of_jsbytes("@,"),0,0],
          [15,
           [12,
            44,
            [17,
             [0,caml_string_of_jsbytes("@,"),0,0],
             [17,
              [0,caml_string_of_jsbytes("@ "),1,0],
              [15,[17,[0,caml_string_of_jsbytes("@,"),0,0],[12,41,partial$9]]]]]]]]]],
       caml_string_of_jsbytes("@[(@,%a,@,@ %a@,)@]")],
     _eb_=
      [0,
       [18,
        [1,[0,0,caml_string_of_jsbytes("")]],
        [12,
         40,
         [17,
          [0,caml_string_of_jsbytes("@,"),0,0],
          [15,
           [12,
            44,
            [17,
             [0,caml_string_of_jsbytes("@,"),0,0],
             [17,
              [0,caml_string_of_jsbytes("@ "),1,0],
              [15,
               [17,[0,caml_string_of_jsbytes("@,"),0,0],[12,41,partial$10]]]]]]]]]],
       caml_string_of_jsbytes("@[(@,%a,@,@ %a@,)@]")],
     _dP_=
      [0,
       [12,40,[2,0,[11,caml_string_of_jsbytes(", "),[2,0,[12,41,0]]]]],
       caml_string_of_jsbytes("(%s, %s)")],
     _dF_=
      [0,
       [18,
        [1,[0,0,caml_string_of_jsbytes("")]],
        [12,
         40,
         [17,
          [0,caml_string_of_jsbytes("@,"),0,0],
          [15,
           [12,
            44,
            [17,
             [0,caml_string_of_jsbytes("@,"),0,0],
             [17,
              [0,caml_string_of_jsbytes("@ "),1,0],
              [15,
               [17,[0,caml_string_of_jsbytes("@,"),0,0],[12,41,partial$11]]]]]]]]]],
       caml_string_of_jsbytes("@[(@,%a,@,@ %a@,)@]")],
     _dh_=
      [0,
       [12,40,[2,0,[11,caml_string_of_jsbytes(", "),[2,0,[12,41,0]]]]],
       caml_string_of_jsbytes("(%s, %s)")],
     _c9_=
      [0,
       [18,
        [1,[0,0,caml_string_of_jsbytes("")]],
        [12,
         40,
         [17,
          [0,caml_string_of_jsbytes("@,"),0,0],
          [15,
           [12,
            44,
            [17,
             [0,caml_string_of_jsbytes("@,"),0,0],
             [17,
              [0,caml_string_of_jsbytes("@ "),1,0],
              [15,
               [17,[0,caml_string_of_jsbytes("@,"),0,0],[12,41,partial$12]]]]]]]]]],
       caml_string_of_jsbytes("@[(@,%a,@,@ %a@,)@]")],
     _jv_=
      [0,
       [11,caml_string_of_jsbytes("S ("),[2,0,[12,41,0]]],
       caml_string_of_jsbytes("S (%s)")],
     _jo_=[0,0],
     _jk_=[0,[12,79,0],caml_string_of_jsbytes("O")],
     _jj_=
      [0,
       [11,
        caml_string_of_jsbytes("S "),
        [18,
         [1,[0,0,caml_string_of_jsbytes("")]],
         [12,
          40,
          [17,
           [0,caml_string_of_jsbytes("@,"),0,0],
           [15,[17,[0,caml_string_of_jsbytes("@,"),0,0],[12,41,[17,0,0]]]]]]]],
       caml_string_of_jsbytes("S @[(@,%a@,)@]")],
     _n2_=[0,caml_string_of_jsbytes("OCanren/src/std/List.ml"),133,43],
     _nU_=[0,[15,0],caml_string_of_jsbytes("%a")],
     _nV_=[0,[2,0,0],caml_string_of_jsbytes("%s")],
     _ny_=
      [0,
       [15,[12,59,[17,[0,caml_string_of_jsbytes("@ "),1,0],0]]],
       caml_string_of_jsbytes("%a;@ ")],
     _nx_=
      [0,
       [18,[1,[0,0,caml_string_of_jsbytes("")]],[12,91,0]],
       caml_string_of_jsbytes("@[[")],
     _nz_=[0,[12,93,[17,0,0]],caml_string_of_jsbytes("]@]")],
     _lt_=
      [0,
       [11,
        caml_string_of_jsbytes("Cons ("),
        [2,0,[11,caml_string_of_jsbytes(", "),[2,0,[12,41,0]]]]],
       caml_string_of_jsbytes("Cons (%s, %s)")],
     _lm_=[0,0,0],
     _li_=
      [0,[11,caml_string_of_jsbytes("Nil"),0],caml_string_of_jsbytes("Nil")],
     _lh_=
      [0,
       [11,
        caml_string_of_jsbytes("Cons "),
        [18,
         [1,[0,0,caml_string_of_jsbytes("")]],
         [12,
          40,
          [17,
           [0,caml_string_of_jsbytes("@,"),0,0],
           [15,
            [12,
             44,
             [17,
              [0,caml_string_of_jsbytes("@,"),0,0],
              [17,
               [0,caml_string_of_jsbytes("@ "),1,0],
               [15,[17,partial$14,partial$13]]]]]]]]]],
       caml_string_of_jsbytes("Cons @[(@,%a,@,@ %a@,)@]")],
     tabling_env=-1,
     non_local_scope=-6;
    function new_scope(param){scope[1]++;return scope[1]}
    function make(env,scope,index)
     {return [0,global_anchor,env,index,0,scope,0]}
    function is_wildcard(param){var index=param[3];return -42 === index?1:0}
    function make_wc(env,scope){return make(env,scope,-42)}
    var dummy=make(0,0,0);
    function valid_anchor(anchor){return anchor === global_anchor?1:0}
    function reify(r,param)
     {var index=param[3],constraints=param[6];
      function _aiQ_(x){return caml_call1(r,x)}
      return [0,index,caml_call2(Stdlib_List[19],_aiQ_,constraints)]}
    function equal(x,y)
     {var _aiO_=x[3] === y[3]?1:0,_aiP_=_aiO_?x[2] === y[2]?1:0:_aiO_;
      return _aiP_}
    function compare(x,y)
     {return x[3] !== y[3]?x[3] - y[3] | 0:x[2] - y[2] | 0}
    function hash(x){return caml_call1(Stdlib_Hashtbl[28],[0,x[2],x[3]])}
    var
     VarSet=caml_call1(Stdlib_Set[1],[0,compare]),
     VarTbl=caml_call1(Stdlib_Hashtbl[26],[0,equal,hash]),
     include=caml_call1(Stdlib_Map[1],[0,compare]),
     empty=include[1],
     is_empty=include[2],
     mem=include[3],
     add=include[4],
     singleton=include[6],
     remove=include[7],
     merge=include[8],
     union=include[9],
     compare$0=include[10],
     equal$0=include[11],
     iter=include[12],
     fold=include[13],
     for_all=include[14],
     exists=include[15],
     filter=include[16],
     filter_map=include[17],
     partition=include[18],
     cardinal=include[19],
     bindings=include[20],
     min_binding=include[21],
     min_binding_opt=include[22],
     max_binding=include[23],
     max_binding_opt=include[24],
     choose=include[25],
     choose_opt=include[26],
     split=include[27],
     find=include[28],
     find_opt=include[29],
     find_first=include[30],
     find_first_opt=include[31],
     find_last=include[32],
     find_last_opt=include[33],
     map=include[34],
     mapi=include[35],
     to_seq=include[36],
     to_rev_seq=include[37],
     to_seq_from=include[38],
     add_seq=include[39],
     of_seq=include[40];
    function update(k,f,m)
     {try
       {var _aiM_=[0,caml_call2(find,k,m)],_aiL_=_aiM_}
      catch(_aiN_)
       {_aiN_ = caml_wrap_exception(_aiN_);
        if(_aiN_ !== Stdlib[8])throw _aiN_;
        var _aiL_=0}
      var match=caml_call1(f,_aiL_);
      if(! match)return caml_call2(remove,k,m);
      var x=match[1];
      return caml_call3(add,k,x,m)}
    var
     VarMap=
      [0,
       empty,
       is_empty,
       mem,
       add,
       singleton,
       remove,
       merge,
       union,
       compare$0,
       equal$0,
       iter,
       fold,
       for_all,
       exists,
       filter,
       filter_map,
       partition,
       cardinal,
       bindings,
       min_binding,
       min_binding_opt,
       max_binding,
       max_binding_opt,
       choose,
       choose_opt,
       split,
       find,
       find_opt,
       find_first,
       find_first_opt,
       find_last,
       find_last_opt,
       map,
       mapi,
       to_seq,
       to_rev_seq,
       to_seq_from,
       add_seq,
       of_seq,
       update];
    function repr(_aiK_){return _aiK_}
    var var_size=dummy.length - 1,var_tag=caml_obj_tag(dummy);
    function is_var(tx,sx,x)
     {if(tx === var_tag && sx === var_size)
       {var anchor=x[1],_aiJ_=caml_call1(Stdlib_Obj[1],anchor);
        return _aiJ_?valid_anchor(anchor):_aiJ_}
      return 0}
    function is_box(t)
     {if(t <= Stdlib_Obj[5] && Stdlib_Obj[4] <= t)return 1;return 0}
    var _a_=Stdlib_Obj[18],_b_=Stdlib_Obj[13],_c_=Stdlib_Obj[14];
    function is_valid_tag_exn(t)
     {var _aiH_=_a_ === t?1:0,switch$0=0;
      if(_aiH_)
       var _aiE_=_aiH_;
      else
       {var _aiI_=_b_ === t?1:0;
        if(_aiI_)var _aiE_=_aiI_;else{var _aiF_=_c_ === t?1:0;switch$0 = 1}}
      if(! switch$0)var _aiF_=_aiE_;
      if(_aiF_)return 0;
      var _aiG_=caml_call2(Stdlib_Printf[4],_d_,t);
      return caml_call1(Stdlib[2],_aiG_)}
    function var$0(x)
     {var tx=caml_obj_tag(x);
      if(! is_box(tx))return 0;
      var sx=x.length - 1;
      return is_var(tx,sx,x)?[0,x]:0}
    function map$0(fvar,fval,x)
     {var tx=caml_obj_tag(x);
      if(! is_box(tx)){is_valid_tag_exn(tx);return caml_call1(fval,x)}
      var sx=x.length - 1;
      if(is_var(tx,sx,x))return caml_call1(fvar,x);
      var y=x.slice(),_aiC_=sx - 1 | 0,_aiB_=0;
      if(_aiC_ >= 0)
       {var i=_aiB_;
        for(;;)
         {y[1 + i] = map$0(fvar,fval,x[1 + i]);
          var _aiD_=i + 1 | 0;
          if(_aiC_ !== i){var i=_aiD_;continue}
          break}}
      return y}
    function iter$0(fvar,fval,x)
     {var tx=caml_obj_tag(x);
      if(! is_box(tx)){is_valid_tag_exn(tx);return caml_call1(fval,x)}
      var sx=x.length - 1;
      if(is_var(tx,sx,x))return caml_call1(fvar,x);
      var _aiz_=sx - 1 | 0,_aiy_=0;
      if(_aiz_ >= 0)
       {var i=_aiy_;
        for(;;)
         {iter$0(fvar,fval,x[1 + i]);
          var _aiA_=i + 1 | 0;
          if(_aiz_ !== i){var i=_aiA_;continue}
          break}}
      return 0}
    function show(x)
     {var tx=caml_obj_tag(x);
      if(! is_box(tx))
       {is_valid_tag_exn(tx);
        if(tx === Stdlib_Obj[18])
         return caml_call1(caml_call1(Stdlib_Printf[4],_h_),x);
        if(tx === Stdlib_Obj[13])
         return caml_call1(caml_call1(Stdlib_Printf[4],_i_),x);
        if(tx === Stdlib_Obj[14])
         return caml_call1(caml_call1(Stdlib_Printf[4],_j_),x);
        throw [0,Assert_failure,_k_]}
      var sx=x.length - 1;
      if(! is_var(tx,sx,x))
       {var
         inner=
          function(i)
           {if(i >= sx)return 0;
            var _aix_=inner(i + 1 | 0);
            return [0,show(x[1 + i]),_aix_]},
         _aiv_=inner(0),
         _aiw_=caml_call1(caml_call1(Stdlib_String[6],cst$0),_aiv_);
        return caml_call3(Stdlib_Printf[4],_g_,tx,_aiw_)}
      var _ais_=x[6];
      if(! _ais_)return caml_call2(Stdlib_Printf[4],_f_,x[3]);
      var
       _ait_=caml_call2(Stdlib_List[19],show,_ais_),
       _aiu_=caml_call1(caml_call1(Stdlib_String[6],cst),_ait_);
      return caml_call3(Stdlib_Printf[4],_e_,x[3],_aiu_)}
    function fold$0(fvar,fval,init,x)
     {var tx=caml_obj_tag(x);
      if(! is_box(tx)){is_valid_tag_exn(tx);return caml_call2(fval,init,x)}
      var sx=x.length - 1;
      if(is_var(tx,sx,x))return caml_call1(caml_call1(fvar,init),x);
      var i=0,acc=init;
      for(;;)
       {if(i >= sx)return acc;
        var acc$0=fold$0(fvar,fval,acc,x[1 + i]),i$0=i + 1 | 0,i=i$0,acc=acc$0}}
    var
     Different_shape=
      [248,cst_OCanren_Term_Different_sha,caml_fresh_oo_id(0)];
    function fold2(fvar,fval,fk,init,x,y)
     {var
       ty=caml_obj_tag(y),
       tx=caml_obj_tag(x),
       match=is_box(tx),
       match$0=is_box(ty);
      if(! match)
       {if(match$0)
         {is_valid_tag_exn(tx);
          var sy$0=y.length - 1;
          if(is_var(ty,sy$0,y))return caml_call4(fk,init,1,y,x);
          throw [0,Different_shape,tx,ty]}
        is_valid_tag_exn(tx);
        is_valid_tag_exn(ty);
        if(tx === ty)return caml_call3(fval,init,x,y);
        throw [0,Different_shape,tx,ty]}
      if(! match$0)
       {is_valid_tag_exn(ty);
        var sx$0=x.length - 1;
        if(is_var(tx,sx$0,x))return caml_call4(fk,init,0,x,y);
        throw [0,Different_shape,tx,ty]}
      var
       sy=y.length - 1,
       sx=x.length - 1,
       match$1=is_var(tx,sx,x),
       match$2=is_var(ty,sy,y);
      if(match$1)
       return match$2?caml_call3(fvar,init,x,y):caml_call4(fk,init,0,x,y);
      if(match$2)return caml_call4(fk,init,1,y,x);
      if(tx === ty && sx === sy)
       {var i=0,acc=init;
        for(;;)
         {if(i >= sx)return acc;
          var
           acc$0=fold2(fvar,fval,fk,acc,x[1 + i],y[1 + i]),
           i$0=i + 1 | 0,
           i=i$0,
           acc=acc$0}}
      throw [0,Different_shape,tx,ty]}
    function equal$1(x,y)
     {try
       {var
         _aif_=1,
         _aig_=function(param,_air_,_aiq_,_aip_){return 0},
         _aih_=
          function(acc,x,y){var _aio_=acc?caml_equal(x,y):acc;return _aio_},
         _aii_=
          fold2
           (function(acc,v,u)
             {if(acc)
               {var _aik_=equal(v,u);
                if(_aik_)
                 {var
                   _ail_=caml_call1(Stdlib_List[1],u[6]),
                   _aim_=caml_call1(Stdlib_List[1],v[6]) === _ail_?1:0;
                  if(_aim_)
                   return caml_call3(Stdlib_List[34],equal$1,v[6],u[6]);
                  var _ain_=_aim_}
                else
                 var _ain_=_aik_}
              else
               var _ain_=acc;
              return _ain_},
            _aih_,
            _aig_,
            _aif_,
            x,
            y);
        return _aii_}
      catch(_aij_)
       {_aij_ = caml_wrap_exception(_aij_);
        if(_aij_[1] === Different_shape)return 0;
        throw _aij_}}
    function compare$1(x,y)
     {try
       {var
         _ah6_=0,
         _ah7_=function(param,_aie_,_aid_,_aic_){return -1},
         _ah8_=function(acc,x,y){return 0 === acc?caml_compare(x,y):acc},
         _ah9_=
          fold2
           (function(acc,v,u)
             {if(0 !== acc)return acc;
              var acc$0=compare(v,u);
              if(0 !== acc$0)return acc$0;
              var _ah__=u[6],_ah$_=v[6],_aia_=0;
              function _aib_(acc,x,y){return 0 === acc?compare$1(x,y):acc}
              return caml_call4(Stdlib_List[30],_aib_,_aia_,_ah$_,_ah__)},
            _ah8_,
            _ah7_,
            _ah6_,
            x,
            y);
        return _ah9_}
      catch(exn)
       {exn = caml_wrap_exception(exn);
        if(exn[1] !== Different_shape)throw exn;
        var ty=exn[3],tx=exn[2];
        return caml_compare(tx,ty)}}
    function hash$0(x)
     {var _ahY_=1;
      function _ahZ_(acc,x)
       {var _ah5_=[0,acc,caml_call1(Stdlib_Hashtbl[28],x)];
        return caml_call1(Stdlib_Hashtbl[28],_ah5_)}
      return fold$0
              (function(acc,v)
                {var _ah0_=v[6];
                 function _ah1_(acc,x)
                  {var _ah4_=[0,acc,hash$0(x)];
                   return caml_call1(Stdlib_Hashtbl[28],_ah4_)}
                 var
                  _ah2_=caml_call3(Stdlib_List[25],_ah1_,acc,_ah0_),
                  _ah3_=[0,hash(v),_ah2_];
                 return caml_call1(Stdlib_Hashtbl[28],_ah3_)},
               _ahZ_,
               _ahY_,
               x)}
    var
     _l_=
      [0,
       tabling_env,
       non_local_scope,
       new_scope,
       valid_anchor,
       dummy,
       make,
       reify,
       equal,
       compare,
       hash,
       is_wildcard,
       make_wc],
     OCanren_Term=
      [0,
       _l_,
       VarSet,
       VarTbl,
       VarMap,
       repr,
       var$0,
       map$0,
       iter$0,
       fold$0,
       Different_shape,
       fold2,
       show,
       equal$1,
       compare$1,
       hash$0];
    caml_register_global(325,OCanren_Term,"OCanren__Term");
    var last_anchor=[0,11],first_var=10;
    function empty$0(param)
     {last_anchor[1]++;return [0,last_anchor[1],first_var]}
    function create(anchor){return [0,anchor,first_var]}
    function fresh(scope,e)
     {var v=caml_call3(_l_[6],e[1],scope,e[2]);e[2] = 1 + e[2] | 0;return v}
    function wc(scope,e){return caml_call2(_l_[12],e[1],scope)}
    function check(env,v){return v[2] === env[1]?1:0}
    function check_exn(env,v)
     {return check(env,v)
              ?0
              :caml_call1(Stdlib[2],cst_OCanren_fatal_Env_check_wr)}
    function var$1(env,x)
     {var res=var$0(x);
      if(! res)return 0;
      var v=res[1];
      check_exn(env,v);
      return res}
    function is_var$0(env,x){return 0 !== var$1(env,x)?1:0}
    function is_wc(env,x)
     {var match=var$0(x);
      if(! match)return 0;
      var v=match[1];
      check_exn(env,v);
      return caml_call1(_l_[11],v)}
    function freevars(env,x)
     {var _ahW_=VarSet[1];
      function _ahX_(acc,param){return acc}
      return fold$0
              (function(acc,v){return caml_call2(VarSet[4],v,acc)},
               _ahX_,
               _ahW_,
               x)}
    var Open_Term=[248,cst_OCanren_Env_Open_Term,caml_fresh_oo_id(0)];
    function is_open(env,x)
     {try
       {var _ahT_=function(param){return 0};
        iter$0(function(param){throw Open_Term},_ahT_,x);
        var _ahU_=0;
        return _ahU_}
      catch(_ahV_)
       {_ahV_ = caml_wrap_exception(_ahV_);
        if(_ahV_ === Open_Term)return 1;
        throw _ahV_}}
    function equal$2(param,_ahS_)
     {var a1=param[1],a2=_ahS_[1];return a1 === a2?1:0}
    function symbol(f,g,x){return caml_call1(f,caml_call1(g,x))}
    function return$0(a,param){return a}
    function fmap(f,r,env){return caml_call1(f,caml_call1(r,env))}
    function symbol$0(f,x,env){return caml_call2(f,env,caml_call1(x,env))}
    function bind(r,k,env){return caml_call2(k,caml_call1(r,env),env)}
    function chain(f,env,x)
     {return caml_call2(f,function(_ahR_){return x},env)}
    function let$0(x,f){return function(_ahQ_){return bind(x,f,_ahQ_)}}
    function let$1(x,f){return function(_ahP_){return fmap(f,x,_ahP_)}}
    var Syntax=[0,let$0,let$1];
    function symbol$1(g,f)
     {function _ahK_(_ahO_){return symbol}
      function _ahL_(_ahN_){return symbol$0(_ahK_,f,_ahN_)}
      return function(_ahM_){return symbol$0(_ahL_,g,_ahM_)}}
    function list_mapm(f)
     {function helper(param)
       {if(param)
         {var
           tl=param[2],
           h=param[1],
           _ahz_=
            function(h)
             {function _ahF_(tl)
               {var _ahI_=[0,h,tl];return function(_ahJ_){return _ahI_}}
              var _ahG_=helper(tl);
              return function(_ahH_){return bind(_ahG_,_ahF_,_ahH_)}},
           _ahA_=caml_call1(f,function(_ahE_){return h});
          return function(_ahD_){return bind(_ahA_,_ahz_,_ahD_)}}
        var _ahB_=0;
        return function(_ahC_){return _ahB_}}
      return helper}
    var
     _m_=[0,return$0,fmap,bind,symbol$0,chain,symbol$1,list_mapm,Syntax],
     OCanren_Env=
      [0,
       empty$0,
       create,
       fresh,
       wc,
       check,
       check_exn,
       is_var$0,
       is_wc,
       var$1,
       freevars,
       is_open,
       equal$2,
       _m_];
    caml_register_global(326,OCanren_Env,"OCanren__Env");
    var data=[0,1];
    function do_occurs_check(param){return data[1]}
    function occurs_check_on(param){data[1] = 1;return 0}
    function occurs_check_off(param){data[1] = 0;return 0}
    var OCanren_Runconf=[0,do_occurs_check,occurs_check_on,occurs_check_off];
    caml_register_global(327,OCanren_Runconf,"OCanren__Runconf");
    var stat=[0,0];
    function walk_counter(param){return stat[1]}
    function walk_incr(param){stat[1] = stat[1] + 1 | 0;return 0}
    function is_relevant(env,vs,param)
     {var term=param[2],var$0=param[1],_ahx_=caml_call2(VarSet[3],var$0,vs);
      if(_ahx_)
       var _ahy_=_ahx_;
      else
       {var match=var$1(env,term);
        if(match){var v=match[1];return caml_call2(VarSet[3],v,vs)}
        var _ahy_=0}
      return _ahy_}
    function equal$3(param,_ahv_)
     {var
       p=_ahv_[2],
       u=_ahv_[1],
       t=param[2],
       v=param[1],
       _ahw_=caml_call2(_l_[8],v,u);
      return _ahw_?_ahw_:equal$1(t,p)}
    function compare$2(param,_ahu_)
     {var
       p=_ahu_[2],
       u=_ahu_[1],
       t=param[2],
       v=param[1],
       res=caml_call2(_l_[9],v,u);
      return 0 === res?compare$1(t,p):res}
    function hash$1(param)
     {var
       term=param[2],
       var$0=param[1],
       _ahs_=hash$0(term),
       _aht_=[0,caml_call1(_l_[10],var$0),_ahs_];
      return caml_call1(Stdlib_Hashtbl[28],_aht_)}
    var Binding=[0,is_relevant,equal$3,compare$2,hash$1],_n_=VarMap[1];
    function _o_(subst,param)
     {var term=param[2],var$0=param[1];
      return caml_call2(VarMap[3],var$0,subst)
              ?caml_call1(Stdlib[1],cst_OCanren_fatal_Subst_of_lis)
              :caml_call3(VarMap[4],var$0,term,subst)}
    var of_list=caml_call2(Stdlib_ListLabels[25],_o_,_n_);
    function of_map(m){return m}
    function split$0(s)
     {var _ahq_=0;
      function _ahr_(var$0,term,xs){return [0,[0,var$0,term],xs]}
      return caml_call3(VarMap[12],_ahr_,s,_ahq_)}
    function walk(env,subst,x)
     {function walkv$0(counter,env,subst,v)
       {walk_incr(0);
        check_exn(env,v);
        if(caml_call1(_l_[11],v))return [2,v];
        var _ahn_=v[4];
        if(! _ahn_)
         try
          {var _aho_=walkt(env,subst,caml_call2(VarMap[27],v,subst));
           return _aho_}
         catch(_ahp_)
          {_ahp_ = caml_wrap_exception(_ahp_);
           if(_ahp_ === Stdlib[8])return [0,v];
           throw _ahp_}
        var term=_ahn_[1];
        if(counter >= 50)
         return caml_trampoline_return(walkt$0,[0,env,subst,term]);
        var counter$0=counter + 1 | 0;
        return walkt$0(counter$0,env,subst,term)}
      function walkt$0(counter,env,subst,t)
       {walk_incr(0);
        var match=var$1(env,t);
        if(! match)return [1,t];
        var v=match[1];
        if(caml_call1(_l_[11],v))return [2,v];
        if(counter >= 50)
         return caml_trampoline_return(walkv$0,[0,env,subst,v]);
        var counter$0=counter + 1 | 0;
        return walkv$0(counter$0,env,subst,v)}
      function walkv(env,subst,v)
       {return caml_trampoline(walkv$0(0,env,subst,v))}
      function walkt(env,subst,t)
       {return caml_trampoline(walkt$0(0,env,subst,t))}
      return walkv(env,subst,x)}
    function map$1(fvar,fval,env,subst,x)
     {function deepfvar(v)
       {check_exn(env,v);
        var match=walk(env,subst,v);
        if(1 === match[0]){var x=match[1];return map$0(deepfvar,fval,x)}
        var v$0=match[1];
        return caml_call1(fvar,v$0)}
      return map$0(deepfvar,fval,x)}
    var Occurs_check=[248,cst_OCanren_Subst_Occurs_check,caml_fresh_oo_id(0)];
    function occurs(env,subst,var$0,term)
     {function fval(x){return 0}
      function deepfvar(v)
       {check_exn(env,v);
        var match=walk(env,subst,v);
        if(1 === match[0]){var x=match[1];return iter$0(deepfvar,fval,x)}
        var v$0=match[1],_ahm_=caml_call2(_l_[8],v$0,var$0);
        if(_ahm_)throw Occurs_check;
        return _ahm_}
      return iter$0(deepfvar,fval,term)}
    var
     Unification_failed=
      [248,cst_OCanren_Subst_Unification_,caml_fresh_oo_id(0)];
    function unify(opt,_ahe_,env,subst,x,y)
     {if(opt)var sth=opt[1],subsume=sth;else var subsume=0;
      if(_ahe_)var sth$0=_ahe_[1],scope=sth$0;else var scope=_l_[2];
      function extend(var$0,term,param)
       {var subst=param[2],prefix=param[1];
        if(do_occurs_check(0))occurs(env,subst,var$0,term);
        occurs(env,subst,var$0,term);
        var switch$0=0;
        if(caml_equal(scope,var$0[5]) && runtime.caml_notequal(scope,_l_[2]))
         {var$0[4] = [0,term];var subst$0=subst;switch$0 = 1}
        if(! switch$0)var subst$0=caml_call3(VarMap[4],var$0,term,subst);
        return [0,[0,[0,var$0,term],prefix],subst$0]}
      function helper(x,y,acc)
       {function _ahh_(acc,l,v,y)
         {var subst=acc[2];
          if(caml_call1(_l_[11],v))return acc;
          if(subsume && 1 === l)throw Unification_failed;
          var match=walk(env,subst,v);
          switch(match[0])
           {case 0:var v$0=match[1];return extend(v$0,y,acc);
            case 1:var x=match[1];return helper(x,y,acc);
            default:throw [0,Match_failure,_p_]}}
        function _ahi_(acc,x,y)
         {if(caml_equal(x,y))return acc;throw Unification_failed}
        return fold2
                (function(acc,x,y)
                  {var
                    subst=acc[2],
                    match=walk(env,subst,x),
                    match$0=walk(env,subst,y),
                    switch$0=0;
                   switch(match[0])
                    {case 0:
                      var _ahj_=match[1];
                      switch(match$0[0])
                       {case 0:
                         var y$0=match$0[1];
                         return caml_call2(_l_[8],_ahj_,y$0)
                                 ?acc
                                 :extend(_ahj_,y$0,acc);
                        case 1:var y$1=match$0[1];return extend(_ahj_,y$1,acc);
                        default:var v=match$0[1],z=_ahj_}
                      break;
                     case 1:
                      var _ahk_=match[1];
                      switch(match$0[0])
                       {case 0:var y$2=match$0[1];return extend(y$2,_ahk_,acc);
                        case 1:var y$3=match$0[1];return helper(_ahk_,y$3,acc);
                        default:var v$0=match$0[1],z$0=_ahk_;switch$0 = 1}
                      break;
                     default:
                      var _ahl_=match[1];
                      switch(match$0[0])
                       {case 0:var v=_ahl_,z=match$0[1];break;
                        case 1:var v$0=_ahl_,z$0=match$0[1];switch$0 = 1;break;
                        default:
                         return caml_call1(Stdlib[2],cst_unifying_two_wildcards_wil)}}
                   return switch$0?extend(v$0,z$0,acc):extend(v,z,acc)},
                 _ahi_,
                 _ahh_,
                 acc,
                 x,
                 y)}
      try
       {var _ahf_=[0,helper(x,y,[0,0,subst])];return _ahf_}
      catch(_ahg_)
       {_ahg_ = caml_wrap_exception(_ahg_);
        if
         (_ahg_[1]
          !==
          Different_shape
          &&
          _ahg_
          !==
          Unification_failed
          &&
          _ahg_
          !==
          Occurs_check)
         throw _ahg_;
        return 0}}
    function apply(env,subst,x)
     {function _ahd_(x){return x}
      return map$1(function(v){return v},_ahd_,env,subst,x)}
    function freevars$0(env,subst,x){return freevars(env,apply(env,subst,x))}
    var is_bound=VarMap[3];
    function merge$0(env,subst1,subst2)
     {var _ahb_=[0,subst2];
      function _ahc_(var$0,term,param)
       {if(! param)return 0;
        var s=param[1],match=unify(0,0,env,s,var$0,term);
        if(! match)return 0;
        var match$0=match[1],s$0=match$0[2];
        return [0,s$0]}
      return caml_call3(VarMap[12],_ahc_,subst1,_ahb_)}
    function merge_disjoint(env)
     {function _ag$_(param,_aha_)
       {return caml_call1(Stdlib[1],cst_OCanren_fatal_Subst_merge_)}
      return caml_call1(VarMap[8],_ag$_)}
    function subsumed(env,subst)
     {function _ag__(var$0,term)
       {var match=unify(0,0,env,subst,var$0,term);
        if(match && ! match[1][1])return 1;
        return 0}
      return caml_call1(VarMap[13],_ag__)}
    function subsumed$0(env,x,y)
     {var match=unify(_q_,0,env,_n_,y,x);return match?1:0}
    var Answer=[0,subsumed$0];
    function reify$0(env,subst,x)
     {function _ag9_(x){return x}
      return map$1(function(v){return v},_ag9_,env,subst,x)}
    var
     OCanren_Subst=
      [0,
       Binding,
       _n_,
       of_list,
       of_map,
       split$0,
       apply,
       is_bound,
       freevars$0,
       unify,
       merge_disjoint,
       merge$0,
       subsumed,
       Answer,
       reify$0,
       walk_counter];
    caml_register_global(330,OCanren_Subst,"OCanren__Subst");
    var S=caml_call1(Stdlib_Set[1],[0,compare$1]),empty$1=VarMap[1];
    function add$0(env,t,var$0,term)
     {try
       {var
         _ag5_=caml_call2(VarMap[27],var$0,t),
         terms=caml_call1(caml_call1(S[4],term),_ag5_),
         _ag6_=caml_call2(VarMap[6],var$0,t),
         _ag7_=caml_call1(caml_call2(VarMap[4],var$0,terms),_ag6_);
        return _ag7_}
      catch(_ag8_)
       {_ag8_ = caml_wrap_exception(_ag8_);
        if(_ag8_ !== Stdlib[8])throw _ag8_;
        var _ag4_=caml_call1(S[5],term);
        return caml_call3(VarMap[4],var$0,_ag4_,t)}}
    function mem$0(env,t,var$0,term)
     {try
       {var
         _ag1_=caml_call2(VarMap[27],var$0,t),
         _ag2_=caml_call1(caml_call1(S[3],term),_ag1_);
        return _ag2_}
      catch(_ag3_)
       {_ag3_ = caml_wrap_exception(_ag3_);
        if(_ag3_ === Stdlib[8])return 0;
        throw _ag3_}}
    function extract(t,v)
     {try
       {var _agY_=caml_call2(VarMap[27],v,t),_agZ_=caml_call1(S[23],_agY_);
        return _agZ_}
      catch(_ag0_)
       {_ag0_ = caml_wrap_exception(_ag0_);
        if(_ag0_ === Stdlib[8])return 0;
        throw _ag0_}}
    function subsumed$1(env,t$0,t)
     {function _agT_(var$0,terms)
       {try
         {var
           terms$0=caml_call2(VarMap[27],var$0,t$0),
           _agU_=
            function(term)
             {function _agX_(term$0)
               {return caml_call3(Answer[1],env,term$0,term)}
              return caml_call2(S[18],_agX_,terms$0)},
           _agV_=caml_call2(S[17],_agU_,terms);
          return _agV_}
        catch(_agW_)
         {_agW_ = caml_wrap_exception(_agW_);
          if(_agW_ === Stdlib[8])return 0;
          throw _agW_}}
      return caml_call2(VarMap[13],_agT_,t)}
    var
     Disequality_violated=
      [248,cst_OCanren_Disequality_Disequ,caml_fresh_oo_id(0)],
     Disequality_fulfilled=
      [248,cst_OCanren_Disequality_Disequ$0,caml_fresh_oo_id(0)];
    function update$0(init)
     {function _agS_(acc,param)
       {var term=param[2],var$0=param[1];
        if(caml_call2(VarMap[3],var$0,acc))throw Disequality_fulfilled;
        return caml_call3(VarMap[4],var$0,term,acc)}
      return caml_call2(Stdlib_ListLabels[25],_agS_,init)}
    var of_list$0=update$0(VarMap[1]);
    function refine(env,subst,x,y)
     {var match=unify(0,0,env,subst,x,y);
      if(! match)return 0;
      var match$0=match[1],prefix=match$0[1];
      function cond(param)
       {var term=param[2],var$0=param[1];
        if(! caml_call1(_l_[11],var$0) && ! is_wc(env,term))return 1;
        return 0}
      var prefix$0=caml_call2(Stdlib_List[41],cond,prefix);
      return prefix$0?[0,prefix$0]:1}
    function recheck(env,subst,t)
     {var t$0=t;
      for(;;)
       {var
         match=caml_call1(VarMap[22],t$0),
         term=match[2],
         var$0=match[1],
         unchecked=caml_call2(VarMap[6],var$0,t$0),
         match$0=refine(env,subst,var$0,term);
        if(typeof match$0 !== "number")
         {var delta=match$0[1];return caml_call1(update$0(unchecked),delta)}
        if(! match$0)throw Disequality_fulfilled;
        if(caml_call1(VarMap[2],unchecked))throw Disequality_violated;
        var t$0=unchecked}}
    function simplify(env,subst,ds)
     {try
       {var
         _agN_=0,
         _agO_=
          function(var$0,term,acc)
           {var match=refine(env,subst,var$0,term);
            if(typeof match !== "number")
             {var delta=match[1];return caml_call2(Stdlib[37],delta,acc)}
            if(match)return acc;
            throw Disequality_fulfilled},
         result=caml_call3(VarMap[12],_agO_,ds,_agN_),
         _agP_=result?1:0;
        if(! _agP_)throw [0,Assert_failure,_r_];
        var _agQ_=[0,caml_call1(of_list$0,result)];
        return _agQ_}
      catch(_agR_)
       {_agR_ = caml_wrap_exception(_agR_);
        if(_agR_ === Disequality_fulfilled)return 0;
        throw _agR_}}
    function subsumed$2(env,subst,t$0,t)
     {return caml_call1(subsumed(env,t),t$0)}
    var next_id=[0,0];
    function compare$3(_agM_,_agL_){return _agM_ - _agL_ | 0}
    var
     M=caml_call1(Stdlib_Map[1],[0,compare$3]),
     empty$2=M[1],
     is_empty$0=M[2];
    function make$0(env,subst,x,y)
     {var id=next_id[1];
      next_id[1] = next_id[1] + 1 | 0;
      var match=refine(env,subst,x,y);
      if(typeof match !== "number")
       {var delta=match[1],_agK_=caml_call1(of_list$0,delta);
        return caml_call2(M[6],id,_agK_)}
      if(match)throw Disequality_violated;
      throw Disequality_fulfilled}
    function split$1(mapa)
     {var _agH_=VarMap[1];
      function _agI_(k,t,acc)
       {var _agJ_=caml_call1(VarMap[22],t)[1];
        function upd(param)
         {if(! param)return [0,caml_call2(M[6],k,t)];
          var old=param[1];
          return [0,caml_call3(M[4],k,t,old)]}
        return caml_call3(VarMap[40],_agJ_,upd,acc)}
      return caml_call3(M[13],_agI_,mapa,_agH_)}
    function recheck$0(env,subst,t)
     {var _agC_=M[1];
      function _agD_(id,disj,acc)
       {try
         {var
           _agE_=recheck(env,subst,disj),
           _agF_=caml_call3(M[4],id,_agE_,acc);
          return _agF_}
        catch(_agG_)
         {_agG_ = caml_wrap_exception(_agG_);
          if(_agG_ === Disequality_fulfilled)return acc;
          throw _agG_}}
      return caml_call3(M[13],_agD_,t,_agC_)}
    function merge_disjoint$0(env,subst)
     {function _agz_(param,_agB_,_agA_)
       {return caml_call1(Stdlib[1],cst_OCanren_fatal_Conjunct_mer)}
      return caml_call1(M[9],_agz_)}
    function project(env,subst,t,fv)
     {var fv$0=fv;
      for(;;)
       {var
         _ago_=[0,fv$0,M[1]],
         _agp_=
          function(fv)
            {return function(id,disj,param)
              {var conj=param[2],fv$0=param[1];
               function _ags_(var$0,term)
                {var _agx_=caml_call2(VarSet[3],var$0,fv);
                 if(_agx_)
                  var _agy_=_agx_;
                 else
                  {var match=var$1(env,term);
                   if(match){var u=match[1];return caml_call2(VarSet[3],u,fv)}
                   var _agy_=0}
                 return _agy_}
               if(! caml_call2(VarMap[13],_ags_,disj))return [0,fv$0,conj];
               var _agt_=VarSet[1];
               function _agu_(param,term,acc)
                {var _agw_=freevars$0(env,subst,term);
                 return caml_call1(caml_call1(VarSet[7],acc),_agw_)}
               var
                _agv_=caml_call3(VarMap[12],_agu_,disj,_agt_),
                fv$1=caml_call1(caml_call1(VarSet[7],fv$0),_agv_);
               return [0,fv$1,caml_call3(M[4],id,disj,conj)]}}
           (fv$0),
         match=caml_call3(M[13],_agp_,t,_ago_),
         t$0=match[2],
         fv$1=match[1];
        if(caml_call2(VarSet[12],fv$0,fv$1))
         {var
           _agm_=M[1],
           _agn_=
            function(id,disj,acc)
             {function _agq_(param,disj$0)
               {return subsumed$2(env,subst,disj$0,disj)}
              if(caml_call2(M[15],_agq_,acc))return acc;
              function _agr_(param,disj$0)
               {return 1 - subsumed$2(env,subst,disj,disj$0)}
              var acc$0=caml_call2(M[16],_agr_,acc);
              return caml_call3(M[4],id,disj,acc$0)};
          return caml_call3(M[13],_agn_,t$0,_agm_)}
        var fv$0=fv$1}}
    var empty$3=VarMap[1];
    function combine(env,subst,cstore)
     {function _agl_(param){return merge_disjoint$0(env,subst)}
      return caml_call3(VarMap[12],_agl_,cstore,empty$2)}
    function merge_disjoint$1(env,subst)
     {function _agk_(param,c1,c2)
       {var c=caml_call2(merge_disjoint$0(env,subst),c1,c2);
        return caml_call1(is_empty$0,c)?0:[0,c]}
      return caml_call1(VarMap[8],_agk_)}
    function update$1(env,subst,conj)
     {var _agj_=split$1(conj);
      return caml_call1(merge_disjoint$1(env,subst),_agj_)}
    function add$1(env,subst,cstore,x,y)
     {try
       {var
         _agh_=
          [0,caml_call1(update$1(env,subst,make$0(env,subst,x,y)),cstore)];
        return _agh_}
      catch(_agi_)
       {_agi_ = caml_wrap_exception(_agi_);
        if(_agi_ === Disequality_fulfilled)return [0,cstore];
        if(_agi_ === Disequality_violated)return 0;
        throw _agi_}}
    function recheck$1(env,subst,cstore,bs)
     {function helper(var$0,cstore)
       {try
         {var
           conj=caml_call2(VarMap[27],var$0,cstore),
           cstore$0=caml_call2(VarMap[6],var$0,cstore),
           _agf_=
            caml_call1(update$1(env,subst,recheck$0(env,subst,conj)),cstore$0);
          return _agf_}
        catch(_agg_)
         {_agg_ = caml_wrap_exception(_agg_);
          if(_agg_ === Stdlib[8])return cstore;
          throw _agg_}}
      try
       {var
         _agc_=
          function(cstore,param)
           {var
             term=param[2],
             var$0=param[1],
             cstore$0=helper(var$0,cstore),
             match=var$1(env,term);
            if(! match)return cstore$0;
            var u=match[1];
            return helper(u,cstore$0)},
         cstore$0=caml_call3(Stdlib_ListLabels[25],_agc_,cstore,bs),
         _agd_=[0,cstore$0];
        return _agd_}
      catch(_age_)
       {_age_ = caml_wrap_exception(_age_);
        if(_age_ === Disequality_violated)return 0;
        throw _age_}}
    function project$0(env,subst,cstore,fv)
     {return split$1(project(env,subst,combine(env,subst,cstore),fv))}
    function reify$1(env,subst,cstore,x)
     {var t$1=combine(env,subst,cstore),_af4_=M[1];
      function _af5_(id,disj,acc)
       {var match=simplify(env,subst,disj);
        if(! match)return acc;
        var disj$0=match[1];
        return caml_call3(M[4],id,disj$0,acc)}
      var
       t=caml_call3(M[13],_af5_,t$1,_af4_),
       fv=freevars$0(env,subst,x),
       t$0=project(env,subst,t,fv),
       _af6_=[0,empty$1,0];
      function _af7_(param,disj,acc)
       {var _af8_=0;
        function _af9_(var$0,term,xs){return [0,[0,var$0,term],xs]}
        var bs=caml_call3(VarMap[12],_af9_,disj,_af8_);
        function _af__(answ)
         {function _aga_(param)
           {var term=param[2],var$0=param[1];
            return mem$0(env,answ,var$0,term)}
          if(caml_call2(Stdlib_List[33],_aga_,bs))return [0,answ,0];
          function _agb_(param)
           {var term=param[2],var$0=param[1];
            return add$0(env,answ,var$0,term)}
          return caml_call2(Stdlib_List[19],_agb_,bs)}
        var _af$_=caml_call2(Stdlib_ListLabels[19],_af__,acc);
        return caml_call1(Stdlib_List[13],_af$_)}
      return caml_call3(M[13],_af7_,t$0,_af6_)}
    var
     _s_=[0,extract,subsumed$1],
     OCanren_Disequality=
      [0,empty$3,add$1,recheck$1,project$0,merge_disjoint$1,_s_,reify$1];
    caml_register_global(331,OCanren_Disequality,"OCanren__Disequality");
    var logic_t=[],_x_=0,_y_=0;
    caml_update_dummy
     (logic_t,
      [0,
       0,
       function(_af1_)
        {caml_call2(CamlinternalOO[8],_af1_,_w_);
         return function(_af3_,_af2_)
          {return caml_call2(CamlinternalOO[24],_af2_,_af1_)}},
       _y_,
       _x_]);
    function gcata_logic(tr,inh,subj)
     {if(0 === subj[0])
       {var x_002=subj[2],x_001=subj[1];
        return caml_call5
                (caml_get_public_method(tr,1069042091,1),
                 tr,
                 inh,
                 subj,
                 x_001,
                 x_002)}
      var x_003=subj[1];
      return caml_call4
              (caml_get_public_method(tr,-711318731,2),tr,inh,subj,x_003)}
    function _z_(_afL_)
     {var
       _afM_=caml_call2(CamlinternalOO[3],_afL_,cst$1),
       _afN_=caml_call2(CamlinternalOO[3],_afL_,cst$2),
       _afO_=caml_call2(CamlinternalOO[8],_afL_,_w_),
       _afP_=_afO_[1],
       _afQ_=_afO_[2],
       _afR_=caml_call6(CamlinternalOO[18],_afL_,0,_w_,0,logic_t,1)[1];
      function _afS_(self_2,inh_012,param,x_013)
       {return caml_call4
                (Stdlib_Format[129],inh_012,_A_,self_2[1 + _afM_],x_013)}
      var
       _afT_=
        [0,
         _afP_,
         function(self_2,inh_005,param,x_006,x_007)
          {function _afZ_(inh_010,subj_011)
            {return caml_call4
                     (GT[224],GT[159],self_2[1 + _afN_],inh_010,subj_011)}
           function _af0_(inh_008,subj_009)
            {return caml_call3(GT[224],GT[46],inh_008,subj_009)}
           return caml_call6
                   (Stdlib_Format[129],inh_005,_B_,_af0_,x_006,_afZ_,x_007)},
         _afQ_,
         _afS_];
      caml_call2(CamlinternalOO[11],_afL_,_afT_);
      return function(_afX_,_afW_,_afV_,_afU_)
       {var _afY_=caml_call2(CamlinternalOO[24],_afW_,_afL_);
        _afY_[1 + _afN_] = _afU_;
        _afY_[1 + _afM_] = _afV_;
        caml_call1(_afR_,_afY_);
        return caml_call3(CamlinternalOO[26],_afW_,_afY_,_afL_)}}
    var fmt_logic_t=caml_call2(CamlinternalOO[19],_v_,_z_);
    function fmt_logic(fa,inh0,subj)
     {var _afK_=caml_call2(fmt_logic_t[1],0,fa);
      return caml_call4(GT[2],gcata_logic,_afK_,inh0,subj)}
    function _C_(_afw_)
     {var
       _afx_=caml_call2(CamlinternalOO[3],_afw_,cst$3),
       _afy_=caml_call2(CamlinternalOO[3],_afw_,cst$4),
       _afz_=caml_call2(CamlinternalOO[8],_afw_,_w_),
       _afA_=_afz_[1],
       _afB_=_afz_[2],
       _afC_=caml_call6(CamlinternalOO[18],_afw_,0,_w_,0,logic_t,1)[1];
      function _afD_(self_3,inh_021,param,x_022)
       {return caml_call2(self_3[1 + _afx_],inh_021,x_022)}
      var
       _afE_=
        [0,
         _afA_,
         function(self_3,inh_014,param,subj_020,x_016)
          {var
            inh_019=
             caml_call4(GT[226],GT[159],self_3[1 + _afy_],inh_014,x_016);
           return caml_call3(GT[226],GT[46],inh_019,subj_020)},
         _afB_,
         _afD_];
      caml_call2(CamlinternalOO[11],_afw_,_afE_);
      return function(_afI_,_afH_,_afG_,_afF_)
       {var _afJ_=caml_call2(CamlinternalOO[24],_afH_,_afw_);
        _afJ_[1 + _afy_] = _afF_;
        _afJ_[1 + _afx_] = _afG_;
        caml_call1(_afC_,_afJ_);
        return caml_call3(CamlinternalOO[26],_afH_,_afJ_,_afw_)}}
    var foldr_logic_t=caml_call2(CamlinternalOO[19],_v_,_C_);
    function foldr_logic(fa,inh0,subj)
     {var _afv_=caml_call2(foldr_logic_t[1],0,fa);
      return caml_call4(GT[2],gcata_logic,_afv_,inh0,subj)}
    function _D_(_afh_)
     {var
       _afi_=caml_call2(CamlinternalOO[3],_afh_,cst$5),
       _afj_=caml_call2(CamlinternalOO[3],_afh_,cst$6),
       _afk_=caml_call2(CamlinternalOO[8],_afh_,_w_),
       _afl_=_afk_[1],
       _afm_=_afk_[2],
       _afn_=caml_call6(CamlinternalOO[18],_afh_,0,_w_,0,logic_t,1)[1];
      function _afo_(self_4,inh_030,param,x_031)
       {return caml_call2(self_4[1 + _afi_],inh_030,x_031)}
      var
       _afp_=
        [0,
         _afl_,
         function(self_4,inh_023,param,x_024,subj_029)
          {var inh_028=caml_call3(GT[225],GT[46],inh_023,x_024);
           return caml_call4
                   (GT[225],GT[159],self_4[1 + _afj_],inh_028,subj_029)},
         _afm_,
         _afo_];
      caml_call2(CamlinternalOO[11],_afh_,_afp_);
      return function(_aft_,_afs_,_afr_,_afq_)
       {var _afu_=caml_call2(CamlinternalOO[24],_afs_,_afh_);
        _afu_[1 + _afj_] = _afq_;
        _afu_[1 + _afi_] = _afr_;
        caml_call1(_afn_,_afu_);
        return caml_call3(CamlinternalOO[26],_afs_,_afu_,_afh_)}}
    var foldl_logic_t=caml_call2(CamlinternalOO[19],_v_,_D_);
    function foldl_logic(fa,inh0,subj)
     {var _afg_=caml_call2(foldl_logic_t[1],0,fa);
      return caml_call4(GT[2],gcata_logic,_afg_,inh0,subj)}
    function _E_(_ae0_)
     {var
       _ae1_=caml_call2(CamlinternalOO[3],_ae0_,cst$7),
       _ae2_=caml_call2(CamlinternalOO[3],_ae0_,cst$8),
       _ae3_=caml_call2(CamlinternalOO[8],_ae0_,_w_),
       _ae4_=_ae3_[1],
       _ae5_=_ae3_[2],
       _ae6_=caml_call6(CamlinternalOO[18],_ae0_,0,_w_,0,logic_t,1)[1];
      function _ae7_(self_5,inh_038,param,x_039)
       {if(0 === inh_038[0])return caml_call2(GT[12],inh_038,_F_);
        var x_040=inh_038[1];
        function _aff_(param)
         {return caml_call2(self_5[1 + _ae1_],x_040,x_039)}
        return caml_call2(GT[6],1,_aff_)}
      var
       _ae8_=
        [0,
         _ae4_,
         function(self_5,inh_032,param,subj$0,subj)
          {if(0 !== inh_032[0])return caml_call2(GT[12],inh_032,_G_);
           var x_036=inh_032[2],x_035=inh_032[1];
           function _afc_(param)
            {return caml_call4(GT[228],GT[159],self_5[1 + _ae2_],x_036,subj)}
           function _afd_(param)
            {return caml_call3(GT[228],GT[46],x_035,subj$0)}
           var _afe_=caml_call2(GT[6],1,_afd_);
           return caml_call2(GT[6],_afe_,_afc_)},
         _ae5_,
         _ae7_];
      caml_call2(CamlinternalOO[11],_ae0_,_ae8_);
      return function(_afa_,_ae$_,_ae__,_ae9_)
       {var _afb_=caml_call2(CamlinternalOO[24],_ae$_,_ae0_);
        _afb_[1 + _ae2_] = _ae9_;
        _afb_[1 + _ae1_] = _ae__;
        caml_call1(_ae6_,_afb_);
        return caml_call3(CamlinternalOO[26],_ae$_,_afb_,_ae0_)}}
    var compare_logic_t=caml_call2(CamlinternalOO[19],_v_,_E_);
    function compare_logic(fa,inh0,subj)
     {var _aeZ_=caml_call2(compare_logic_t[1],0,fa);
      return caml_call4(GT[2],gcata_logic,_aeZ_,inh0,subj)}
    function _H_(_aeK_)
     {var
       _aeL_=caml_call2(CamlinternalOO[3],_aeK_,cst$9),
       _aeM_=caml_call2(CamlinternalOO[3],_aeK_,cst$10),
       _aeN_=caml_call2(CamlinternalOO[8],_aeK_,_w_),
       _aeO_=_aeN_[1],
       _aeP_=_aeN_[2],
       _aeQ_=caml_call6(CamlinternalOO[18],_aeK_,0,_w_,0,logic_t,1)[1];
      function _aeR_(self_6,inh_048,param,x_049)
       {if(0 === inh_048[0])return 0;
        var x_050=inh_048[1];
        return caml_call2(self_6[1 + _aeL_],x_050,x_049)}
      var
       _aeS_=
        [0,
         _aeO_,
         function(self_6,inh_042,param,x_043,subj)
          {if(0 !== inh_042[0])return 0;
           var
            x_046=inh_042[2],
            x_045=inh_042[1],
            _aeY_=caml_call3(GT[227],GT[46],x_045,x_043);
           return _aeY_
                   ?caml_call4(GT[227],GT[159],self_6[1 + _aeM_],x_046,subj)
                   :_aeY_},
         _aeP_,
         _aeR_];
      caml_call2(CamlinternalOO[11],_aeK_,_aeS_);
      return function(_aeW_,_aeV_,_aeU_,_aeT_)
       {var _aeX_=caml_call2(CamlinternalOO[24],_aeV_,_aeK_);
        _aeX_[1 + _aeM_] = _aeT_;
        _aeX_[1 + _aeL_] = _aeU_;
        caml_call1(_aeQ_,_aeX_);
        return caml_call3(CamlinternalOO[26],_aeV_,_aeX_,_aeK_)}}
    var eq_logic_t=caml_call2(CamlinternalOO[19],_v_,_H_);
    function eq_logic(fa,inh0,subj)
     {var _aeJ_=caml_call2(eq_logic_t[1],0,fa);
      return caml_call4(GT[2],gcata_logic,_aeJ_,inh0,subj)}
    function _I_(_ad5_)
     {var
       _ad6_=caml_call2(CamlinternalOO[3],_ad5_,cst$11),
       _ad7_=caml_call2(CamlinternalOO[3],_ad5_,cst$12),
       _ad8_=caml_call2(CamlinternalOO[8],_ad5_,_w_),
       _ad9_=_ad8_[1],
       _ad__=_ad8_[2],
       _ad$_=caml_call6(CamlinternalOO[18],_ad5_,0,_w_,0,logic_t,1)[1];
      function _aea_(self_7,param,_aey_,x_054)
       {var
         _aez_=caml_call2(self_7[1 + _ad6_],0,x_054),
         _aeA_=caml_call2(Stdlib_List[4],_aez_,0),
         _aeB_=caml_call1(HTML[10],_aeA_),
         _aeC_=caml_call2(HTML[25],0,_aeB_),
         _aeD_=caml_call2(Stdlib_List[4],_aeC_,0),
         _aeE_=caml_call1(HTML[10],_aeD_),
         _aeF_=caml_call2(HTML[23],0,_aeE_),
         _aeG_=caml_call2(Stdlib_List[4],_aeF_,0),
         _aeH_=caml_call1(HTML[3],cst_Value),
         _aeI_=caml_call2(Stdlib_List[4],_aeH_,_aeG_);
        return caml_call1(HTML[10],_aeI_)}
      var
       _aeb_=
        [0,
         _ad9_,
         function(self_7,param,_aeh_,x_052,x_053)
          {var
            _aei_=caml_call1(self_7[1 + _ad7_],0),
            _aej_=caml_call3(GT[222],GT[159],_aei_,x_053),
            _aek_=caml_call2(Stdlib_List[4],_aej_,0),
            _ael_=caml_call1(HTML[10],_aek_),
            _aem_=caml_call2(HTML[25],0,_ael_),
            _aen_=caml_call2(Stdlib_List[4],_aem_,0),
            _aeo_=caml_call2(GT[222],GT[46],x_052),
            _aep_=caml_call2(Stdlib_List[4],_aeo_,0),
            _aeq_=caml_call1(HTML[10],_aep_),
            _aer_=caml_call2(HTML[25],0,_aeq_),
            _aes_=caml_call2(Stdlib_List[4],_aer_,_aen_),
            _aet_=caml_call1(HTML[10],_aes_),
            _aeu_=caml_call2(HTML[23],0,_aet_),
            _aev_=caml_call2(Stdlib_List[4],_aeu_,0),
            _aew_=caml_call1(HTML[3],cst_Var),
            _aex_=caml_call2(Stdlib_List[4],_aew_,_aev_);
           return caml_call1(HTML[10],_aex_)},
         _ad__,
         _aea_];
      caml_call2(CamlinternalOO[11],_ad5_,_aeb_);
      return function(_aef_,_aee_,_aed_,_aec_)
       {var _aeg_=caml_call2(CamlinternalOO[24],_aee_,_ad5_);
        _aeg_[1 + _ad7_] = _aec_;
        _aeg_[1 + _ad6_] = _aed_;
        caml_call1(_ad$_,_aeg_);
        return caml_call3(CamlinternalOO[26],_aee_,_aeg_,_ad5_)}}
    var html_logic_t=caml_call2(CamlinternalOO[19],_v_,_I_);
    function _J_(fa,inh0,subj)
     {var _ad4_=caml_call2(html_logic_t[1],0,fa);
      return caml_call4(GT[2],gcata_logic,_ad4_,inh0,subj)}
    function _K_(_adM_)
     {var
       _adN_=caml_call2(CamlinternalOO[3],_adM_,cst$13),
       _adO_=caml_call2(CamlinternalOO[3],_adM_,cst$14),
       _adP_=caml_call2(CamlinternalOO[8],_adM_,_w_),
       _adQ_=_adP_[1],
       _adR_=_adP_[2],
       _adS_=caml_call6(CamlinternalOO[18],_adM_,0,_w_,0,logic_t,1)[1];
      function _adT_(self_8,param,_ad3_,x_057)
       {return [1,caml_call2(self_8[1 + _adN_],0,x_057)]}
      var
       _adU_=
        [0,
         _adQ_,
         function(self_8,param,_ad0_,x_055,x_056)
          {var
            _ad1_=caml_call1(self_8[1 + _adO_],0),
            _ad2_=caml_call3(GT[223],GT[159],_ad1_,x_056);
           return [0,caml_call2(GT[223],GT[46],x_055),_ad2_]},
         _adR_,
         _adT_];
      caml_call2(CamlinternalOO[11],_adM_,_adU_);
      return function(_adY_,_adX_,_adW_,_adV_)
       {var _adZ_=caml_call2(CamlinternalOO[24],_adX_,_adM_);
        _adZ_[1 + _adO_] = _adV_;
        _adZ_[1 + _adN_] = _adW_;
        caml_call1(_adS_,_adZ_);
        return caml_call3(CamlinternalOO[26],_adX_,_adZ_,_adM_)}}
    var gmap_logic_t=caml_call2(CamlinternalOO[19],_v_,_K_);
    function _L_(fa,inh0,subj)
     {var _adL_=caml_call2(gmap_logic_t[1],0,fa);
      return caml_call4(GT[2],gcata_logic,_adL_,inh0,subj)}
    function _M_(_adr_)
     {var
       _ads_=caml_call2(CamlinternalOO[3],_adr_,cst$15),
       _adt_=caml_call2(CamlinternalOO[3],_adr_,cst$16),
       _adu_=caml_call2(CamlinternalOO[8],_adr_,_w_),
       _adv_=_adu_[1],
       _adw_=_adu_[2],
       _adx_=caml_call6(CamlinternalOO[18],_adr_,0,_w_,0,logic_t,1)[1];
      function _ady_(self_9,param,_adJ_,x_060)
       {var _adK_=caml_call2(self_9[1 + _ads_],0,x_060);
        return caml_call2(Stdlib_Printf[4],_N_,_adK_)}
      var
       _adz_=
        [0,
         _adv_,
         function(self_9,param,_adF_,x_058,x_059)
          {var
            _adG_=caml_call1(self_9[1 + _adt_],0),
            _adH_=caml_call3(GT[221],GT[159],_adG_,x_059),
            _adI_=caml_call2(GT[221],GT[46],x_058);
           return caml_call3(Stdlib_Printf[4],_O_,_adI_,_adH_)},
         _adw_,
         _ady_];
      caml_call2(CamlinternalOO[11],_adr_,_adz_);
      return function(_adD_,_adC_,_adB_,_adA_)
       {var _adE_=caml_call2(CamlinternalOO[24],_adC_,_adr_);
        _adE_[1 + _adt_] = _adA_;
        _adE_[1 + _ads_] = _adB_;
        caml_call1(_adx_,_adE_);
        return caml_call3(CamlinternalOO[26],_adC_,_adE_,_adr_)}}
    var show_logic_t=caml_call2(CamlinternalOO[19],_v_,_M_);
    function _P_(fa,inh0,subj)
     {var _adq_=caml_call2(show_logic_t[1],0,fa);
      return caml_call4(GT[2],gcata_logic,_adq_,inh0,subj)}
    function _Q_(eta){return caml_call2(GT[2],gcata_logic,eta)}
    var
     _R_=caml_call1(CamlinternalOO[16],_u_),
     _S_=caml_call2(CamlinternalOO[8],_R_,shared),
     _T_=_S_[1],
     _U_=_S_[2],
     _V_=_S_[3],
     _W_=_S_[4],
     _X_=_S_[5],
     _Y_=_S_[6],
     _Z_=_S_[7],
     ___=_S_[8];
    function _$_(self_10,fa,subj){return _P_(caml_call1(GT[4],fa),0,subj)}
    function _aa_(self_10,fa,subj){return _L_(caml_call1(GT[4],fa),0,subj)}
    function _ab_(self_10,fa,subj){return _J_(caml_call1(GT[4],fa),0,subj)}
    function _ac_(self_10){return eq_logic}
    function _ad_(self_10){return compare_logic}
    function _ae_(self_10){return foldl_logic}
    function _af_(self_10){return foldr_logic}
    var
     _ag_=
      [0,
       _Y_,
       function(self_10){return fmt_logic},
       _W_,
       _af_,
       _X_,
       _ae_,
       ___,
       _ad_,
       _Z_,
       _ac_,
       _U_,
       _ab_,
       _V_,
       _aa_,
       _T_,
       _$_];
    caml_call2(CamlinternalOO[11],_R_,_ag_);
    caml_call1(CamlinternalOO[17],_R_);
    var _ah_=[0,gcata_logic,caml_call2(CamlinternalOO[24],0,_R_),_Q_];
    function html_logic(fa,subj){return _J_(caml_call1(GT[4],fa),0,subj)}
    function gmap_logic(fa,subj){return _L_(caml_call1(GT[4],fa),0,subj)}
    function show_logic(fa,subj){return _P_(caml_call1(GT[4],fa),0,subj)}
    var
     _aj_=[0,0,0,0],
     _ai_=_ah_[3],
     _ak_=caml_call1(CamlinternalOO[16],_u_),
     _al_=caml_call2(CamlinternalOO[8],_ak_,shared),
     _am_=_al_[1],
     _an_=_al_[2],
     _ao_=_al_[3],
     _ap_=_al_[4],
     _aq_=_al_[5],
     _ar_=_al_[6],
     _as_=_al_[7],
     _at_=_al_[8];
    function _au_(self_11,fa,x)
     {var _ac8_=0;
      function _ac9_(fself)
       {if(! _aj_[1])
         {var
           _ac__=caml_call1(CamlinternalOO[16],_v_),
           _ac$_=caml_call2(CamlinternalOO[3],_ac__,cst$17),
           _ada_=caml_call2(CamlinternalOO[8],_ac__,_w_),
           _adb_=_ada_[1],
           _adc_=_ada_[2],
           _add_=
            caml_call6(CamlinternalOO[18],_ac__,0,0,_v_,show_logic_t,0)[1],
           _ade_=
            function(self_12,param,_adp_,x)
             {var env=self_12[1 + _ac$_];return caml_call1(env[1],x)},
           _adf_=
            [0,
             _adb_,
             function(self_12,param,s,i,cs)
              {var env=self_12[1 + _ac$_];
               if(cs)
                var
                 _adm_=
                  function(l)
                   {var _ado_=caml_call2(env[2],0,l);
                    return caml_call2(Stdlib[28],cst$18,_ado_)},
                 _adn_=caml_call3(GT[221],GT[159],_adm_,cs),
                 c=caml_call2(Stdlib_Printf[4],_av_,_adn_);
               else
                var c=cst$19;
               return caml_call3(Stdlib_Printf[4],_aw_,i,c)},
             _adc_,
             _ade_];
          caml_call2(CamlinternalOO[11],_ac__,_adf_);
          var
           _adg_=
            function(_adh_)
             {var
               _adi_=_adh_[1],
               _adj_=_adi_[1],
               self=caml_call2(CamlinternalOO[24],0,_ac__),
               _adk_=_adi_[3],
               _adl_=caml_call1(GT[4],_adi_[2]);
              caml_call4(_add_,_adh_[2],self,_adl_,_adk_);
              self[1 + _ac$_] = _adj_;
              return caml_call3(CamlinternalOO[26],0,self,_ac__)};
          caml_call1(CamlinternalOO[17],_ac__);
          _aj_[1] = _adg_}
        return caml_call1
                (_aj_[1],[0,[0,[0,fa,fself],fa,fself],show_logic_t[4]])}
      return caml_call4(GT[3],_ah_,_ac9_,_ac8_,x)}
    function _ax_(self_11,fa,fmt,l)
     {var
       _ac6_=caml_call2(Stdlib_Format[133],_ay_,fa),
       _ac7_=caml_call3(self_11[1][1 + _am_],self_11,_ac6_,l);
      return caml_call3(Stdlib_Format[129],fmt,_az_,_ac7_)}
    function _aA_(self_11)
     {var _ac5_=_ah_[2];
      return caml_call1(caml_get_public_method(_ac5_,76555601,3),_ac5_)}
    function _aB_(self_11)
     {var _ac4_=_ah_[2];
      return caml_call1(caml_get_public_method(_ac4_,76555595,4),_ac4_)}
    function _aC_(self_11)
     {var _ac3_=_ah_[2];
      return caml_call1(caml_get_public_method(_ac3_,57219237,5),_ac3_)}
    function _aD_(self_11)
     {var _ac2_=_ah_[2];
      return caml_call1(caml_get_public_method(_ac2_,22636,6),_ac2_)}
    function _aE_(self_11)
     {var _ac1_=_ah_[2];
      return caml_call1(caml_get_public_method(_ac1_,-988375701,7),_ac1_)}
    var
     _aF_=
      [0,
       _ao_,
       function(self_11)
        {var _ac0_=_ah_[2];
         return caml_call1(caml_get_public_method(_ac0_,-999816043,8),_ac0_)},
       _an_,
       _aE_,
       _as_,
       _aD_,
       _at_,
       _aC_,
       _aq_,
       _aB_,
       _ap_,
       _aA_,
       _ar_,
       _ax_,
       _am_,
       _au_];
    caml_call2(CamlinternalOO[11],_ak_,_aF_);
    caml_call1(CamlinternalOO[17],_ak_);
    var
     _aG_=caml_call2(CamlinternalOO[24],0,_ak_),
     logic=[0,_ah_[1],_aG_,_ai_],
     Not_a_value=[248,cst_OCanren_Logic_Not_a_value,caml_fresh_oo_id(0)];
    function to_logic(x){return [1,x]}
    function from_logic(param)
     {if(0 === param[0])throw Not_a_value;var x=param[1];return x}
    function symbol$2(_acZ_){return _acZ_}
    function reify$2(env,t)
     {var match=var$0(t);
      if(! match)return [1,t];
      var v=match[1];
      function _acX_(_acY_){return reify$2(env,_acY_)}
      var match$0=caml_call2(_l_[7],_acX_,v),cs=match$0[2],i=match$0[1];
      return [0,i,cs]}
    function prj_exn(env,t)
     {var match=reify$2(env,t);
      if(0 === match[0])throw Not_a_value;
      var x=match[1];
      return x}
    function prj(onvar,env,t)
     {var match=reify$2(env,t);
      if(0 === match[0]){var v=match[1];return caml_call1(onvar,v)}
      var x=match[1];
      return x}
    function compose(r$0,r,env,a)
     {return caml_call2(r,env,caml_call2(r$0,env,a))}
    function fmap$0(f,r,env,a){return caml_call1(f,caml_call2(r,env,a))}
    function fcomap(f,r,env,a){return caml_call2(r,env,caml_call1(f,a))}
    function fix(f,env,eta)
     {return caml_call3
              (f,function(_acV_,_acW_){return fix(f,_acV_,_acW_)},env,eta)}
    function rework(fv,fdeq,x)
     {function _acQ_(x)
       {if(0 === x[0])
         {var
           xs=x[2],
           v=x[1],
           _acR_=function(diseq){return [0,v,diseq]},
           _acS_=caml_call2(_m_[7],fdeq,xs);
          return caml_call2(_m_[8][2],_acS_,_acR_)}
        var t=x[1];
        function _acT_(inner){return [1,inner]}
        var _acU_=caml_call1(fv,caml_call1(_m_[1],t));
        return caml_call2(_m_[8][2],_acU_,_acT_)}
      return caml_call2(_m_[8][1],x,_acQ_)}
    function zed(f,x)
     {return caml_call2(f,function(_acP_){return zed(f,_acP_)},x)}
    var _aH_=[0,0,0,0];
    function make_rr(env,x)
     {if(! _aH_[1])
       {var
         _acF_=caml_call1(CamlinternalOO[16],_t_),
         _acG_=caml_call2(CamlinternalOO[3],_acF_,cst$20),
         _acH_=caml_call2(CamlinternalOO[8],_acF_,_t_),
         _acI_=_acH_[1],
         _acJ_=_acH_[2],
         _acK_=
          function(self_13,reifier)
           {var env=self_13[1 + _acG_],a=env[2],env$0=env[1];
            return caml_call2(reifier,env$0,a)},
         _acL_=
          [0,
           _acJ_,
           function(self_13)
            {var env=self_13[1 + _acG_];return is_open(env[1],env[2])},
           _acI_,
           _acK_];
        caml_call2(CamlinternalOO[11],_acF_,_acL_);
        var
         _acM_=
          function(_acN_)
           {var _acO_=caml_call2(CamlinternalOO[24],0,_acF_);
            _acO_[1 + _acG_] = _acN_;
            return _acO_};
        caml_call1(CamlinternalOO[17],_acF_);
        _aH_[1] = _acM_}
      return caml_call1(_aH_[1],[0,env,x])}
    function inji(_acE_){return _acE_}
    var
     Reifier=[0,reify$2,prj_exn,prj,compose,fmap$0,fcomap,fix,rework,zed],
     OCanren_Logic=
      [0,
       logic_t,
       gcata_logic,
       fmt_logic_t,
       fmt_logic,
       foldr_logic_t,
       foldr_logic,
       foldl_logic_t,
       foldl_logic,
       compare_logic_t,
       compare_logic,
       eq_logic_t,
       eq_logic,
       html_logic_t,
       html_logic,
       gmap_logic_t,
       gmap_logic,
       show_logic_t,
       show_logic,
       logic,
       to_logic,
       from_logic,
       Reifier,
       symbol$2,
       inji,
       symbol$2,
       prj_exn,
       reify$2,
       Not_a_value,
       make_rr];
    caml_register_global(336,OCanren_Logic,"OCanren__Logic");
    var nil=0;
    function single(x){return [0,x,0]}
    function cons(x,s){return [0,x,s]}
    function from_fun(zz){return [1,zz]}
    function suspend(is_ready,f){return [2,[0,[0,is_ready,f],0]]}
    function of_list$1(param)
     {if(! param)return 0;
      var xs=param[2],x=param[1];
      return [0,x,of_list$1(xs)]}
    function force(x)
     {if(typeof x !== "number" && 1 === x[0])
       {var zz=x[1];return caml_call1(zz,0)}
      return x}
    function mplus(xs,ys)
     {var xs$0=xs,ys$0=ys;
      for(;;)
       {if(typeof xs$0 === "number")return force(ys$0);
        switch(xs$0[0])
         {case 0:
           var xs$1=xs$0[2],x=xs$0[1];
           return [0,x,[1,function(param){return mplus(force(ys$0),xs$1)}]];
          case 1:return [1,function(param){return mplus(force(ys$0),xs$0)}];
          default:
           var ss=xs$0[1],xs$2=force(ys$0),match=unwrap_suspended(ss);
           if(typeof match !== "number" && 2 === match[0])
            {var _acD_=match[1];
             if(typeof xs$2 !== "number" && 2 === xs$2[0])
              {var ss$0=xs$2[1];return [2,caml_call2(Stdlib[37],_acD_,ss$0)]}
             var
              ys$1=[1,function(xs){return function(param){return xs}}(xs$0)],
              xs$0=xs$2,
              ys$0=ys$1;
             continue}
           var xs$0=match,ys$0=xs$2;
           continue}}}
    function unwrap_suspended(ss)
     {var prefix=0,param=ss;
      for(;;)
       {if(param)
         {var ss$0=param[2],s=param[1],zz=s[2],is_ready=s[1];
          if(! caml_call1(is_ready,0))
           {var prefix$0=[0,s,prefix],prefix=prefix$0,param=ss$0;continue}
          var
           _acz_=caml_call1(Stdlib_List[9],prefix),
           _acA_=[0,[0,[1,zz]],caml_call2(Stdlib[37],_acz_,ss$0)]}
        else
         var _acA_=[0,0,caml_call1(Stdlib_List[9],prefix)];
        var _acB_=_acA_[1];
        if(! _acB_){var ss$2=_acA_[2];return [2,ss$2]}
        var _acC_=_acB_[1];
        if(! _acA_[2])return _acC_;
        var ss$1=_acA_[2];
        return mplus(force(_acC_),[2,ss$1])}}
    function bind$0(s,f)
     {var s$0=s;
      for(;;)
       {if(typeof s$0 === "number")return 0;
        switch(s$0[0])
         {case 0:
           var
            s$1=s$0[2],
            x=s$0[1],
            _acx_=[1,function(param){return bind$0(force(s$1),f)}];
           return mplus(caml_call1(f,x),_acx_);
          case 1:
           var zz=s$0[1];
           return [1,function(param){return bind$0(caml_call1(zz,0),f)}];
          default:
           var ss=s$0[1],s$2=unwrap_suspended(ss);
           if(typeof s$2 !== "number" && 2 === s$2[0])
            {var
              ss$0=s$2[1],
              helper=
               function(s)
                {var zz=s[2];
                 function _acy_(param){return bind$0(caml_call1(zz,0),f)}
                 return [0,s[1],_acy_]};
             return [2,caml_call2(Stdlib_List[19],helper,ss$0)]}
           var s$0=s$2;
           continue}}}
    function msplit(param)
     {var param$0=param;
      for(;;)
       {if(typeof param$0 === "number")return 0;
        switch(param$0[0])
         {case 0:var xs=param$0[2],x=param$0[1];return [0,[0,x,xs]];
          case 1:
           var zz=param$0[1],param$1=caml_call1(zz,0),param$0=param$1;
           continue;
          default:
           var ss=param$0[1],xs$0=unwrap_suspended(ss);
           if(typeof xs$0 !== "number" && 2 === xs$0[0])return 0;
           var param$0=xs$0;
           continue}}}
    function is_empty$1(s){var match=msplit(s);return match?0:1}
    function map$2(f,param)
     {if(typeof param === "number")return 0;
      switch(param[0])
       {case 0:
         var xs=param[2],x=param[1],_acv_=map$2(f,xs);
         return [0,caml_call1(f,x),_acv_];
        case 1:
         var zzz=param[1];
         return [1,function(param){return map$2(f,caml_call1(zzz,0))}];
        default:
         var
          ss=param[1],
          helper=
           function(s)
            {var zz=s[2];
             function _acw_(param){return map$2(f,caml_call1(zz,0))}
             return [0,s[1],_acw_]};
         return [2,caml_call2(Stdlib_List[19],helper,ss)]}}
    function mapi$0(f)
     {function helper(i,xs)
       {var match=msplit(xs);
        if(! match)return 0;
        var
         match$0=match[1],
         tl=match$0[2],
         h=match$0[1],
         _acu_=[1,function(param){return helper(1 + i | 0,tl)}];
        return [0,caml_call2(f,i,h),_acu_]}
      var _acs_=0;
      return function(_act_){return helper(_acs_,_act_)}}
    function iter$1(f,s)
     {var s$0=s;
      for(;;)
       {var match=msplit(s$0);
        if(! match)return 0;
        var match$0=match[1],s$1=match$0[2],x=match$0[1];
        caml_call1(f,x);
        var s$0=s$1}}
    function filter$0(p,s)
     {var match=msplit(s);
      if(! match)return 0;
      var match$0=match[1],x=match$0[1],s$0=match$0[2];
      if(caml_call1(p,x))
       return [0,x,[1,function(param){return filter$0(p,s$0)}]];
      var s$1=match$0[2];
      return [1,function(param){return filter$0(p,s$1)}]}
    function fold$1(f,acc,s)
     {var acc$0=acc,s$0=s;
      for(;;)
       {var match=msplit(s$0);
        if(! match)return acc$0;
        var
         match$0=match[1],
         s$1=match$0[2],
         x=match$0[1],
         acc$1=caml_call2(f,acc$0,x),
         acc$0=acc$1,
         s$0=s$1}}
    function zip(xs,ys)
     {var match=msplit(xs),match$0=msplit(ys);
      if(match)
       {if(match$0)
         {var
           _acr_=match$0[1],
           ys$0=_acr_[2],
           y=_acr_[1],
           match$1=match[1],
           xs$0=match$1[2],
           x=match$1[1];
          return [0,[0,x,y],zip(xs$0,ys$0)]}}
      else
       if(! match$0)return 0;
      return caml_call1(Stdlib[1],cst_OCanren_fatal_Stream_zip_s)}
    function hd(s)
     {var match=msplit(s);
      if(! match)return caml_call1(Stdlib[1],cst_OCanren_fatal_Stream_hd_em);
      var match$0=match[1],x=match$0[1];
      return x}
    function tl(s)
     {var match=msplit(s);
      if(! match)return 0;
      var match$0=match[1],xs=match$0[2];
      return xs}
    function retrieve(opt,s)
     {if(opt)var sth=opt[1],n=sth;else var n=-1;
      if(0 === n)return [0,0,s];
      var match=msplit(s);
      if(! match)return _aI_;
      var
       match$0=match[1],
       s$0=match$0[2],
       x=match$0[1],
       match$1=retrieve([0,n - 1 | 0],s$0),
       s$1=match$1[2],
       xs=match$1[1];
      return [0,[0,x,xs],s$1]}
    function take(n,s){return retrieve(n,s)[1]}
    var
     OCanren_Stream=
      [0,
       nil,
       single,
       cons,
       from_fun,
       suspend,
       of_list$1,
       is_empty$1,
       map$2,
       mapi$0,
       iter$1,
       filter$0,
       fold$1,
       zip,
       mplus,
       bind$0,
       retrieve,
       take,
       hd,
       tl];
    caml_register_global(337,OCanren_Stream,"OCanren__Stream");
    function unctr_term(param)
     {var t=param[2];
      function _acq_(x){return x}
      return map$0(function(v){return [0,v[1],v[2],v[3],v[4],v[5],0]},_acq_,t)}
    function lift(env,param)
     {var t=param[2],vartbl=caml_call1(VarTbl[1],31);
      function helper(x)
       {function _aci_(x){return x}
        return map$0
                (function(v)
                  {try
                    {var _aco_=caml_call2(VarTbl[7],vartbl,v),_acn_=_aco_}
                   catch(_acp_)
                    {_acp_ = caml_wrap_exception(_acp_);
                     if(_acp_ !== Stdlib[8])throw _acp_;
                     var init=fresh(_l_[2],env);
                     caml_call3(VarTbl[5],vartbl,v,init);
                     var
                      _acj_=v[6],
                      _ack_=function(x){return helper(x)},
                      _acl_=caml_call2(Stdlib_List[19],_ack_,_acj_),
                      _acm_=
                       caml_call1(caml_call1(Stdlib_List[56],compare$1),_acl_),
                      _acn_=[0,init[1],init[2],init[3],init[4],init[5],_acm_]}
                   return _acn_},
                 _aci_,
                 x)}
      return [0,env,helper(t)]}
    function equal$4(param,_ach_)
     {var t=_ach_[2],env=_ach_[1],t$0=param[2],env$0=param[1];
      if(! equal$2(env$0,env))
       caml_call1(Stdlib[2],cst_OCanren_fatal_Answer_check);
      return equal$1(t$0,t)}
    function hash$2(param){var t=param[2];return hash$0(t)}
    var Fail=[248,cst_OCanren_Core_Prunes_Fail,caml_fresh_oo_id(0)],empty$4=0;
    function check_last(map,env,subst)
     {try
       {var
         _ace_=caml_call1(Stdlib_List[5],map),
         match=_ace_[2],
         checker=match[2],
         reifier=match[1],
         term=_ace_[1],
         reified=caml_call2(reifier,env,apply(env,subst,term));
        if(1 - caml_call1(checker,reified))throw Fail;
        var _acf_=1;
        return _acf_}
      catch(_acg_)
       {_acg_ = caml_wrap_exception(_acg_);
        if(_acg_ === Stdlib[8])return 1;
        if(_acg_ === Fail)return 0;
        throw _acg_}}
    function recheck$2(ps,env,s)
     {try
       {var
         _aca_=
          function(param)
           {var
             match=param[2],
             checker=match[2],
             reifier=match[1],
             k=param[1],
             reified=caml_call2(reifier,env,apply(env,s,k)),
             _acd_=1 - caml_call1(checker,reified);
            if(_acd_)throw Fail;
            return _acd_};
        caml_call1(caml_call1(Stdlib_List[17],_aca_),ps);
        var _acb_=1;
        return _acb_}
      catch(_acc_)
       {_acc_ = caml_wrap_exception(_acc_);
        if(_acc_ === Fail)return 0;
        throw _acc_}}
    var prunes_control=[0,0,10,11,0];
    function enable_skips(on){prunes_control[1] = on;return 0}
    function is_enabled(param){return prunes_control[1]}
    function reset_cur_counter(param){prunes_control[2] = 0;return 0}
    function reset(param){reset_cur_counter(0);prunes_control[4] = 0;return 0}
    function set_max_skips(n)
     {if(0 >= n)throw [0,Assert_failure,_aJ_];
      prunes_control[3] = n;
      return reset(0)}
    function skipped_prunes(param){return prunes_control[4]}
    function incr(param)
     {var
       _ab__=is_enabled(0),
       _ab$_=
        _ab__
         ?(prunes_control[2]
           =
           1
           +
           prunes_control[2]
           |
           0,
           prunes_control[4]
           =
           1
           +
           prunes_control[4]
           |
           0,
           0)
         :_ab__;
      return _ab$_}
    function is_exceeded(param)
     {var _ab8_=1 - is_enabled(0);
      if(_ab8_)
       var _ab9_=_ab8_;
      else
       var ans=prunes_control[3] <= prunes_control[2]?1:0,_ab9_=ans;
      return _ab9_}
    function new_scope$0(init)
     {var _ab7_=caml_call1(_l_[3],0);
      return [0,init[1],init[2],init[3],init[4],_ab7_]}
    function unify$0(x,y,st)
     {var
       scope=st[5],
       ctrs=st[3],
       subst=st[2],
       env=st[1],
       match=unify(0,[0,scope],env,subst,x,y);
      if(! match)return 0;
      var
       match$0=match[1],
       subst$0=match$0[2],
       prefix=match$0[1],
       match$1=recheck$1(env,subst$0,ctrs,prefix);
      if(! match$1)return 0;
      var ctrs$0=match$1[1],next_state=[0,st[1],subst$0,ctrs$0,st[4],st[5]];
      if(is_exceeded(0))
       {reset_cur_counter(0);
        var match$2=recheck$2(next_state[4],env,subst$0);
        return match$2?[0,next_state]:0}
      incr(0);
      return [0,next_state]}
    function reify$3(x,param)
     {var
       ctrs=param[3],
       subst=param[2],
       env=param[1],
       answ=reify$0(env,subst,x),
       diseqs=reify$1(env,subst,ctrs,x);
      if(! diseqs)return [0,[0,env,answ],0];
      function _abZ_(diseq)
       {function helper(forbidden,t)
         {function _ab0_(x){return x}
          return map$0
                  (function(init)
                    {if(caml_call2(Stdlib_List[36],init[3],forbidden))
                      var v=init;
                     else
                      var
                       _ab1_=caml_call2(_s_[1],diseq,init),
                       _ab2_=
                        function(dt)
                         {var match=var$1(env,dt);
                          if(! match)return 1;
                          var u=match[1];
                          return 1 - caml_call2(Stdlib_List[36],u[3],forbidden)},
                       _ab3_=caml_call1(caml_call1(Stdlib_List[41],_ab2_),_ab1_),
                       _ab4_=function(x){return helper([0,init[3],forbidden],x)},
                       _ab5_=caml_call1(caml_call1(Stdlib_List[19],_ab4_),_ab3_),
                       _ab6_=
                        caml_call1(caml_call1(Stdlib_List[56],compare$1),_ab5_),
                       v=[0,init[1],init[2],init[3],init[4],init[5],_ab6_];
                     return v},
                   _ab0_,
                   t)}
        return [0,env,helper(0,answ)]}
      return caml_call2(Stdlib_ListLabels[19],_abZ_,diseqs)}
    function success(st){return single(st)}
    function failure(param){return nil}
    function only_head(g,st)
     {var stream=caml_call1(g,st);
      try
       {var _abX_=single(hd(stream));return _abX_}
      catch(_abY_)
       {_abY_ = caml_wrap_exception(_abY_);
        if(_abY_[1] === Stdlib[7])return nil;
        throw _abY_}}
    function unify$1(x,y,st)
     {var match=unify$0(x,y,st);
      if(! match)return failure(st);
      var st$0=match[1];
      return success(st$0)}
    function diseq(x,y,st)
     {var ctrs=st[3],subst=st[2],env=st[1],match=add$1(env,subst,ctrs,x,y);
      if(match)
       var
        ctrs$0=match[1],
        match$0=recheck$2(st[4],env,subst),
        match$1=match$0?[0,[0,st[1],st[2],ctrs$0,st[4],st[5]]]:0;
      else
       var match$1=0;
      if(! match$1)return failure(st);
      var st$0=match$1[1];
      return success(st$0)}
    function delay(g,st)
     {return [1,function(param){return caml_call2(g,0,st)}]}
    function symbol$3(f,g,st){return bind$0(caml_call1(f,st),g)}
    function debug_var(v,reifier,call,st)
     {var _abV_=reify$3(v,st);
      function _abW_(answ){return caml_call2(reifier,answ[2],answ[1])}
      var xs=caml_call2(Stdlib_List[19],_abW_,_abV_);
      return caml_call2(call,xs,st)}
    function structural(term,rr,k,st)
     {var
       new_item=[0,rr,k],
       new_constraints=[0,[0,term,new_item],st[4]],
       match=check_last(new_constraints,st[1],st[2]);
      return match
              ?success([0,st[1],st[2],st[3],new_constraints,st[5]])
              :failure(st)}
    function symbol$4(gs,st)
     {if(! gs)throw [0,Assert_failure,_aK_];
      var _abS_=gs[1];
      if(! gs[2])return caml_call1(_abS_,st);
      var tl=gs[2],_abT_=caml_call1(_abS_,st);
      function _abU_(acc,x){return bind$0(acc,x)}
      return caml_call3(Stdlib_List[25],_abU_,_abT_,tl)}
    function disj_base(f,g,st)
     {var _abR_=[1,function(param){return caml_call1(g,st)}];
      return mplus(caml_call1(f,st),_abR_)}
    function symbol$5(f,g,st)
     {var st$0=new_scope$0(st);
      return [1,function(param){return disj_base(f,g,st$0)}]}
    function conde(gs,st)
     {var st$0=new_scope$0(st);
      function inner(param)
       {if(! param)return caml_call1(Stdlib[2],cst_Wrong_argument_of);
        var _abO_=param[1];
        if(! param[2])return _abO_;
        var gs=param[2],_abP_=inner(gs);
        return function(_abQ_){return disj_base(_abO_,_abP_,_abQ_)}}
      var g=inner(gs);
      return [1,function(param){return caml_call1(g,st$0)}]}
    function call_fresh(f,st)
     {var scope=st[5],env=st[1],x=fresh(scope,env);return caml_call2(f,x,st)}
    function wc$0(f,st)
     {var scope=st[5],env=st[1],x=wc(scope,env);return caml_call2(f,x,st)}
    function succ(prev,f)
     {function _abM_(x){return caml_call1(prev,caml_call1(f,x))}
      return function(_abN_){return call_fresh(_abM_,_abN_)}}
    function zero(f){return f}
    function one(f){return succ(zero,f)}
    function two(f){return succ(one,f)}
    function three(f){return succ(two,f)}
    function four(f){return succ(three,f)}
    function five(f){return succ(four,f)}
    var Fresh=[0,succ,zero,one,two,three,four,five,one,two,three,four,five];
    function ext2(x){return x}
    function one$0(_abL_,_abK_){return caml_call1(_abL_,_abK_)}
    function one$1(_abJ_,_abI_){return caml_call1(_abJ_,_abI_)}
    function succ$0(k,f,param)
     {var y=param[2],x=param[1];return caml_call2(k,caml_call1(f,x),y)}
    function zero$0(f){return f}
    function succ$1(prev,f)
     {function _abG_(logic,st)
       {return [0,logic,caml_call2(prev,caml_call1(f,logic),st)]}
      return function(_abH_){return call_fresh(_abG_,_abH_)}}
    function one$2(x,env){return make_rr(env,x)}
    var NUMERAL_TYPS=[0];
    function succ$2(n,param)
     {var
       match=caml_call1(n,0),
       uncurr=match[4],
       ext=match[3],
       app=match[2],
       adder=match[1];
      function _abz_(_abE_,_abF_){return succ$0(uncurr,_abE_,_abF_)}
      function _abA_(param)
       {var
         z=param[2],
         a=param[1],
         match=caml_call1(ext,z),
         base=match[2],
         foo=match[1];
        return [0,[0,a,foo],base]}
      function _abB_(param,env)
       {var xs=param[2],x=param[1],_abD_=caml_call2(app,xs,env);
        return [0,make_rr(env,x),_abD_]}
      return [0,function(_abC_){return succ$1(adder,_abC_)},_abB_,_abA_,_abz_]}
    function q(param)
     {return [0,function(_aby_){return succ$1(zero$0,_aby_)},one$2,ext2,one$1]}
    function qr(param){return succ$2(q,0)}
    function qrs(param){return succ$2(qr,0)}
    function qrst(param){return succ$2(qrs,0)}
    function run(n,g,h)
     {var
       match=caml_call1(n,0),
       uncurr=match[4],
       ext=match[3],
       reifier=match[2],
       adder=match[1],
       _abu_=caml_call1(_l_[3],0),
       _abv_=[0,empty$0(0),_n_,empty$3,empty$4,_abu_],
       match$0=caml_call1(ext,caml_call1(caml_call1(adder,g),_abv_)),
       stream=match$0[2],
       args=match$0[1],
       _abw_=bind$0(stream,function(st){return of_list$1(reify$3(args,st))});
      return map$2
              (function(answ)
                {var _abx_=caml_call2(reifier,answ[2],answ[1]);
                 return caml_call1(caml_call1(uncurr,h),_abx_)},
               _abw_)}
    var H=caml_call1(Stdlib_Hashtbl[26],[0,equal$4,hash$2]);
    function create$0(param){return [0,[0,0],caml_call1(H[1],11)]}
    function contains(param,answ)
     {var tbl=param[2];
      try
       {caml_call2(H[7],tbl,answ);var _abs_=1;return _abs_}
      catch(_abt_)
       {_abt_ = caml_wrap_exception(_abt_);
        if(_abt_ === Stdlib[8])return 0;
        throw _abt_}}
    function consume(param,args)
     {var cache=param[1];
      return function(st)
       {var env=st[1],st$0=new_scope$0(st);
        function helper(start,curr,seen)
         {var curr$0=curr;
          for(;;)
           {if(curr$0 === seen)
             {var is_ready=function(param){return start !== cache[1]?1:0};
              return suspend
                      (is_ready,
                       function(param){return helper(cache[1],cache[1],start)})}
            var
             curr$1=caml_call1(Stdlib_List[6],curr$0),
             answ=lift(env,caml_call1(Stdlib_List[5],curr$0)),
             match=unify$0(args,unctr_term(answ),st$0);
            if(! match){var curr$0=curr$1;continue}
            var
             st=match[1],
             ctrs=st[3],
             subst=st[2],
             t=answ[2],
             env$0=answ[1],
             helper$1=
              function(env)
               {function helper(acc,x)
                 {function _abp_(acc,param){return acc}
                  return fold$0
                          (function(acc,var$0)
                            {var _abq_=var$0[6];
                             function _abr_(acc,ctr_term)
                              {var
                                var$1=[0,var$0[1],var$0[2],var$0[3],var$0[4],var$0[5],0],
                                term=unctr_term([0,env,ctr_term]),
                                acc$0=[0,[0,var$1,term],acc];
                               return helper(acc$0,ctr_term)}
                             return caml_call3(Stdlib_ListLabels[25],_abr_,acc,_abq_)},
                           _abp_,
                           acc,
                           x)}
                return helper},
             helper$0=helper$1(env$0),
             _abk_=helper$0(0,t),
             _abl_=
              function(acc,param)
               {var
                 term=param[2],
                 var$0=param[1],
                 match=add$1(env,_n_,acc,var$0,term);
                if(! match)throw [0,Assert_failure,_aL_];
                var acc$0=match[1];
                return acc$0},
             ctrs$0=caml_call3(Stdlib_ListLabels[25],_abl_,empty$3,_abk_),
             match$0=recheck$1(env,subst,ctrs$0,split$0(subst));
            if(match$0)
             {var
               ctrs$1=match$0[1],
               _abm_=st[5],
               _abn_=st[4],
               _abo_=caml_call2(merge_disjoint$1(env,subst),ctrs,ctrs$1),
               st$1=[0,st[1],st[2],_abo_,_abn_,_abm_];
              return [0,
                      st$1,
                      [1,function(param){return helper(start,curr$1,seen)}]]}
            var curr$0=curr$1}}
        return helper(cache[1],cache[1],0)}}
    function make_answ(args,st)
     {var match=reify$3(args,st);
      if(match && ! match[2])
       {var answ=match[1],env=create(_l_[1]);return lift(env,answ)}
      return caml_call1(Stdlib[2],cst_should_not_happen)}
    function create$1(param){return caml_call1(H[1],1031)}
    function call(tbl,g,args)
     {return function(st)
       {var
         ctrs=st[3],
         env=st[1],
         abs_st=[0,st[1],st[2],empty$3,st[4],st[5]],
         key=make_answ(args,abs_st);
        try
         {var _abf_=caml_call1(consume(caml_call2(H[7],tbl,key),args),st);
          return _abf_}
        catch(_abg_)
         {_abg_ = caml_wrap_exception(_abg_);
          if(_abg_ !== Stdlib[8])throw _abg_;
          var param=create$0(0);
          caml_call3(H[5],tbl,key,param);
          var
           hook=
            function(init)
             {var ctrs$0=init[3],subst=init[2],answ=make_answ(args,init);
              if(contains(param,answ))return failure(0);
              var tbl=param[2],cache=param[1];
              cache[1] = caml_call2(Stdlib_List[4],answ,cache[1]);
              caml_call3(H[5],tbl,answ,0);
              var match=recheck$1(env,subst,ctrs,split$0(subst));
              if(! match)return failure(0);
              var
               ctrs$1=match[1],
               _abh_=init[5],
               _abi_=init[4],
               _abj_=caml_call2(merge_disjoint$1(env,subst),ctrs$1,ctrs$0);
              return success([0,init[1],init[2],_abj_,_abi_,_abh_])};
          return symbol$3(caml_call1(g,args),hook,abs_st)}}}
    function succ$3(n,param)
     {var match=caml_call1(n,0),uncurrier=match[2],currier=match[1];
      function _abc_(_abd_,_abe_){return succ$0(uncurrier,_abd_,_abe_)}
      return [0,
              function(f,x)
               {return caml_call1
                        (currier,function(tup){return caml_call1(f,[0,x,tup])})},
              _abc_]}
    function one$3(param){return [0,one$0,one$1]}
    function two$0(param){return succ$3(one$3,0)}
    function three$0(param){return succ$3(two$0,0)}
    function four$0(param){return succ$3(three$0,0)}
    function five$0(param){return succ$3(four$0,0)}
    function tabled(n,g)
     {var
       tbl=create$1(0),
       match=caml_call1(n,0),
       uncurrier=match[2],
       currier=match[1],
       _aba_=caml_call1(uncurrier,g);
      return caml_call1(currier,function(_abb_){return call(tbl,_aba_,_abb_)})}
    function tabledrec(n,g_norec)
     {var
       tbl=create$1(0),
       match=caml_call1(n,0),
       uncurrier=match[2],
       currier=match[1],
       g=[0,function(param){throw [0,Assert_failure,_aM_]}];
      function g_rec(args)
       {return caml_call2(uncurrier,caml_call1(g_norec,g[1]),args)}
      function g_tabled(_aa$_){return call(tbl,g_rec,_aa$_)}
      g[1] = caml_call1(currier,g_tabled);
      return g[1]}
    var
     Tabling=[0,succ$3,one$3,two$0,three$0,four$0,five$0,tabled,tabledrec],
     PrunesControl=
      [0,reset,enable_skips,set_max_skips,incr,is_exceeded,skipped_prunes],
     State=[0],
     include$0=
      [0,
       State,
       call_fresh,
       wc$0,
       unify$1,
       unify$1,
       diseq,
       diseq,
       structural,
       symbol$3,
       symbol$3,
       symbol$5,
       symbol$5,
       conde,
       conde,
       symbol$4,
       success,
       failure,
       Fresh,
       delay,
       run,
       succ$2,
       NUMERAL_TYPS,
       q,
       qr,
       qrs,
       qrst,
       q,
       qr,
       qrs,
       qrst,
       Tabling,
       debug_var,
       only_head,
       PrunesControl];
    caml_register_global(338,include$0,"OCanren__Core");
    var t_t=[],_aS_=0,_aT_=0;
    caml_update_dummy
     (t_t,
      [0,
       0,
       function(_aa8_)
        {caml_call2(CamlinternalOO[7],_aa8_,cst_c_T);
         return function(_aa__,_aa9_)
          {return caml_call2(CamlinternalOO[24],_aa9_,_aa8_)}},
       _aT_,
       _aS_]);
    function gcata_t(tr,inh,subj)
     {return caml_call3(caml_get_public_method(tr,4944440,9),tr,inh,subj)}
    function _aU_(_aaU_)
     {var
       _aaV_=caml_call2(CamlinternalOO[3],_aaU_,cst$21),
       _aaW_=caml_call2(CamlinternalOO[3],_aaU_,cst$22),
       _aaX_=caml_call2(CamlinternalOO[3],_aaU_,cst$23),
       _aaY_=caml_call2(CamlinternalOO[7],_aaU_,cst_c_T$0),
       _aaZ_=caml_call6(CamlinternalOO[18],_aaU_,0,shared$0,0,t_t,1)[1];
      function _aa0_(self_2,inh_004,param)
       {var x_007=param[3],x_006=param[2],x_005=param[1];
        return caml_call8
                (Stdlib_Format[129],
                 inh_004,
                 _aV_,
                 self_2[1 + _aaV_],
                 x_005,
                 self_2[1 + _aaW_],
                 x_006,
                 self_2[1 + _aaX_],
                 x_007)}
      caml_call3(CamlinternalOO[10],_aaU_,_aaY_,_aa0_);
      return function(_aa6_,_aa5_,_aa4_,_aa3_,_aa2_,_aa1_)
       {var _aa7_=caml_call2(CamlinternalOO[24],_aa5_,_aaU_);
        _aa7_[1 + _aaX_] = _aa2_;
        _aa7_[1 + _aaW_] = _aa3_;
        _aa7_[1 + _aaV_] = _aa4_;
        caml_call1(_aaZ_,_aa7_);
        return caml_call3(CamlinternalOO[26],_aa5_,_aa7_,_aaU_)}}
    var fmt_t_t=caml_call2(CamlinternalOO[19],shared$0,_aU_);
    function fmt_t(fa,fb,fc,inh0,subj)
     {var _aaT_=caml_call4(fmt_t_t[1],0,fa,fb,fc);
      return caml_call4(GT[2],gcata_t,_aaT_,inh0,subj)}
    function _aW_(_aaD_)
     {var
       _aaE_=caml_call2(CamlinternalOO[3],_aaD_,cst$24),
       _aaF_=caml_call2(CamlinternalOO[3],_aaD_,cst$25),
       _aaG_=caml_call2(CamlinternalOO[3],_aaD_,cst$26),
       _aaH_=caml_call2(CamlinternalOO[7],_aaD_,cst_c_T$1),
       _aaI_=caml_call6(CamlinternalOO[18],_aaD_,0,shared$0,0,t_t,1)[1];
      function _aaJ_(self_3,inh_008,param)
       {var
         x_011=param[3],
         x_010=param[2],
         x_009=param[1],
         _aaR_=caml_call2(self_3[1 + _aaG_],inh_008,x_011),
         _aaS_=caml_call2(self_3[1 + _aaF_],_aaR_,x_010);
        return caml_call2(self_3[1 + _aaE_],_aaS_,x_009)}
      caml_call3(CamlinternalOO[10],_aaD_,_aaH_,_aaJ_);
      return function(_aaP_,_aaO_,_aaN_,_aaM_,_aaL_,_aaK_)
       {var _aaQ_=caml_call2(CamlinternalOO[24],_aaO_,_aaD_);
        _aaQ_[1 + _aaG_] = _aaL_;
        _aaQ_[1 + _aaF_] = _aaM_;
        _aaQ_[1 + _aaE_] = _aaN_;
        caml_call1(_aaI_,_aaQ_);
        return caml_call3(CamlinternalOO[26],_aaO_,_aaQ_,_aaD_)}}
    var foldr_t_t=caml_call2(CamlinternalOO[19],shared$0,_aW_);
    function foldr_t(fa,fb,fc,inh0,subj)
     {var _aaC_=caml_call4(foldr_t_t[1],0,fa,fb,fc);
      return caml_call4(GT[2],gcata_t,_aaC_,inh0,subj)}
    function _aX_(_aam_)
     {var
       _aan_=caml_call2(CamlinternalOO[3],_aam_,cst$27),
       _aao_=caml_call2(CamlinternalOO[3],_aam_,cst$28),
       _aap_=caml_call2(CamlinternalOO[3],_aam_,cst$29),
       _aaq_=caml_call2(CamlinternalOO[7],_aam_,cst_c_T$2),
       _aar_=caml_call6(CamlinternalOO[18],_aam_,0,shared$0,0,t_t,1)[1];
      function _aas_(self_4,inh_012,param)
       {var
         x_015=param[3],
         x_014=param[2],
         x_013=param[1],
         _aaA_=caml_call2(self_4[1 + _aan_],inh_012,x_013),
         _aaB_=caml_call2(self_4[1 + _aao_],_aaA_,x_014);
        return caml_call2(self_4[1 + _aap_],_aaB_,x_015)}
      caml_call3(CamlinternalOO[10],_aam_,_aaq_,_aas_);
      return function(_aay_,_aax_,_aaw_,_aav_,_aau_,_aat_)
       {var _aaz_=caml_call2(CamlinternalOO[24],_aax_,_aam_);
        _aaz_[1 + _aap_] = _aau_;
        _aaz_[1 + _aao_] = _aav_;
        _aaz_[1 + _aan_] = _aaw_;
        caml_call1(_aar_,_aaz_);
        return caml_call3(CamlinternalOO[26],_aax_,_aaz_,_aam_)}}
    var foldl_t_t=caml_call2(CamlinternalOO[19],shared$0,_aX_);
    function foldl_t(fa,fb,fc,inh0,subj)
     {var _aal_=caml_call4(foldl_t_t[1],0,fa,fb,fc);
      return caml_call4(GT[2],gcata_t,_aal_,inh0,subj)}
    function _aY_(_$4_)
     {var
       _$5_=caml_call2(CamlinternalOO[3],_$4_,cst$30),
       _$6_=caml_call2(CamlinternalOO[3],_$4_,cst$31),
       _$7_=caml_call2(CamlinternalOO[3],_$4_,cst$32),
       _$8_=caml_call2(CamlinternalOO[7],_$4_,cst_c_T$3),
       _$9_=caml_call6(CamlinternalOO[18],_$4_,0,shared$0,0,t_t,1)[1];
      function _$__(self_5,inh_016,param)
       {var
         x_019=param[3],
         x_018=param[2],
         x_017=param[1],
         x_022=inh_016[3],
         x_021=inh_016[2],
         x_020=inh_016[1];
        function _aag_(param){return caml_call2(self_5[1 + _$7_],x_022,x_019)}
        function _aah_(param){return caml_call2(self_5[1 + _$6_],x_021,x_018)}
        function _aai_(param){return caml_call2(self_5[1 + _$5_],x_020,x_017)}
        var
         _aaj_=caml_call2(GT[6],1,_aai_),
         _aak_=caml_call2(GT[6],_aaj_,_aah_);
        return caml_call2(GT[6],_aak_,_aag_)}
      caml_call3(CamlinternalOO[10],_$4_,_$8_,_$__);
      return function(_aae_,_aad_,_aac_,_aab_,_aaa_,_$$_)
       {var _aaf_=caml_call2(CamlinternalOO[24],_aad_,_$4_);
        _aaf_[1 + _$7_] = _aaa_;
        _aaf_[1 + _$6_] = _aab_;
        _aaf_[1 + _$5_] = _aac_;
        caml_call1(_$9_,_aaf_);
        return caml_call3(CamlinternalOO[26],_aad_,_aaf_,_$4_)}}
    var compare_t_t=caml_call2(CamlinternalOO[19],shared$0,_aY_);
    function compare_t(fa,fb,fc,inh0,subj)
     {var _$3_=caml_call4(compare_t_t[1],0,fa,fb,fc);
      return caml_call4(GT[2],gcata_t,_$3_,inh0,subj)}
    function _aZ_(_$N_)
     {var
       _$O_=caml_call2(CamlinternalOO[3],_$N_,cst$33),
       _$P_=caml_call2(CamlinternalOO[3],_$N_,cst$34),
       _$Q_=caml_call2(CamlinternalOO[3],_$N_,cst$35),
       _$R_=caml_call2(CamlinternalOO[7],_$N_,cst_c_T$4),
       _$S_=caml_call6(CamlinternalOO[18],_$N_,0,shared$0,0,t_t,1)[1];
      function _$T_(self_6,inh_023,param)
       {var
         x_026=param[3],
         x_025=param[2],
         x_024=param[1],
         x_029=inh_023[3],
         x_028=inh_023[2],
         x_027=inh_023[1],
         _$1_=caml_call2(self_6[1 + _$O_],x_027,x_024),
         _$2_=_$1_?caml_call2(self_6[1 + _$P_],x_028,x_025):_$1_;
        return _$2_?caml_call2(self_6[1 + _$Q_],x_029,x_026):_$2_}
      caml_call3(CamlinternalOO[10],_$N_,_$R_,_$T_);
      return function(_$Z_,_$Y_,_$X_,_$W_,_$V_,_$U_)
       {var _$0_=caml_call2(CamlinternalOO[24],_$Y_,_$N_);
        _$0_[1 + _$Q_] = _$V_;
        _$0_[1 + _$P_] = _$W_;
        _$0_[1 + _$O_] = _$X_;
        caml_call1(_$S_,_$0_);
        return caml_call3(CamlinternalOO[26],_$Y_,_$0_,_$N_)}}
    var eq_t_t=caml_call2(CamlinternalOO[19],shared$0,_aZ_);
    function eq_t(fa,fb,fc,inh0,subj)
     {var _$M_=caml_call4(eq_t_t[1],0,fa,fb,fc);
      return caml_call4(GT[2],gcata_t,_$M_,inh0,subj)}
    function _a0_(_$v_)
     {var
       _$w_=caml_call2(CamlinternalOO[3],_$v_,cst$36),
       _$x_=caml_call2(CamlinternalOO[3],_$v_,cst$37),
       _$y_=caml_call2(CamlinternalOO[3],_$v_,cst$38),
       _$z_=caml_call2(CamlinternalOO[7],_$v_,cst_c_T$5),
       _$A_=caml_call6(CamlinternalOO[18],_$v_,0,shared$0,0,t_t,1)[1];
      function _$B_(self_7,param,_$J_)
       {var
         x_032=_$J_[3],
         x_031=_$J_[2],
         x_030=_$J_[1],
         _$K_=caml_call2(self_7[1 + _$y_],0,x_032),
         _$L_=caml_call2(self_7[1 + _$x_],0,x_031);
        return [0,caml_call2(self_7[1 + _$w_],0,x_030),_$L_,_$K_]}
      caml_call3(CamlinternalOO[10],_$v_,_$z_,_$B_);
      return function(_$H_,_$G_,_$F_,_$E_,_$D_,_$C_)
       {var _$I_=caml_call2(CamlinternalOO[24],_$G_,_$v_);
        _$I_[1 + _$y_] = _$D_;
        _$I_[1 + _$x_] = _$E_;
        _$I_[1 + _$w_] = _$F_;
        caml_call1(_$A_,_$I_);
        return caml_call3(CamlinternalOO[26],_$G_,_$I_,_$v_)}}
    var gmap_t_t=caml_call2(CamlinternalOO[19],shared$0,_a0_);
    function _a1_(fa,fb,fc,inh0,subj)
     {var _$u_=caml_call4(gmap_t_t[1],0,fa,fb,fc);
      return caml_call4(GT[2],gcata_t,_$u_,inh0,subj)}
    function _a2_(_$c_)
     {var
       _$d_=caml_call2(CamlinternalOO[3],_$c_,cst$39),
       _$e_=caml_call2(CamlinternalOO[3],_$c_,cst$40),
       _$f_=caml_call2(CamlinternalOO[3],_$c_,cst$41),
       _$g_=caml_call2(CamlinternalOO[7],_$c_,cst_c_T$6),
       _$h_=caml_call6(CamlinternalOO[18],_$c_,0,shared$0,0,t_t,1)[1];
      function _$i_(self_8,param,_$q_)
       {var
         x_035=_$q_[3],
         x_034=_$q_[2],
         x_033=_$q_[1],
         _$r_=caml_call2(self_8[1 + _$f_],0,x_035),
         _$s_=caml_call2(self_8[1 + _$e_],0,x_034),
         _$t_=caml_call2(self_8[1 + _$d_],0,x_033);
        return caml_call4(Stdlib_Printf[4],_a3_,_$t_,_$s_,_$r_)}
      caml_call3(CamlinternalOO[10],_$c_,_$g_,_$i_);
      return function(_$o_,_$n_,_$m_,_$l_,_$k_,_$j_)
       {var _$p_=caml_call2(CamlinternalOO[24],_$n_,_$c_);
        _$p_[1 + _$f_] = _$k_;
        _$p_[1 + _$e_] = _$l_;
        _$p_[1 + _$d_] = _$m_;
        caml_call1(_$h_,_$p_);
        return caml_call3(CamlinternalOO[26],_$n_,_$p_,_$c_)}}
    var show_t_t=caml_call2(CamlinternalOO[19],shared$0,_a2_);
    function _a4_(fa,fb,fc,inh0,subj)
     {var _$b_=caml_call4(show_t_t[1],0,fa,fb,fc);
      return caml_call4(GT[2],gcata_t,_$b_,inh0,subj)}
    function _a5_(eta){return caml_call2(GT[2],gcata_t,eta)}
    var
     _a6_=caml_call1(CamlinternalOO[16],_aN_),
     _a7_=caml_call2(CamlinternalOO[8],_a6_,_aP_),
     _a8_=_a7_[1],
     _a9_=_a7_[2],
     _a__=_a7_[3],
     _a$_=_a7_[4],
     _ba_=_a7_[5],
     _bb_=_a7_[6],
     _bc_=_a7_[7];
    function _bd_(self_9,fa,fb,fc,subj)
     {var __$_=caml_call1(GT[4],fc),_$a_=caml_call1(GT[4],fb);
      return _a4_(caml_call1(GT[4],fa),_$a_,__$_,0,subj)}
    function _be_(self_9,fa,fb,fc,subj)
     {var __9_=caml_call1(GT[4],fc),____=caml_call1(GT[4],fb);
      return _a1_(caml_call1(GT[4],fa),____,__9_,0,subj)}
    function _bf_(self_9){return eq_t}
    function _bg_(self_9){return compare_t}
    function _bh_(self_9){return foldl_t}
    function _bi_(self_9){return foldr_t}
    var
     _bj_=
      [0,
       _ba_,
       function(self_9){return fmt_t},
       _a__,
       _bi_,
       _a$_,
       _bh_,
       _bc_,
       _bg_,
       _bb_,
       _bf_,
       _a9_,
       _be_,
       _a8_,
       _bd_];
    caml_call2(CamlinternalOO[11],_a6_,_bj_);
    caml_call1(CamlinternalOO[17],_a6_);
    var t=[0,gcata_t,caml_call2(CamlinternalOO[24],0,_a6_),_a5_];
    function gmap_t(fa,fb,fc,subj)
     {var __7_=caml_call1(GT[4],fc),__8_=caml_call1(GT[4],fb);
      return _a1_(caml_call1(GT[4],fa),__8_,__7_,0,subj)}
    function show_t(fa,fb,fc,subj)
     {var __5_=caml_call1(GT[4],fc),__6_=caml_call1(GT[4],fb);
      return _a4_(caml_call1(GT[4],fa),__6_,__5_,0,subj)}
    var ground_t=[],_bk_=0,_bl_=0;
    caml_update_dummy
     (ground_t,
      [0,
       0,
       function(__2_)
        {caml_call2(CamlinternalOO[7],__2_,cst_c_GROUND);
         return function(__4_,__3_)
          {return caml_call2(CamlinternalOO[24],__3_,__2_)}},
       _bl_,
       _bk_]);
    function gcata_ground(tr,inh,subj)
     {return caml_call3(caml_get_public_method(tr,-610008541,10),tr,inh,subj)}
    function _bm_(__O_)
     {var
       __P_=caml_call2(CamlinternalOO[3],__O_,cst$42),
       __Q_=caml_call2(CamlinternalOO[3],__O_,cst$43),
       __R_=caml_call2(CamlinternalOO[3],__O_,cst$44),
       __S_=caml_call2(CamlinternalOO[7],__O_,cst_c_GROUND$0),
       __T_=caml_call6(CamlinternalOO[18],__O_,0,_aO_,0,ground_t,1)[1];
      function __U_(self_11,inh_039,param)
       {var x_042=param[3],x_041=param[2],x_040=param[1];
        return caml_call8
                (Stdlib_Format[129],
                 inh_039,
                 _bn_,
                 self_11[1 + __P_],
                 x_040,
                 self_11[1 + __Q_],
                 x_041,
                 self_11[1 + __R_],
                 x_042)}
      caml_call3(CamlinternalOO[10],__O_,__S_,__U_);
      return function(__0_,__Z_,__Y_,__X_,__W_,__V_)
       {var __1_=caml_call2(CamlinternalOO[24],__Z_,__O_);
        __1_[1 + __R_] = __W_;
        __1_[1 + __Q_] = __X_;
        __1_[1 + __P_] = __Y_;
        caml_call1(__T_,__1_);
        return caml_call3(CamlinternalOO[26],__Z_,__1_,__O_)}}
    var fmt_ground_t=caml_call2(CamlinternalOO[19],_aO_,_bm_);
    function fmt_ground(fa,fb,fc,inh0,subj)
     {var __N_=caml_call4(fmt_ground_t[1],0,fa,fb,fc);
      return caml_call4(GT[2],gcata_ground,__N_,inh0,subj)}
    function _bo_(__x_)
     {var
       __y_=caml_call2(CamlinternalOO[3],__x_,cst$45),
       __z_=caml_call2(CamlinternalOO[3],__x_,cst$46),
       __A_=caml_call2(CamlinternalOO[3],__x_,cst$47),
       __B_=caml_call2(CamlinternalOO[7],__x_,cst_c_GROUND$1),
       __C_=caml_call6(CamlinternalOO[18],__x_,0,_aO_,0,ground_t,1)[1];
      function __D_(self_12,inh_043,param)
       {var
         x_046=param[3],
         x_045=param[2],
         x_044=param[1],
         __L_=caml_call2(self_12[1 + __A_],inh_043,x_046),
         __M_=caml_call2(self_12[1 + __z_],__L_,x_045);
        return caml_call2(self_12[1 + __y_],__M_,x_044)}
      caml_call3(CamlinternalOO[10],__x_,__B_,__D_);
      return function(__J_,__I_,__H_,__G_,__F_,__E_)
       {var __K_=caml_call2(CamlinternalOO[24],__I_,__x_);
        __K_[1 + __A_] = __F_;
        __K_[1 + __z_] = __G_;
        __K_[1 + __y_] = __H_;
        caml_call1(__C_,__K_);
        return caml_call3(CamlinternalOO[26],__I_,__K_,__x_)}}
    var foldr_ground_t=caml_call2(CamlinternalOO[19],_aO_,_bo_);
    function foldr_ground(fa,fb,fc,inh0,subj)
     {var __w_=caml_call4(foldr_ground_t[1],0,fa,fb,fc);
      return caml_call4(GT[2],gcata_ground,__w_,inh0,subj)}
    function _bp_(__g_)
     {var
       __h_=caml_call2(CamlinternalOO[3],__g_,cst$48),
       __i_=caml_call2(CamlinternalOO[3],__g_,cst$49),
       __j_=caml_call2(CamlinternalOO[3],__g_,cst$50),
       __k_=caml_call2(CamlinternalOO[7],__g_,cst_c_GROUND$2),
       __l_=caml_call6(CamlinternalOO[18],__g_,0,_aO_,0,ground_t,1)[1];
      function __m_(self_13,inh_047,param)
       {var
         x_050=param[3],
         x_049=param[2],
         x_048=param[1],
         __u_=caml_call2(self_13[1 + __h_],inh_047,x_048),
         __v_=caml_call2(self_13[1 + __i_],__u_,x_049);
        return caml_call2(self_13[1 + __j_],__v_,x_050)}
      caml_call3(CamlinternalOO[10],__g_,__k_,__m_);
      return function(__s_,__r_,__q_,__p_,__o_,__n_)
       {var __t_=caml_call2(CamlinternalOO[24],__r_,__g_);
        __t_[1 + __j_] = __o_;
        __t_[1 + __i_] = __p_;
        __t_[1 + __h_] = __q_;
        caml_call1(__l_,__t_);
        return caml_call3(CamlinternalOO[26],__r_,__t_,__g_)}}
    var foldl_ground_t=caml_call2(CamlinternalOO[19],_aO_,_bp_);
    function foldl_ground(fa,fb,fc,inh0,subj)
     {var __f_=caml_call4(foldl_ground_t[1],0,fa,fb,fc);
      return caml_call4(GT[2],gcata_ground,__f_,inh0,subj)}
    function _bq_(_ZY_)
     {var
       _ZZ_=caml_call2(CamlinternalOO[3],_ZY_,cst$51),
       _Z0_=caml_call2(CamlinternalOO[3],_ZY_,cst$52),
       _Z1_=caml_call2(CamlinternalOO[3],_ZY_,cst$53),
       _Z2_=caml_call2(CamlinternalOO[7],_ZY_,cst_c_GROUND$3),
       _Z3_=caml_call6(CamlinternalOO[18],_ZY_,0,_aO_,0,ground_t,1)[1];
      function _Z4_(self_14,inh_051,param)
       {var
         x_054=param[3],
         x_053=param[2],
         x_052=param[1],
         x_057=inh_051[3],
         x_056=inh_051[2],
         x_055=inh_051[1];
        function __a_(param){return caml_call2(self_14[1 + _Z1_],x_057,x_054)}
        function __b_(param){return caml_call2(self_14[1 + _Z0_],x_056,x_053)}
        function __c_(param){return caml_call2(self_14[1 + _ZZ_],x_055,x_052)}
        var __d_=caml_call2(GT[6],1,__c_),__e_=caml_call2(GT[6],__d_,__b_);
        return caml_call2(GT[6],__e_,__a_)}
      caml_call3(CamlinternalOO[10],_ZY_,_Z2_,_Z4_);
      return function(_Z__,_Z9_,_Z8_,_Z7_,_Z6_,_Z5_)
       {var _Z$_=caml_call2(CamlinternalOO[24],_Z9_,_ZY_);
        _Z$_[1 + _Z1_] = _Z6_;
        _Z$_[1 + _Z0_] = _Z7_;
        _Z$_[1 + _ZZ_] = _Z8_;
        caml_call1(_Z3_,_Z$_);
        return caml_call3(CamlinternalOO[26],_Z9_,_Z$_,_ZY_)}}
    var compare_ground_t=caml_call2(CamlinternalOO[19],_aO_,_bq_);
    function compare_ground(fa,fb,fc,inh0,subj)
     {var _ZX_=caml_call4(compare_ground_t[1],0,fa,fb,fc);
      return caml_call4(GT[2],gcata_ground,_ZX_,inh0,subj)}
    function _br_(_ZH_)
     {var
       _ZI_=caml_call2(CamlinternalOO[3],_ZH_,cst$54),
       _ZJ_=caml_call2(CamlinternalOO[3],_ZH_,cst$55),
       _ZK_=caml_call2(CamlinternalOO[3],_ZH_,cst$56),
       _ZL_=caml_call2(CamlinternalOO[7],_ZH_,cst_c_GROUND$4),
       _ZM_=caml_call6(CamlinternalOO[18],_ZH_,0,_aO_,0,ground_t,1)[1];
      function _ZN_(self_15,inh_058,param)
       {var
         x_061=param[3],
         x_060=param[2],
         x_059=param[1],
         x_064=inh_058[3],
         x_063=inh_058[2],
         x_062=inh_058[1],
         _ZV_=caml_call2(self_15[1 + _ZI_],x_062,x_059),
         _ZW_=_ZV_?caml_call2(self_15[1 + _ZJ_],x_063,x_060):_ZV_;
        return _ZW_?caml_call2(self_15[1 + _ZK_],x_064,x_061):_ZW_}
      caml_call3(CamlinternalOO[10],_ZH_,_ZL_,_ZN_);
      return function(_ZT_,_ZS_,_ZR_,_ZQ_,_ZP_,_ZO_)
       {var _ZU_=caml_call2(CamlinternalOO[24],_ZS_,_ZH_);
        _ZU_[1 + _ZK_] = _ZP_;
        _ZU_[1 + _ZJ_] = _ZQ_;
        _ZU_[1 + _ZI_] = _ZR_;
        caml_call1(_ZM_,_ZU_);
        return caml_call3(CamlinternalOO[26],_ZS_,_ZU_,_ZH_)}}
    var eq_ground_t=caml_call2(CamlinternalOO[19],_aO_,_br_);
    function eq_ground(fa,fb,fc,inh0,subj)
     {var _ZG_=caml_call4(eq_ground_t[1],0,fa,fb,fc);
      return caml_call4(GT[2],gcata_ground,_ZG_,inh0,subj)}
    function _bs_(_Zp_)
     {var
       _Zq_=caml_call2(CamlinternalOO[3],_Zp_,cst$57),
       _Zr_=caml_call2(CamlinternalOO[3],_Zp_,cst$58),
       _Zs_=caml_call2(CamlinternalOO[3],_Zp_,cst$59),
       _Zt_=caml_call2(CamlinternalOO[7],_Zp_,cst_c_GROUND$5),
       _Zu_=caml_call6(CamlinternalOO[18],_Zp_,0,_aO_,0,ground_t,1)[1];
      function _Zv_(self_16,param,_ZD_)
       {var
         x_067=_ZD_[3],
         x_066=_ZD_[2],
         x_065=_ZD_[1],
         _ZE_=caml_call2(self_16[1 + _Zs_],0,x_067),
         _ZF_=caml_call2(self_16[1 + _Zr_],0,x_066);
        return [0,caml_call2(self_16[1 + _Zq_],0,x_065),_ZF_,_ZE_]}
      caml_call3(CamlinternalOO[10],_Zp_,_Zt_,_Zv_);
      return function(_ZB_,_ZA_,_Zz_,_Zy_,_Zx_,_Zw_)
       {var _ZC_=caml_call2(CamlinternalOO[24],_ZA_,_Zp_);
        _ZC_[1 + _Zs_] = _Zx_;
        _ZC_[1 + _Zr_] = _Zy_;
        _ZC_[1 + _Zq_] = _Zz_;
        caml_call1(_Zu_,_ZC_);
        return caml_call3(CamlinternalOO[26],_ZA_,_ZC_,_Zp_)}}
    var gmap_ground_t=caml_call2(CamlinternalOO[19],_aO_,_bs_);
    function _bt_(fa,fb,fc,inh0,subj)
     {var _Zo_=caml_call4(gmap_ground_t[1],0,fa,fb,fc);
      return caml_call4(GT[2],gcata_ground,_Zo_,inh0,subj)}
    function _bu_(_Y8_)
     {var
       _Y9_=caml_call2(CamlinternalOO[3],_Y8_,cst$60),
       _Y__=caml_call2(CamlinternalOO[3],_Y8_,cst$61),
       _Y$_=caml_call2(CamlinternalOO[3],_Y8_,cst$62),
       _Za_=caml_call2(CamlinternalOO[7],_Y8_,cst_c_GROUND$6),
       _Zb_=caml_call6(CamlinternalOO[18],_Y8_,0,_aO_,0,ground_t,1)[1];
      function _Zc_(self_17,param,_Zk_)
       {var
         x_070=_Zk_[3],
         x_069=_Zk_[2],
         x_068=_Zk_[1],
         _Zl_=caml_call2(self_17[1 + _Y$_],0,x_070),
         _Zm_=caml_call2(self_17[1 + _Y__],0,x_069),
         _Zn_=caml_call2(self_17[1 + _Y9_],0,x_068);
        return caml_call4(Stdlib_Printf[4],_bv_,_Zn_,_Zm_,_Zl_)}
      caml_call3(CamlinternalOO[10],_Y8_,_Za_,_Zc_);
      return function(_Zi_,_Zh_,_Zg_,_Zf_,_Ze_,_Zd_)
       {var _Zj_=caml_call2(CamlinternalOO[24],_Zh_,_Y8_);
        _Zj_[1 + _Y$_] = _Ze_;
        _Zj_[1 + _Y__] = _Zf_;
        _Zj_[1 + _Y9_] = _Zg_;
        caml_call1(_Zb_,_Zj_);
        return caml_call3(CamlinternalOO[26],_Zh_,_Zj_,_Y8_)}}
    var show_ground_t=caml_call2(CamlinternalOO[19],_aO_,_bu_);
    function _bw_(fa,fb,fc,inh0,subj)
     {var _Y7_=caml_call4(show_ground_t[1],0,fa,fb,fc);
      return caml_call4(GT[2],gcata_ground,_Y7_,inh0,subj)}
    function _bx_(eta){return caml_call2(GT[2],gcata_ground,eta)}
    var
     _by_=caml_call1(CamlinternalOO[16],_aN_),
     _bz_=caml_call2(CamlinternalOO[8],_by_,_aP_),
     _bA_=_bz_[1],
     _bB_=_bz_[2],
     _bC_=_bz_[3],
     _bD_=_bz_[4],
     _bE_=_bz_[5],
     _bF_=_bz_[6],
     _bG_=_bz_[7];
    function _bH_(self_18,fa,fb,fc,subj)
     {var _Y5_=caml_call1(GT[4],fc),_Y6_=caml_call1(GT[4],fb);
      return _bw_(caml_call1(GT[4],fa),_Y6_,_Y5_,0,subj)}
    function _bI_(self_18,fa,fb,fc,subj)
     {var _Y3_=caml_call1(GT[4],fc),_Y4_=caml_call1(GT[4],fb);
      return _bt_(caml_call1(GT[4],fa),_Y4_,_Y3_,0,subj)}
    function _bJ_(self_18){return eq_ground}
    function _bK_(self_18){return compare_ground}
    function _bL_(self_18){return foldl_ground}
    function _bM_(self_18){return foldr_ground}
    var
     _bN_=
      [0,
       _bE_,
       function(self_18){return fmt_ground},
       _bC_,
       _bM_,
       _bD_,
       _bL_,
       _bG_,
       _bK_,
       _bF_,
       _bJ_,
       _bB_,
       _bI_,
       _bA_,
       _bH_];
    caml_call2(CamlinternalOO[11],_by_,_bN_);
    caml_call1(CamlinternalOO[17],_by_);
    var ground=[0,gcata_ground,caml_call2(CamlinternalOO[24],0,_by_),_bx_];
    function gmap_ground(fa,fb,fc,subj)
     {var _Y1_=caml_call1(GT[4],fc),_Y2_=caml_call1(GT[4],fb);
      return _bt_(caml_call1(GT[4],fa),_Y2_,_Y1_,0,subj)}
    function show_ground(fa,fb,fc,subj)
     {var _YZ_=caml_call1(GT[4],fc),_Y0_=caml_call1(GT[4],fb);
      return _bw_(caml_call1(GT[4],fa),_Y0_,_YZ_,0,subj)}
    var logic_t$0=[],_bO_=0,_bP_=0;
    caml_update_dummy
     (logic_t$0,
      [0,
       0,
       function(_YU_)
        {caml_call2(CamlinternalOO[8],_YU_,_aR_);
         var _YV_=caml_call6(CamlinternalOO[18],_YU_,0,_aR_,0,logic_t,1)[1];
         return function(_YX_,_YW_)
          {var _YY_=caml_call2(CamlinternalOO[24],_YW_,_YU_);
           caml_call1(_YV_,_YY_);
           return caml_call3(CamlinternalOO[26],_YW_,_YY_,_YU_)}},
       _bP_,
       _bO_]);
    function _bQ_(_YK_)
     {caml_call2(CamlinternalOO[8],_YK_,_aR_);
      var
       _YL_=caml_call6(CamlinternalOO[18],_YK_,0,_aR_,0,logic_t$0,1)[1],
       _YM_=caml_call6(CamlinternalOO[18],_YK_,0,0,_aQ_,fmt_logic_t,1)[1];
      return function(_YS_,_YR_,_YQ_,_YP_,_YO_,_YN_)
       {var _YT_=caml_call2(CamlinternalOO[24],_YR_,_YK_);
        caml_call1(_YL_,_YT_);
        caml_call3
         (_YM_,
          _YT_,
          function(x_077,param)
           {var x_080=param[3],x_079=param[2],x_078=param[1];
            return caml_call8
                    (Stdlib_Format[129],
                     x_077,
                     _bR_,
                     _YQ_,
                     x_078,
                     _YP_,
                     x_079,
                     _YO_,
                     x_080)},
          _YN_);
        return caml_call3(CamlinternalOO[26],_YR_,_YT_,_YK_)}}
    var fmt_logic_t$0=caml_call2(CamlinternalOO[19],_aQ_,_bQ_);
    function fmt_logic$0(fa,fb,fc,inh_071,subj_072)
     {function _YJ_(x_073,param)
       {var x_076=param[3],x_075=param[2],x_074=param[1];
        return caml_call8
                (Stdlib_Format[129],x_073,_bS_,fa,x_074,fb,x_075,fc,x_076)}
      return caml_call4(GT[224],logic,_YJ_,inh_071,subj_072)}
    function _bT_(_Yz_)
     {caml_call2(CamlinternalOO[8],_Yz_,_aR_);
      var
       _YA_=caml_call6(CamlinternalOO[18],_Yz_,0,_aR_,0,logic_t$0,1)[1],
       _YB_=caml_call6(CamlinternalOO[18],_Yz_,0,0,_aQ_,foldr_logic_t,1)[1];
      return function(_YH_,_YG_,_YF_,_YE_,_YD_,_YC_)
       {var _YI_=caml_call2(CamlinternalOO[24],_YG_,_Yz_);
        caml_call1(_YA_,_YI_);
        caml_call3
         (_YB_,
          _YI_,
          function(x_087,param)
           {var x_090=param[3],x_089=param[2],x_088=param[1];
            return caml_call2
                    (_YF_,
                     caml_call2(_YE_,caml_call2(_YD_,x_087,x_090),x_089),
                     x_088)},
          _YC_);
        return caml_call3(CamlinternalOO[26],_YG_,_YI_,_Yz_)}}
    var foldr_logic_t$0=caml_call2(CamlinternalOO[19],_aQ_,_bT_);
    function foldr_logic$0(fa,fb,fc,inh_081,subj_082)
     {function _Yy_(x_083,param)
       {var x_086=param[3],x_085=param[2],x_084=param[1];
        return caml_call2
                (fa,caml_call2(fb,caml_call2(fc,x_083,x_086),x_085),x_084)}
      return caml_call4(GT[226],logic,_Yy_,inh_081,subj_082)}
    function _bU_(_Yo_)
     {caml_call2(CamlinternalOO[8],_Yo_,_aR_);
      var
       _Yp_=caml_call6(CamlinternalOO[18],_Yo_,0,_aR_,0,logic_t$0,1)[1],
       _Yq_=caml_call6(CamlinternalOO[18],_Yo_,0,0,_aQ_,foldl_logic_t,1)[1];
      return function(_Yw_,_Yv_,_Yu_,_Yt_,_Ys_,_Yr_)
       {var _Yx_=caml_call2(CamlinternalOO[24],_Yv_,_Yo_);
        caml_call1(_Yp_,_Yx_);
        caml_call3
         (_Yq_,
          _Yx_,
          function(x_097,param)
           {var x_100=param[3],x_099=param[2],x_098=param[1];
            return caml_call2
                    (_Ys_,
                     caml_call2(_Yt_,caml_call2(_Yu_,x_097,x_098),x_099),
                     x_100)},
          _Yr_);
        return caml_call3(CamlinternalOO[26],_Yv_,_Yx_,_Yo_)}}
    var foldl_logic_t$0=caml_call2(CamlinternalOO[19],_aQ_,_bU_);
    function foldl_logic$0(fa,fb,fc,inh_091,subj_092)
     {function _Yn_(x_093,param)
       {var x_096=param[3],x_095=param[2],x_094=param[1];
        return caml_call2
                (fc,caml_call2(fb,caml_call2(fa,x_093,x_094),x_095),x_096)}
      return caml_call4(GT[225],logic,_Yn_,inh_091,subj_092)}
    function _bV_(_X__)
     {caml_call2(CamlinternalOO[8],_X__,_aR_);
      var
       _X$_=caml_call6(CamlinternalOO[18],_X__,0,_aR_,0,logic_t$0,1)[1],
       _Ya_=caml_call6(CamlinternalOO[18],_X__,0,0,_aQ_,compare_logic_t,1)[1];
      return function(_Yg_,_Yf_,_Ye_,_Yd_,_Yc_,_Yb_)
       {var _Yh_=caml_call2(CamlinternalOO[24],_Yf_,_X__);
        caml_call1(_X$_,_Yh_);
        caml_call3
         (_Ya_,
          _Yh_,
          function(x_108,param)
           {var
             x_111=param[3],
             x_110=param[2],
             x_109=param[1],
             x_114=x_108[3],
             x_113=x_108[2],
             x_112=x_108[1];
            function _Yi_(param){return caml_call2(_Yc_,x_114,x_111)}
            function _Yj_(param){return caml_call2(_Yd_,x_113,x_110)}
            function _Yk_(param){return caml_call2(_Ye_,x_112,x_109)}
            var
             _Yl_=caml_call2(GT[6],1,_Yk_),
             _Ym_=caml_call2(GT[6],_Yl_,_Yj_);
            return caml_call2(GT[6],_Ym_,_Yi_)},
          _Yb_);
        return caml_call3(CamlinternalOO[26],_Yf_,_Yh_,_X__)}}
    var compare_logic_t$0=caml_call2(CamlinternalOO[19],_aQ_,_bV_);
    function compare_logic$0(fa,fb,fc,inh,subj)
     {function _X4_(x_101,param)
       {var
         x_104=param[3],
         x_103=param[2],
         x_102=param[1],
         x_107=x_101[3],
         x_106=x_101[2],
         x_105=x_101[1];
        function _X5_(param){return caml_call2(fc,x_107,x_104)}
        function _X6_(param){return caml_call2(fb,x_106,x_103)}
        function _X7_(param){return caml_call2(fa,x_105,x_102)}
        var _X8_=caml_call2(GT[6],1,_X7_),_X9_=caml_call2(GT[6],_X8_,_X6_);
        return caml_call2(GT[6],_X9_,_X5_)}
      return caml_call4(GT[228],logic,_X4_,inh,subj)}
    function _bW_(_XS_)
     {caml_call2(CamlinternalOO[8],_XS_,_aR_);
      var
       _XT_=caml_call6(CamlinternalOO[18],_XS_,0,_aR_,0,logic_t$0,1)[1],
       _XU_=caml_call6(CamlinternalOO[18],_XS_,0,0,_aQ_,eq_logic_t,1)[1];
      return function(_X0_,_XZ_,_XY_,_XX_,_XW_,_XV_)
       {var _X1_=caml_call2(CamlinternalOO[24],_XZ_,_XS_);
        caml_call1(_XT_,_X1_);
        caml_call3
         (_XU_,
          _X1_,
          function(x_122,param)
           {var
             x_125=param[3],
             x_124=param[2],
             x_123=param[1],
             x_128=x_122[3],
             x_127=x_122[2],
             x_126=x_122[1],
             _X2_=caml_call2(_XY_,x_126,x_123),
             _X3_=_X2_?caml_call2(_XX_,x_127,x_124):_X2_;
            return _X3_?caml_call2(_XW_,x_128,x_125):_X3_},
          _XV_);
        return caml_call3(CamlinternalOO[26],_XZ_,_X1_,_XS_)}}
    var eq_logic_t$0=caml_call2(CamlinternalOO[19],_aQ_,_bW_);
    function eq_logic$0(fa,fb,fc,inh,subj)
     {function _XP_(x_115,param)
       {var
         x_118=param[3],
         x_117=param[2],
         x_116=param[1],
         x_121=x_115[3],
         x_120=x_115[2],
         x_119=x_115[1],
         _XQ_=caml_call2(fa,x_119,x_116),
         _XR_=_XQ_?caml_call2(fb,x_120,x_117):_XQ_;
        return _XR_?caml_call2(fc,x_121,x_118):_XR_}
      return caml_call4(GT[227],logic,_XP_,inh,subj)}
    function _bX_(_XD_)
     {caml_call2(CamlinternalOO[8],_XD_,_aR_);
      var
       _XE_=caml_call6(CamlinternalOO[18],_XD_,0,_aR_,0,logic_t$0,1)[1],
       _XF_=caml_call6(CamlinternalOO[18],_XD_,0,0,_aQ_,gmap_logic_t,1)[1];
      return function(_XL_,_XK_,_XJ_,_XI_,_XH_,_XG_)
       {var _XM_=caml_call2(CamlinternalOO[24],_XK_,_XD_);
        caml_call1(_XE_,_XM_);
        caml_call3
         (_XF_,
          _XM_,
          function(x_133,param)
           {var
             x_136=param[3],
             x_135=param[2],
             x_134=param[1],
             _XN_=caml_call2(_XH_,x_133,x_136),
             _XO_=caml_call2(_XI_,x_133,x_135);
            return [0,caml_call2(_XJ_,x_133,x_134),_XO_,_XN_]},
          _XG_);
        return caml_call3(CamlinternalOO[26],_XK_,_XM_,_XD_)}}
    var gmap_logic_t$0=caml_call2(CamlinternalOO[19],_aQ_,_bX_);
    function _bY_(fa,fb,fc,param,subj)
     {var x_129=0;
      function _XA_(param)
       {var
         x_132=param[3],
         x_131=param[2],
         x_130=param[1],
         _XB_=caml_call2(fc,x_129,x_132),
         _XC_=caml_call2(fb,x_129,x_131);
        return [0,caml_call2(fa,x_129,x_130),_XC_,_XB_]}
      return caml_call3(GT[223],logic,_XA_,subj)}
    function _bZ_(_Xn_)
     {caml_call2(CamlinternalOO[8],_Xn_,_aR_);
      var
       _Xo_=caml_call6(CamlinternalOO[18],_Xn_,0,_aR_,0,logic_t$0,1)[1],
       _Xp_=caml_call6(CamlinternalOO[18],_Xn_,0,0,_aQ_,show_logic_t,1)[1];
      return function(_Xv_,_Xu_,_Xt_,_Xs_,_Xr_,_Xq_)
       {var _Xw_=caml_call2(CamlinternalOO[24],_Xu_,_Xn_);
        caml_call1(_Xo_,_Xw_);
        caml_call3
         (_Xp_,
          _Xw_,
          function(x_141,param)
           {var
             x_144=param[3],
             x_143=param[2],
             x_142=param[1],
             _Xx_=caml_call2(_Xr_,0,x_144),
             _Xy_=caml_call2(_Xs_,0,x_143),
             _Xz_=caml_call2(_Xt_,0,x_142);
            return caml_call4(Stdlib_Printf[4],_b0_,_Xz_,_Xy_,_Xx_)},
          _Xq_);
        return caml_call3(CamlinternalOO[26],_Xu_,_Xw_,_Xn_)}}
    var show_logic_t$0=caml_call2(CamlinternalOO[19],_aQ_,_bZ_);
    function _b1_(fa,fb,fc,param,subj)
     {function _Xj_(param)
       {var
         x_140=param[3],
         x_139=param[2],
         x_138=param[1],
         _Xk_=caml_call2(fc,0,x_140),
         _Xl_=caml_call2(fb,0,x_139),
         _Xm_=caml_call2(fa,0,x_138);
        return caml_call4(Stdlib_Printf[4],_b2_,_Xm_,_Xl_,_Xk_)}
      return caml_call3(GT[221],logic,_Xj_,subj)}
    function _b3_(eta){return caml_call2(GT[2],gcata_logic,eta)}
    var
     _b4_=caml_call1(CamlinternalOO[16],_aN_),
     _b5_=caml_call2(CamlinternalOO[8],_b4_,_aP_),
     _b6_=_b5_[1],
     _b7_=_b5_[2],
     _b8_=_b5_[3],
     _b9_=_b5_[4],
     _b__=_b5_[5],
     _b$_=_b5_[6],
     _ca_=_b5_[7];
    function _cb_(self_27,fa,fb,fc,subj)
     {var _Xh_=caml_call1(GT[4],fc),_Xi_=caml_call1(GT[4],fb);
      return _b1_(caml_call1(GT[4],fa),_Xi_,_Xh_,0,subj)}
    function _cc_(self_27,fa,fb,fc,subj)
     {var _Xf_=caml_call1(GT[4],fc),_Xg_=caml_call1(GT[4],fb);
      return _bY_(caml_call1(GT[4],fa),_Xg_,_Xf_,0,subj)}
    function _cd_(self_27){return eq_logic$0}
    function _ce_(self_27){return compare_logic$0}
    function _cf_(self_27){return foldl_logic$0}
    function _cg_(self_27){return foldr_logic$0}
    var
     _ch_=
      [0,
       _b__,
       function(self_27){return fmt_logic$0},
       _b8_,
       _cg_,
       _b9_,
       _cf_,
       _ca_,
       _ce_,
       _b$_,
       _cd_,
       _b7_,
       _cc_,
       _b6_,
       _cb_];
    caml_call2(CamlinternalOO[11],_b4_,_ch_);
    caml_call1(CamlinternalOO[17],_b4_);
    var _ci_=caml_call2(CamlinternalOO[24],0,_b4_);
    function gmap_logic$0(fa,fb,fc,subj)
     {var _Xd_=caml_call1(GT[4],fc),_Xe_=caml_call1(GT[4],fb);
      return _bY_(caml_call1(GT[4],fa),_Xe_,_Xd_,0,subj)}
    function show_logic$0(fa,fb,fc,subj)
     {var _Xb_=caml_call1(GT[4],fc),_Xc_=caml_call1(GT[4],fb);
      return _b1_(caml_call1(GT[4],fa),_Xc_,_Xb_,0,subj)}
    var
     _cj_=caml_call1(CamlinternalOO[16],_aN_),
     _ck_=caml_call2(CamlinternalOO[8],_cj_,_aP_),
     _cl_=_ck_[1],
     _cm_=_ck_[2],
     _cn_=_ck_[3],
     _co_=_ck_[4],
     _cp_=_ck_[5],
     _cq_=_ck_[6],
     _cr_=_ck_[7];
    function _cs_(self_28,fa,fb,fc)
     {function _Xa_(l){return caml_call5(GT[221],ground,fa,fb,fc,l)}
      return caml_call2(GT[221],logic,_Xa_)}
    function _ct_(self_28)
     {return caml_call1(caml_get_public_method(_ci_,5096781,11),_ci_)}
    function _cu_(self_28)
     {return caml_call1(caml_get_public_method(_ci_,76555601,12),_ci_)}
    function _cv_(self_28)
     {return caml_call1(caml_get_public_method(_ci_,76555595,13),_ci_)}
    function _cw_(self_28)
     {return caml_call1(caml_get_public_method(_ci_,22636,14),_ci_)}
    function _cx_(self_28)
     {return caml_call1(caml_get_public_method(_ci_,-999816043,15),_ci_)}
    var
     _cy_=
      [0,
       _cr_,
       function(self_28)
        {return caml_call1(caml_get_public_method(_ci_,57219237,16),_ci_)},
       _cm_,
       _cx_,
       _cq_,
       _cw_,
       _co_,
       _cv_,
       _cn_,
       _cu_,
       _cp_,
       _ct_,
       _cl_,
       _cs_];
    caml_call2(CamlinternalOO[11],_cj_,_cy_);
    caml_call1(CamlinternalOO[17],_cj_);
    var logic$0=[0,gcata_logic,caml_call2(CamlinternalOO[24],0,_cj_),_b3_];
    function inj(f,g,h,p){return [1,caml_call5(GT[223],ground,f,g,h,p)]}
    function triple(x,y,z){return [0,x,y,z]}
    function reify$4(ra,rb,rc)
     {var symbol_bind=_m_[3];
      function _W__(self)
       {var
         _W$_=
          caml_call2
           (symbol_bind,
            ra,
            function(fa)
             {return caml_call2
                      (symbol_bind,
                       rb,
                       function(fb)
                        {return caml_call2
                                 (symbol_bind,
                                  rc,
                                  function(fc)
                                   {function foo(param)
                                     {if(0 === param[0])
                                       {var xs=param[2],v=param[1];
                                        return [0,v,caml_call2(Stdlib_List[19],foo,xs)]}
                                      var x=param[1];
                                      return [1,caml_call5(GT[223],t,fa,fb,fc,x)]}
                                    return caml_call1(_m_[1],foo)})})});
        return caml_call2(Reifier[4],Reifier[1],_W$_)}
      return caml_call1(Reifier[7],_W__)}
    function prj_exn$0(ra,rb,rc)
     {var
       symbol_bind=_m_[3],
       _W8_=
        caml_call2
         (symbol_bind,
          ra,
          function(fa)
           {return caml_call2
                    (symbol_bind,
                     rb,
                     function(fb)
                      {return caml_call2
                               (symbol_bind,
                                rc,
                                function(fc)
                                 {function _W9_(x){return caml_call5(GT[223],t,fa,fb,fc,x)}
                                  return caml_call1(_m_[1],_W9_)})})});
      return caml_call2(Reifier[4],Reifier[2],_W8_)}
    var
     OCanren_Triple=
      [0,
       t_t,
       gcata_t,
       fmt_t_t,
       fmt_t,
       foldr_t_t,
       foldr_t,
       foldl_t_t,
       foldl_t,
       compare_t_t,
       compare_t,
       eq_t_t,
       eq_t,
       gmap_t_t,
       gmap_t,
       show_t_t,
       show_t,
       t,
       ground_t,
       gcata_ground,
       fmt_ground_t,
       fmt_ground,
       foldr_ground_t,
       foldr_ground,
       foldl_ground_t,
       foldl_ground,
       compare_ground_t,
       compare_ground,
       eq_ground_t,
       eq_ground,
       gmap_ground_t,
       gmap_ground,
       show_ground_t,
       show_ground,
       ground,
       logic_t$0,
       gcata_logic,
       fmt_logic_t$0,
       fmt_logic$0,
       foldr_logic_t$0,
       foldr_logic$0,
       foldl_logic_t$0,
       foldl_logic$0,
       compare_logic_t$0,
       compare_logic$0,
       eq_logic_t$0,
       eq_logic$0,
       gmap_logic_t$0,
       gmap_logic$0,
       show_logic_t$0,
       show_logic$0,
       logic$0,
       inj,
       triple,
       triple,
       reify$4,
       prj_exn$0];
    caml_register_global(339,OCanren_Triple,"OCanren__Triple");
    function add_span(param,_W7_)
     {var s2=_W7_[2],ms2=_W7_[1],s=param[2],ms=param[1];
      return [254,ms + ms2,s + s2]}
    var timer=[0,0];
    function install_timer(t){timer[1] = [0,t];return 0}
    function make$1(param)
     {var _W6_=timer[1];
      if(! _W6_)return caml_call1(Stdlib[2],cst_Timer_is_not_installed_Add);
      var Timer=_W6_[1],origin=caml_call1(Timer[1],0);
      return function(param)
       {var next=caml_call1(Timer[1],0);
        return caml_call2(Timer[2],next,origin)}}
    var OCanren_Timer=[0,empty_span,add_span,install_timer,make$1];
    caml_register_global(340,OCanren_Timer,"OCanren__Timer");
    var OCanren_Peep=[0];
    caml_register_global(341,OCanren_Peep,"OCanren__Peep");
    var logic_t$1=[],_cE_=0,_cF_=0;
    caml_update_dummy
     (logic_t$1,
      [0,
       0,
       function(_W1_)
        {caml_call2(CamlinternalOO[8],_W1_,_cC_);
         var _W2_=caml_call6(CamlinternalOO[18],_W1_,0,_cC_,0,logic_t,1)[1];
         return function(_W4_,_W3_)
          {var _W5_=caml_call2(CamlinternalOO[24],_W3_,_W1_);
           caml_call1(_W2_,_W5_);
           return caml_call3(CamlinternalOO[26],_W3_,_W5_,_W1_)}},
       _cF_,
       _cE_]);
    function _cG_(_WT_)
     {caml_call2(CamlinternalOO[8],_WT_,_cC_);
      var
       _WU_=caml_call6(CamlinternalOO[18],_WT_,0,_cC_,0,logic_t$1,1)[1],
       _WV_=caml_call6(CamlinternalOO[18],_WT_,0,0,_cB_,fmt_logic_t,1)[1];
      return function(_WZ_,_WY_,_WX_,_WW_)
       {var _W0_=caml_call2(CamlinternalOO[24],_WY_,_WT_);
        caml_call1(_WU_,_W0_);
        caml_call3(_WV_,_W0_,_WX_,_WW_);
        return caml_call3(CamlinternalOO[26],_WY_,_W0_,_WT_)}}
    var fmt_logic_t$1=caml_call2(CamlinternalOO[19],_cB_,_cG_);
    function fmt_logic$1(fa,inh_001,subj_002)
     {return caml_call4(GT[224],logic,fa,inh_001,subj_002)}
    function _cH_(_WL_)
     {caml_call2(CamlinternalOO[8],_WL_,_cC_);
      var
       _WM_=caml_call6(CamlinternalOO[18],_WL_,0,_cC_,0,logic_t$1,1)[1],
       _WN_=caml_call6(CamlinternalOO[18],_WL_,0,0,_cB_,foldr_logic_t,1)[1];
      return function(_WR_,_WQ_,_WP_,_WO_)
       {var _WS_=caml_call2(CamlinternalOO[24],_WQ_,_WL_);
        caml_call1(_WM_,_WS_);
        caml_call3(_WN_,_WS_,_WP_,_WO_);
        return caml_call3(CamlinternalOO[26],_WQ_,_WS_,_WL_)}}
    var foldr_logic_t$1=caml_call2(CamlinternalOO[19],_cB_,_cH_);
    function foldr_logic$1(fa,inh_003,subj_004)
     {return caml_call4(GT[226],logic,fa,inh_003,subj_004)}
    function _cI_(_WD_)
     {caml_call2(CamlinternalOO[8],_WD_,_cC_);
      var
       _WE_=caml_call6(CamlinternalOO[18],_WD_,0,_cC_,0,logic_t$1,1)[1],
       _WF_=caml_call6(CamlinternalOO[18],_WD_,0,0,_cB_,foldl_logic_t,1)[1];
      return function(_WJ_,_WI_,_WH_,_WG_)
       {var _WK_=caml_call2(CamlinternalOO[24],_WI_,_WD_);
        caml_call1(_WE_,_WK_);
        caml_call3(_WF_,_WK_,_WH_,_WG_);
        return caml_call3(CamlinternalOO[26],_WI_,_WK_,_WD_)}}
    var foldl_logic_t$1=caml_call2(CamlinternalOO[19],_cB_,_cI_);
    function foldl_logic$1(fa,inh_005,subj_006)
     {return caml_call4(GT[225],logic,fa,inh_005,subj_006)}
    function _cJ_(_Wv_)
     {caml_call2(CamlinternalOO[8],_Wv_,_cC_);
      var
       _Ww_=caml_call6(CamlinternalOO[18],_Wv_,0,_cC_,0,logic_t$1,1)[1],
       _Wx_=caml_call6(CamlinternalOO[18],_Wv_,0,0,_cB_,compare_logic_t,1)[1];
      return function(_WB_,_WA_,_Wz_,_Wy_)
       {var _WC_=caml_call2(CamlinternalOO[24],_WA_,_Wv_);
        caml_call1(_Ww_,_WC_);
        caml_call3(_Wx_,_WC_,_Wz_,_Wy_);
        return caml_call3(CamlinternalOO[26],_WA_,_WC_,_Wv_)}}
    var compare_logic_t$1=caml_call2(CamlinternalOO[19],_cB_,_cJ_);
    function compare_logic$1(fa,inh,subj)
     {return caml_call4(GT[228],logic,fa,inh,subj)}
    function _cK_(_Wn_)
     {caml_call2(CamlinternalOO[8],_Wn_,_cC_);
      var
       _Wo_=caml_call6(CamlinternalOO[18],_Wn_,0,_cC_,0,logic_t$1,1)[1],
       _Wp_=caml_call6(CamlinternalOO[18],_Wn_,0,0,_cB_,eq_logic_t,1)[1];
      return function(_Wt_,_Ws_,_Wr_,_Wq_)
       {var _Wu_=caml_call2(CamlinternalOO[24],_Ws_,_Wn_);
        caml_call1(_Wo_,_Wu_);
        caml_call3(_Wp_,_Wu_,_Wr_,_Wq_);
        return caml_call3(CamlinternalOO[26],_Ws_,_Wu_,_Wn_)}}
    var eq_logic_t$1=caml_call2(CamlinternalOO[19],_cB_,_cK_);
    function eq_logic$1(fa,inh,subj)
     {return caml_call4(GT[227],logic,fa,inh,subj)}
    function _cL_(_Wf_)
     {caml_call2(CamlinternalOO[8],_Wf_,_cC_);
      var
       _Wg_=caml_call6(CamlinternalOO[18],_Wf_,0,_cC_,0,logic_t$1,1)[1],
       _Wh_=caml_call6(CamlinternalOO[18],_Wf_,0,0,_cB_,html_logic_t,1)[1];
      return function(_Wl_,_Wk_,_Wj_,_Wi_)
       {var _Wm_=caml_call2(CamlinternalOO[24],_Wk_,_Wf_);
        caml_call1(_Wg_,_Wm_);
        caml_call3(_Wh_,_Wm_,_Wj_,_Wi_);
        return caml_call3(CamlinternalOO[26],_Wk_,_Wm_,_Wf_)}}
    var html_logic_t$0=caml_call2(CamlinternalOO[19],_cB_,_cL_);
    function _cM_(_V9_)
     {caml_call2(CamlinternalOO[8],_V9_,_cC_);
      var
       _V__=caml_call6(CamlinternalOO[18],_V9_,0,_cC_,0,logic_t$1,1)[1],
       _V$_=caml_call6(CamlinternalOO[18],_V9_,0,0,_cB_,gmap_logic_t,1)[1];
      return function(_Wd_,_Wc_,_Wb_,_Wa_)
       {var _We_=caml_call2(CamlinternalOO[24],_Wc_,_V9_);
        caml_call1(_V__,_We_);
        caml_call3(_V$_,_We_,_Wb_,_Wa_);
        return caml_call3(CamlinternalOO[26],_Wc_,_We_,_V9_)}}
    var gmap_logic_t$1=caml_call2(CamlinternalOO[19],_cB_,_cM_);
    function _cN_(_V1_)
     {caml_call2(CamlinternalOO[8],_V1_,_cC_);
      var
       _V2_=caml_call6(CamlinternalOO[18],_V1_,0,_cC_,0,logic_t$1,1)[1],
       _V3_=caml_call6(CamlinternalOO[18],_V1_,0,0,_cB_,show_logic_t,1)[1];
      return function(_V7_,_V6_,_V5_,_V4_)
       {var _V8_=caml_call2(CamlinternalOO[24],_V6_,_V1_);
        caml_call1(_V2_,_V8_);
        caml_call3(_V3_,_V8_,_V5_,_V4_);
        return caml_call3(CamlinternalOO[26],_V6_,_V8_,_V1_)}}
    var
     show_logic_t$1=caml_call2(CamlinternalOO[19],_cB_,_cN_),
     _cO_=caml_call1(CamlinternalOO[16],_cz_),
     _cP_=caml_call2(CamlinternalOO[8],_cO_,_cD_),
     _cQ_=_cP_[1],
     _cR_=_cP_[2],
     _cS_=_cP_[3],
     _cT_=_cP_[4],
     _cU_=_cP_[5],
     _cV_=_cP_[6],
     _cW_=_cP_[7],
     _cX_=_cP_[8];
    function _cY_(self_10,fa,subj)
     {var fa$0=caml_call1(GT[4],fa),_V0_=caml_call1(fa$0,0);
      return caml_call3(GT[221],logic,_V0_,subj)}
    function _cZ_(self_10,fa,subj)
     {var fa$0=caml_call1(GT[4],fa),_VZ_=caml_call1(fa$0,0);
      return caml_call3(GT[223],logic,_VZ_,subj)}
    function _c0_(self_10,fa,subj)
     {var fa$0=caml_call1(GT[4],fa),_VY_=caml_call1(fa$0,0);
      return caml_call3(GT[222],logic,_VY_,subj)}
    function _c1_(self_10){return eq_logic$1}
    function _c2_(self_10){return compare_logic$1}
    function _c3_(self_10){return foldl_logic$1}
    function _c4_(self_10){return foldr_logic$1}
    var
     _c5_=
      [0,
       _cV_,
       function(self_10){return fmt_logic$1},
       _cT_,
       _c4_,
       _cU_,
       _c3_,
       _cX_,
       _c2_,
       _cW_,
       _c1_,
       _cR_,
       _c0_,
       _cS_,
       _cZ_,
       _cQ_,
       _cY_];
    caml_call2(CamlinternalOO[11],_cO_,_c5_);
    caml_call1(CamlinternalOO[17],_cO_);
    caml_call2(CamlinternalOO[24],0,_cO_);
    var t_t$0=[],_c6_=0,_c7_=0;
    caml_update_dummy
     (t_t$0,
      [0,
       0,
       function(_VV_)
        {caml_call2(CamlinternalOO[7],_VV_,cst_c_T$7);
         return function(_VX_,_VW_)
          {return caml_call2(CamlinternalOO[24],_VW_,_VV_)}},
       _c7_,
       _c6_]);
    function gcata_t$0(tr,inh,subj)
     {return caml_call3(caml_get_public_method(tr,4944440,17),tr,inh,subj)}
    function _c8_(_VJ_)
     {var
       _VK_=caml_call2(CamlinternalOO[3],_VJ_,cst$63),
       _VL_=caml_call2(CamlinternalOO[3],_VJ_,cst$64),
       _VM_=caml_call2(CamlinternalOO[7],_VJ_,cst_c_T$8),
       _VN_=caml_call6(CamlinternalOO[18],_VJ_,0,shared$1,0,t_t$0,1)[1];
      function _VO_(self_12,inh_009,param)
       {var x_011=param[2],x_010=param[1];
        return caml_call6
                (Stdlib_Format[129],
                 inh_009,
                 _c9_,
                 self_12[1 + _VK_],
                 x_010,
                 self_12[1 + _VL_],
                 x_011)}
      caml_call3(CamlinternalOO[10],_VJ_,_VM_,_VO_);
      return function(_VT_,_VS_,_VR_,_VQ_,_VP_)
       {var _VU_=caml_call2(CamlinternalOO[24],_VS_,_VJ_);
        _VU_[1 + _VL_] = _VQ_;
        _VU_[1 + _VK_] = _VR_;
        caml_call1(_VN_,_VU_);
        return caml_call3(CamlinternalOO[26],_VS_,_VU_,_VJ_)}}
    var fmt_t_t$0=caml_call2(CamlinternalOO[19],shared$1,_c8_);
    function fmt_t$0(fa,fb,inh0,subj)
     {var _VI_=caml_call3(fmt_t_t$0[1],0,fa,fb);
      return caml_call4(GT[2],gcata_t$0,_VI_,inh0,subj)}
    function _c__(_Vv_)
     {var
       _Vw_=caml_call2(CamlinternalOO[3],_Vv_,cst$65),
       _Vx_=caml_call2(CamlinternalOO[3],_Vv_,cst$66),
       _Vy_=caml_call2(CamlinternalOO[7],_Vv_,cst_c_T$9),
       _Vz_=caml_call6(CamlinternalOO[18],_Vv_,0,shared$1,0,t_t$0,1)[1];
      function _VA_(self_13,inh_012,param)
       {var
         x_014=param[2],
         x_013=param[1],
         _VH_=caml_call2(self_13[1 + _Vx_],inh_012,x_014);
        return caml_call2(self_13[1 + _Vw_],_VH_,x_013)}
      caml_call3(CamlinternalOO[10],_Vv_,_Vy_,_VA_);
      return function(_VF_,_VE_,_VD_,_VC_,_VB_)
       {var _VG_=caml_call2(CamlinternalOO[24],_VE_,_Vv_);
        _VG_[1 + _Vx_] = _VC_;
        _VG_[1 + _Vw_] = _VD_;
        caml_call1(_Vz_,_VG_);
        return caml_call3(CamlinternalOO[26],_VE_,_VG_,_Vv_)}}
    var foldr_t_t$0=caml_call2(CamlinternalOO[19],shared$1,_c__);
    function foldr_t$0(fa,fb,inh0,subj)
     {var _Vu_=caml_call3(foldr_t_t$0[1],0,fa,fb);
      return caml_call4(GT[2],gcata_t$0,_Vu_,inh0,subj)}
    function _c$_(_Vh_)
     {var
       _Vi_=caml_call2(CamlinternalOO[3],_Vh_,cst$67),
       _Vj_=caml_call2(CamlinternalOO[3],_Vh_,cst$68),
       _Vk_=caml_call2(CamlinternalOO[7],_Vh_,cst_c_T$10),
       _Vl_=caml_call6(CamlinternalOO[18],_Vh_,0,shared$1,0,t_t$0,1)[1];
      function _Vm_(self_14,inh_015,param)
       {var
         x_017=param[2],
         x_016=param[1],
         _Vt_=caml_call2(self_14[1 + _Vi_],inh_015,x_016);
        return caml_call2(self_14[1 + _Vj_],_Vt_,x_017)}
      caml_call3(CamlinternalOO[10],_Vh_,_Vk_,_Vm_);
      return function(_Vr_,_Vq_,_Vp_,_Vo_,_Vn_)
       {var _Vs_=caml_call2(CamlinternalOO[24],_Vq_,_Vh_);
        _Vs_[1 + _Vj_] = _Vo_;
        _Vs_[1 + _Vi_] = _Vp_;
        caml_call1(_Vl_,_Vs_);
        return caml_call3(CamlinternalOO[26],_Vq_,_Vs_,_Vh_)}}
    var foldl_t_t$0=caml_call2(CamlinternalOO[19],shared$1,_c$_);
    function foldl_t$0(fa,fb,inh0,subj)
     {var _Vg_=caml_call3(foldl_t_t$0[1],0,fa,fb);
      return caml_call4(GT[2],gcata_t$0,_Vg_,inh0,subj)}
    function _da_(_U3_)
     {var
       _U4_=caml_call2(CamlinternalOO[3],_U3_,cst$69),
       _U5_=caml_call2(CamlinternalOO[3],_U3_,cst$70),
       _U6_=caml_call2(CamlinternalOO[7],_U3_,cst_c_T$11),
       _U7_=caml_call6(CamlinternalOO[18],_U3_,0,shared$1,0,t_t$0,1)[1];
      function _U8_(self_15,inh_018,param)
       {var x_020=param[2],x_019=param[1],x_022=inh_018[2],x_021=inh_018[1];
        function _Vd_(param){return caml_call2(self_15[1 + _U5_],x_022,x_020)}
        function _Ve_(param){return caml_call2(self_15[1 + _U4_],x_021,x_019)}
        var _Vf_=caml_call2(GT[6],1,_Ve_);
        return caml_call2(GT[6],_Vf_,_Vd_)}
      caml_call3(CamlinternalOO[10],_U3_,_U6_,_U8_);
      return function(_Vb_,_Va_,_U$_,_U__,_U9_)
       {var _Vc_=caml_call2(CamlinternalOO[24],_Va_,_U3_);
        _Vc_[1 + _U5_] = _U__;
        _Vc_[1 + _U4_] = _U$_;
        caml_call1(_U7_,_Vc_);
        return caml_call3(CamlinternalOO[26],_Va_,_Vc_,_U3_)}}
    var compare_t_t$0=caml_call2(CamlinternalOO[19],shared$1,_da_);
    function compare_t$0(fa,fb,inh0,subj)
     {var _U2_=caml_call3(compare_t_t$0[1],0,fa,fb);
      return caml_call4(GT[2],gcata_t$0,_U2_,inh0,subj)}
    function _db_(_UP_)
     {var
       _UQ_=caml_call2(CamlinternalOO[3],_UP_,cst$71),
       _UR_=caml_call2(CamlinternalOO[3],_UP_,cst$72),
       _US_=caml_call2(CamlinternalOO[7],_UP_,cst_c_T$12),
       _UT_=caml_call6(CamlinternalOO[18],_UP_,0,shared$1,0,t_t$0,1)[1];
      function _UU_(self_16,inh_023,param)
       {var
         x_025=param[2],
         x_024=param[1],
         x_027=inh_023[2],
         x_026=inh_023[1],
         _U1_=caml_call2(self_16[1 + _UQ_],x_026,x_024);
        return _U1_?caml_call2(self_16[1 + _UR_],x_027,x_025):_U1_}
      caml_call3(CamlinternalOO[10],_UP_,_US_,_UU_);
      return function(_UZ_,_UY_,_UX_,_UW_,_UV_)
       {var _U0_=caml_call2(CamlinternalOO[24],_UY_,_UP_);
        _U0_[1 + _UR_] = _UW_;
        _U0_[1 + _UQ_] = _UX_;
        caml_call1(_UT_,_U0_);
        return caml_call3(CamlinternalOO[26],_UY_,_U0_,_UP_)}}
    var eq_t_t$0=caml_call2(CamlinternalOO[19],shared$1,_db_);
    function eq_t$0(fa,fb,inh0,subj)
     {var _UO_=caml_call3(eq_t_t$0[1],0,fa,fb);
      return caml_call4(GT[2],gcata_t$0,_UO_,inh0,subj)}
    function _dc_(_Um_)
     {var
       _Un_=caml_call2(CamlinternalOO[3],_Um_,cst$73),
       _Uo_=caml_call2(CamlinternalOO[3],_Um_,cst$74),
       _Up_=caml_call2(CamlinternalOO[7],_Um_,cst_c_T$13),
       _Uq_=caml_call6(CamlinternalOO[18],_Um_,0,shared$1,0,t_t$0,1)[1];
      function _Ur_(self_17,param,_Uy_)
       {var
         x_029=_Uy_[2],
         x_028=_Uy_[1],
         _Uz_=caml_call2(self_17[1 + _Uo_],0,x_029),
         _UA_=caml_call2(Stdlib_List[4],_Uz_,0),
         _UB_=caml_call1(HTML[10],_UA_),
         _UC_=caml_call2(HTML[25],0,_UB_),
         _UD_=caml_call2(Stdlib_List[4],_UC_,0),
         _UE_=caml_call2(self_17[1 + _Un_],0,x_028),
         _UF_=caml_call2(Stdlib_List[4],_UE_,0),
         _UG_=caml_call1(HTML[10],_UF_),
         _UH_=caml_call2(HTML[25],0,_UG_),
         _UI_=caml_call2(Stdlib_List[4],_UH_,_UD_),
         _UJ_=caml_call1(HTML[10],_UI_),
         _UK_=caml_call2(HTML[23],0,_UJ_),
         _UL_=caml_call2(Stdlib_List[4],_UK_,0),
         _UM_=caml_call1(HTML[3],cst_tuple),
         _UN_=caml_call2(Stdlib_List[4],_UM_,_UL_);
        return caml_call1(HTML[10],_UN_)}
      caml_call3(CamlinternalOO[10],_Um_,_Up_,_Ur_);
      return function(_Uw_,_Uv_,_Uu_,_Ut_,_Us_)
       {var _Ux_=caml_call2(CamlinternalOO[24],_Uv_,_Um_);
        _Ux_[1 + _Uo_] = _Ut_;
        _Ux_[1 + _Un_] = _Uu_;
        caml_call1(_Uq_,_Ux_);
        return caml_call3(CamlinternalOO[26],_Uv_,_Ux_,_Um_)}}
    var html_t_t=caml_call2(CamlinternalOO[19],shared$1,_dc_);
    function _dd_(fa,fb,inh0,subj)
     {var _Ul_=caml_call3(html_t_t[1],0,fa,fb);
      return caml_call4(GT[2],gcata_t$0,_Ul_,inh0,subj)}
    function _de_(_T9_)
     {var
       _T__=caml_call2(CamlinternalOO[3],_T9_,cst$75),
       _T$_=caml_call2(CamlinternalOO[3],_T9_,cst$76),
       _Ua_=caml_call2(CamlinternalOO[7],_T9_,cst_c_T$14),
       _Ub_=caml_call6(CamlinternalOO[18],_T9_,0,shared$1,0,t_t$0,1)[1];
      function _Uc_(self_18,param,_Uj_)
       {var
         x_031=_Uj_[2],
         x_030=_Uj_[1],
         _Uk_=caml_call2(self_18[1 + _T$_],0,x_031);
        return [0,caml_call2(self_18[1 + _T__],0,x_030),_Uk_]}
      caml_call3(CamlinternalOO[10],_T9_,_Ua_,_Uc_);
      return function(_Uh_,_Ug_,_Uf_,_Ue_,_Ud_)
       {var _Ui_=caml_call2(CamlinternalOO[24],_Ug_,_T9_);
        _Ui_[1 + _T$_] = _Ue_;
        _Ui_[1 + _T__] = _Uf_;
        caml_call1(_Ub_,_Ui_);
        return caml_call3(CamlinternalOO[26],_Ug_,_Ui_,_T9_)}}
    var gmap_t_t$0=caml_call2(CamlinternalOO[19],shared$1,_de_);
    function _df_(fa,fb,inh0,subj)
     {var _T8_=caml_call3(gmap_t_t$0[1],0,fa,fb);
      return caml_call4(GT[2],gcata_t$0,_T8_,inh0,subj)}
    function _dg_(_TT_)
     {var
       _TU_=caml_call2(CamlinternalOO[3],_TT_,cst$77),
       _TV_=caml_call2(CamlinternalOO[3],_TT_,cst$78),
       _TW_=caml_call2(CamlinternalOO[7],_TT_,cst_c_T$15),
       _TX_=caml_call6(CamlinternalOO[18],_TT_,0,shared$1,0,t_t$0,1)[1];
      function _TY_(self_19,param,_T5_)
       {var
         x_033=_T5_[2],
         x_032=_T5_[1],
         _T6_=caml_call2(self_19[1 + _TV_],0,x_033),
         _T7_=caml_call2(self_19[1 + _TU_],0,x_032);
        return caml_call3(Stdlib_Printf[4],_dh_,_T7_,_T6_)}
      caml_call3(CamlinternalOO[10],_TT_,_TW_,_TY_);
      return function(_T3_,_T2_,_T1_,_T0_,_TZ_)
       {var _T4_=caml_call2(CamlinternalOO[24],_T2_,_TT_);
        _T4_[1 + _TV_] = _T0_;
        _T4_[1 + _TU_] = _T1_;
        caml_call1(_TX_,_T4_);
        return caml_call3(CamlinternalOO[26],_T2_,_T4_,_TT_)}}
    var show_t_t$0=caml_call2(CamlinternalOO[19],shared$1,_dg_);
    function _di_(fa,fb,inh0,subj)
     {var _TS_=caml_call3(show_t_t$0[1],0,fa,fb);
      return caml_call4(GT[2],gcata_t$0,_TS_,inh0,subj)}
    function _dj_(eta){return caml_call2(GT[2],gcata_t$0,eta)}
    var
     _dk_=caml_call1(CamlinternalOO[16],_cz_),
     _dl_=caml_call2(CamlinternalOO[8],_dk_,_cD_),
     _dm_=_dl_[1],
     _dn_=_dl_[2],
     _do_=_dl_[3],
     _dp_=_dl_[4],
     _dq_=_dl_[5],
     _dr_=_dl_[6],
     _ds_=_dl_[7],
     _dt_=_dl_[8];
    function _du_(self_20,fa,fb,subj)
     {var _TR_=caml_call1(GT[4],fb);
      return _di_(caml_call1(GT[4],fa),_TR_,0,subj)}
    function _dv_(self_20,fa,fb,subj)
     {var _TQ_=caml_call1(GT[4],fb);
      return _df_(caml_call1(GT[4],fa),_TQ_,0,subj)}
    function _dw_(self_20,fa,fb,subj)
     {var _TP_=caml_call1(GT[4],fb);
      return _dd_(caml_call1(GT[4],fa),_TP_,0,subj)}
    function _dx_(self_20){return eq_t$0}
    function _dy_(self_20){return compare_t$0}
    function _dz_(self_20){return foldl_t$0}
    function _dA_(self_20){return foldr_t$0}
    var
     _dB_=
      [0,
       _dr_,
       function(self_20){return fmt_t$0},
       _dp_,
       _dA_,
       _dq_,
       _dz_,
       _dt_,
       _dy_,
       _ds_,
       _dx_,
       _dn_,
       _dw_,
       _do_,
       _dv_,
       _dm_,
       _du_];
    caml_call2(CamlinternalOO[11],_dk_,_dB_);
    caml_call1(CamlinternalOO[17],_dk_);
    var t$0=[0,gcata_t$0,caml_call2(CamlinternalOO[24],0,_dk_),_dj_];
    function html_t(fa,fb,subj)
     {var _TO_=caml_call1(GT[4],fb);
      return _dd_(caml_call1(GT[4],fa),_TO_,0,subj)}
    function gmap_t$0(fa,fb,subj)
     {var _TN_=caml_call1(GT[4],fb);
      return _df_(caml_call1(GT[4],fa),_TN_,0,subj)}
    function show_t$0(fa,fb,subj)
     {var _TM_=caml_call1(GT[4],fb);
      return _di_(caml_call1(GT[4],fa),_TM_,0,subj)}
    var ground_t$0=[],_dC_=0,_dD_=0;
    caml_update_dummy
     (ground_t$0,
      [0,
       0,
       function(_TJ_)
        {caml_call2(CamlinternalOO[7],_TJ_,cst_c_GROUND$7);
         return function(_TL_,_TK_)
          {return caml_call2(CamlinternalOO[24],_TK_,_TJ_)}},
       _dD_,
       _dC_]);
    function gcata_ground$0(tr,inh,subj)
     {return caml_call3(caml_get_public_method(tr,-610008541,18),tr,inh,subj)}
    function _dE_(_Tx_)
     {var
       _Ty_=caml_call2(CamlinternalOO[3],_Tx_,cst$79),
       _Tz_=caml_call2(CamlinternalOO[3],_Tx_,cst$80),
       _TA_=caml_call2(CamlinternalOO[7],_Tx_,cst_c_GROUND$8),
       _TB_=caml_call6(CamlinternalOO[18],_Tx_,0,_cA_,0,ground_t$0,1)[1];
      function _TC_(self_22,inh_036,param)
       {var x_038=param[2],x_037=param[1];
        return caml_call6
                (Stdlib_Format[129],
                 inh_036,
                 _dF_,
                 self_22[1 + _Ty_],
                 x_037,
                 self_22[1 + _Tz_],
                 x_038)}
      caml_call3(CamlinternalOO[10],_Tx_,_TA_,_TC_);
      return function(_TH_,_TG_,_TF_,_TE_,_TD_)
       {var _TI_=caml_call2(CamlinternalOO[24],_TG_,_Tx_);
        _TI_[1 + _Tz_] = _TE_;
        _TI_[1 + _Ty_] = _TF_;
        caml_call1(_TB_,_TI_);
        return caml_call3(CamlinternalOO[26],_TG_,_TI_,_Tx_)}}
    var fmt_ground_t$0=caml_call2(CamlinternalOO[19],_cA_,_dE_);
    function fmt_ground$0(fa,fb,inh0,subj)
     {var _Tw_=caml_call3(fmt_ground_t$0[1],0,fa,fb);
      return caml_call4(GT[2],gcata_ground$0,_Tw_,inh0,subj)}
    function _dG_(_Tj_)
     {var
       _Tk_=caml_call2(CamlinternalOO[3],_Tj_,cst$81),
       _Tl_=caml_call2(CamlinternalOO[3],_Tj_,cst$82),
       _Tm_=caml_call2(CamlinternalOO[7],_Tj_,cst_c_GROUND$9),
       _Tn_=caml_call6(CamlinternalOO[18],_Tj_,0,_cA_,0,ground_t$0,1)[1];
      function _To_(self_23,inh_039,param)
       {var
         x_041=param[2],
         x_040=param[1],
         _Tv_=caml_call2(self_23[1 + _Tl_],inh_039,x_041);
        return caml_call2(self_23[1 + _Tk_],_Tv_,x_040)}
      caml_call3(CamlinternalOO[10],_Tj_,_Tm_,_To_);
      return function(_Tt_,_Ts_,_Tr_,_Tq_,_Tp_)
       {var _Tu_=caml_call2(CamlinternalOO[24],_Ts_,_Tj_);
        _Tu_[1 + _Tl_] = _Tq_;
        _Tu_[1 + _Tk_] = _Tr_;
        caml_call1(_Tn_,_Tu_);
        return caml_call3(CamlinternalOO[26],_Ts_,_Tu_,_Tj_)}}
    var foldr_ground_t$0=caml_call2(CamlinternalOO[19],_cA_,_dG_);
    function foldr_ground$0(fa,fb,inh0,subj)
     {var _Ti_=caml_call3(foldr_ground_t$0[1],0,fa,fb);
      return caml_call4(GT[2],gcata_ground$0,_Ti_,inh0,subj)}
    function _dH_(_S7_)
     {var
       _S8_=caml_call2(CamlinternalOO[3],_S7_,cst$83),
       _S9_=caml_call2(CamlinternalOO[3],_S7_,cst$84),
       _S__=caml_call2(CamlinternalOO[7],_S7_,cst_c_GROUND$10),
       _S$_=caml_call6(CamlinternalOO[18],_S7_,0,_cA_,0,ground_t$0,1)[1];
      function _Ta_(self_24,inh_042,param)
       {var
         x_044=param[2],
         x_043=param[1],
         _Th_=caml_call2(self_24[1 + _S8_],inh_042,x_043);
        return caml_call2(self_24[1 + _S9_],_Th_,x_044)}
      caml_call3(CamlinternalOO[10],_S7_,_S__,_Ta_);
      return function(_Tf_,_Te_,_Td_,_Tc_,_Tb_)
       {var _Tg_=caml_call2(CamlinternalOO[24],_Te_,_S7_);
        _Tg_[1 + _S9_] = _Tc_;
        _Tg_[1 + _S8_] = _Td_;
        caml_call1(_S$_,_Tg_);
        return caml_call3(CamlinternalOO[26],_Te_,_Tg_,_S7_)}}
    var foldl_ground_t$0=caml_call2(CamlinternalOO[19],_cA_,_dH_);
    function foldl_ground$0(fa,fb,inh0,subj)
     {var _S6_=caml_call3(foldl_ground_t$0[1],0,fa,fb);
      return caml_call4(GT[2],gcata_ground$0,_S6_,inh0,subj)}
    function _dI_(_SR_)
     {var
       _SS_=caml_call2(CamlinternalOO[3],_SR_,cst$85),
       _ST_=caml_call2(CamlinternalOO[3],_SR_,cst$86),
       _SU_=caml_call2(CamlinternalOO[7],_SR_,cst_c_GROUND$11),
       _SV_=caml_call6(CamlinternalOO[18],_SR_,0,_cA_,0,ground_t$0,1)[1];
      function _SW_(self_25,inh_045,param)
       {var x_047=param[2],x_046=param[1],x_049=inh_045[2],x_048=inh_045[1];
        function _S3_(param){return caml_call2(self_25[1 + _ST_],x_049,x_047)}
        function _S4_(param){return caml_call2(self_25[1 + _SS_],x_048,x_046)}
        var _S5_=caml_call2(GT[6],1,_S4_);
        return caml_call2(GT[6],_S5_,_S3_)}
      caml_call3(CamlinternalOO[10],_SR_,_SU_,_SW_);
      return function(_S1_,_S0_,_SZ_,_SY_,_SX_)
       {var _S2_=caml_call2(CamlinternalOO[24],_S0_,_SR_);
        _S2_[1 + _ST_] = _SY_;
        _S2_[1 + _SS_] = _SZ_;
        caml_call1(_SV_,_S2_);
        return caml_call3(CamlinternalOO[26],_S0_,_S2_,_SR_)}}
    var compare_ground_t$0=caml_call2(CamlinternalOO[19],_cA_,_dI_);
    function compare_ground$0(fa,fb,inh0,subj)
     {var _SQ_=caml_call3(compare_ground_t$0[1],0,fa,fb);
      return caml_call4(GT[2],gcata_ground$0,_SQ_,inh0,subj)}
    function _dJ_(_SD_)
     {var
       _SE_=caml_call2(CamlinternalOO[3],_SD_,cst$87),
       _SF_=caml_call2(CamlinternalOO[3],_SD_,cst$88),
       _SG_=caml_call2(CamlinternalOO[7],_SD_,cst_c_GROUND$12),
       _SH_=caml_call6(CamlinternalOO[18],_SD_,0,_cA_,0,ground_t$0,1)[1];
      function _SI_(self_26,inh_050,param)
       {var
         x_052=param[2],
         x_051=param[1],
         x_054=inh_050[2],
         x_053=inh_050[1],
         _SP_=caml_call2(self_26[1 + _SE_],x_053,x_051);
        return _SP_?caml_call2(self_26[1 + _SF_],x_054,x_052):_SP_}
      caml_call3(CamlinternalOO[10],_SD_,_SG_,_SI_);
      return function(_SN_,_SM_,_SL_,_SK_,_SJ_)
       {var _SO_=caml_call2(CamlinternalOO[24],_SM_,_SD_);
        _SO_[1 + _SF_] = _SK_;
        _SO_[1 + _SE_] = _SL_;
        caml_call1(_SH_,_SO_);
        return caml_call3(CamlinternalOO[26],_SM_,_SO_,_SD_)}}
    var eq_ground_t$0=caml_call2(CamlinternalOO[19],_cA_,_dJ_);
    function eq_ground$0(fa,fb,inh0,subj)
     {var _SC_=caml_call3(eq_ground_t$0[1],0,fa,fb);
      return caml_call4(GT[2],gcata_ground$0,_SC_,inh0,subj)}
    function _dK_(_Sa_)
     {var
       _Sb_=caml_call2(CamlinternalOO[3],_Sa_,cst$89),
       _Sc_=caml_call2(CamlinternalOO[3],_Sa_,cst$90),
       _Sd_=caml_call2(CamlinternalOO[7],_Sa_,cst_c_GROUND$13),
       _Se_=caml_call6(CamlinternalOO[18],_Sa_,0,_cA_,0,ground_t$0,1)[1];
      function _Sf_(self_27,param,_Sm_)
       {var
         x_056=_Sm_[2],
         x_055=_Sm_[1],
         _Sn_=caml_call2(self_27[1 + _Sc_],0,x_056),
         _So_=caml_call2(Stdlib_List[4],_Sn_,0),
         _Sp_=caml_call1(HTML[10],_So_),
         _Sq_=caml_call2(HTML[25],0,_Sp_),
         _Sr_=caml_call2(Stdlib_List[4],_Sq_,0),
         _Ss_=caml_call2(self_27[1 + _Sb_],0,x_055),
         _St_=caml_call2(Stdlib_List[4],_Ss_,0),
         _Su_=caml_call1(HTML[10],_St_),
         _Sv_=caml_call2(HTML[25],0,_Su_),
         _Sw_=caml_call2(Stdlib_List[4],_Sv_,_Sr_),
         _Sx_=caml_call1(HTML[10],_Sw_),
         _Sy_=caml_call2(HTML[23],0,_Sx_),
         _Sz_=caml_call2(Stdlib_List[4],_Sy_,0),
         _SA_=caml_call1(HTML[3],cst_tuple$0),
         _SB_=caml_call2(Stdlib_List[4],_SA_,_Sz_);
        return caml_call1(HTML[10],_SB_)}
      caml_call3(CamlinternalOO[10],_Sa_,_Sd_,_Sf_);
      return function(_Sk_,_Sj_,_Si_,_Sh_,_Sg_)
       {var _Sl_=caml_call2(CamlinternalOO[24],_Sj_,_Sa_);
        _Sl_[1 + _Sc_] = _Sh_;
        _Sl_[1 + _Sb_] = _Si_;
        caml_call1(_Se_,_Sl_);
        return caml_call3(CamlinternalOO[26],_Sj_,_Sl_,_Sa_)}}
    var html_ground_t=caml_call2(CamlinternalOO[19],_cA_,_dK_);
    function _dL_(fa,fb,inh0,subj)
     {var _R$_=caml_call3(html_ground_t[1],0,fa,fb);
      return caml_call4(GT[2],gcata_ground$0,_R$_,inh0,subj)}
    function _dM_(_RX_)
     {var
       _RY_=caml_call2(CamlinternalOO[3],_RX_,cst$91),
       _RZ_=caml_call2(CamlinternalOO[3],_RX_,cst$92),
       _R0_=caml_call2(CamlinternalOO[7],_RX_,cst_c_GROUND$14),
       _R1_=caml_call6(CamlinternalOO[18],_RX_,0,_cA_,0,ground_t$0,1)[1];
      function _R2_(self_28,param,_R9_)
       {var
         x_058=_R9_[2],
         x_057=_R9_[1],
         _R__=caml_call2(self_28[1 + _RZ_],0,x_058);
        return [0,caml_call2(self_28[1 + _RY_],0,x_057),_R__]}
      caml_call3(CamlinternalOO[10],_RX_,_R0_,_R2_);
      return function(_R7_,_R6_,_R5_,_R4_,_R3_)
       {var _R8_=caml_call2(CamlinternalOO[24],_R6_,_RX_);
        _R8_[1 + _RZ_] = _R4_;
        _R8_[1 + _RY_] = _R5_;
        caml_call1(_R1_,_R8_);
        return caml_call3(CamlinternalOO[26],_R6_,_R8_,_RX_)}}
    var gmap_ground_t$0=caml_call2(CamlinternalOO[19],_cA_,_dM_);
    function _dN_(fa,fb,inh0,subj)
     {var _RW_=caml_call3(gmap_ground_t$0[1],0,fa,fb);
      return caml_call4(GT[2],gcata_ground$0,_RW_,inh0,subj)}
    function _dO_(_RH_)
     {var
       _RI_=caml_call2(CamlinternalOO[3],_RH_,cst$93),
       _RJ_=caml_call2(CamlinternalOO[3],_RH_,cst$94),
       _RK_=caml_call2(CamlinternalOO[7],_RH_,cst_c_GROUND$15),
       _RL_=caml_call6(CamlinternalOO[18],_RH_,0,_cA_,0,ground_t$0,1)[1];
      function _RM_(self_29,param,_RT_)
       {var
         x_060=_RT_[2],
         x_059=_RT_[1],
         _RU_=caml_call2(self_29[1 + _RJ_],0,x_060),
         _RV_=caml_call2(self_29[1 + _RI_],0,x_059);
        return caml_call3(Stdlib_Printf[4],_dP_,_RV_,_RU_)}
      caml_call3(CamlinternalOO[10],_RH_,_RK_,_RM_);
      return function(_RR_,_RQ_,_RP_,_RO_,_RN_)
       {var _RS_=caml_call2(CamlinternalOO[24],_RQ_,_RH_);
        _RS_[1 + _RJ_] = _RO_;
        _RS_[1 + _RI_] = _RP_;
        caml_call1(_RL_,_RS_);
        return caml_call3(CamlinternalOO[26],_RQ_,_RS_,_RH_)}}
    var show_ground_t$0=caml_call2(CamlinternalOO[19],_cA_,_dO_);
    function _dQ_(fa,fb,inh0,subj)
     {var _RG_=caml_call3(show_ground_t$0[1],0,fa,fb);
      return caml_call4(GT[2],gcata_ground$0,_RG_,inh0,subj)}
    function _dR_(eta){return caml_call2(GT[2],gcata_ground$0,eta)}
    var
     _dS_=caml_call1(CamlinternalOO[16],_cz_),
     _dT_=caml_call2(CamlinternalOO[8],_dS_,_cD_),
     _dU_=_dT_[1],
     _dV_=_dT_[2],
     _dW_=_dT_[3],
     _dX_=_dT_[4],
     _dY_=_dT_[5],
     _dZ_=_dT_[6],
     _d0_=_dT_[7],
     _d1_=_dT_[8];
    function _d2_(self_30,fa,fb,subj)
     {var _RF_=caml_call1(GT[4],fb);
      return _dQ_(caml_call1(GT[4],fa),_RF_,0,subj)}
    function _d3_(self_30,fa,fb,subj)
     {var _RE_=caml_call1(GT[4],fb);
      return _dN_(caml_call1(GT[4],fa),_RE_,0,subj)}
    function _d4_(self_30,fa,fb,subj)
     {var _RD_=caml_call1(GT[4],fb);
      return _dL_(caml_call1(GT[4],fa),_RD_,0,subj)}
    function _d5_(self_30){return eq_ground$0}
    function _d6_(self_30){return compare_ground$0}
    function _d7_(self_30){return foldl_ground$0}
    function _d8_(self_30){return foldr_ground$0}
    var
     _d9_=
      [0,
       _dZ_,
       function(self_30){return fmt_ground$0},
       _dX_,
       _d8_,
       _dY_,
       _d7_,
       _d1_,
       _d6_,
       _d0_,
       _d5_,
       _dV_,
       _d4_,
       _dW_,
       _d3_,
       _dU_,
       _d2_];
    caml_call2(CamlinternalOO[11],_dS_,_d9_);
    caml_call1(CamlinternalOO[17],_dS_);
    var
     ground$0=
      [0,gcata_ground$0,caml_call2(CamlinternalOO[24],0,_dS_),_dR_];
    function html_ground(fa,fb,subj)
     {var _RC_=caml_call1(GT[4],fb);
      return _dL_(caml_call1(GT[4],fa),_RC_,0,subj)}
    function gmap_ground$0(fa,fb,subj)
     {var _RB_=caml_call1(GT[4],fb);
      return _dN_(caml_call1(GT[4],fa),_RB_,0,subj)}
    function show_ground$0(fa,fb,subj)
     {var _RA_=caml_call1(GT[4],fb);
      return _dQ_(caml_call1(GT[4],fa),_RA_,0,subj)}
    var logic_t$2=[],_d__=0,_d$_=0;
    caml_update_dummy
     (logic_t$2,
      [0,
       0,
       function(_Rv_)
        {caml_call2(CamlinternalOO[8],_Rv_,_cC_);
         var _Rw_=caml_call6(CamlinternalOO[18],_Rv_,0,_cC_,0,logic_t$1,1)[1];
         return function(_Ry_,_Rx_)
          {var _Rz_=caml_call2(CamlinternalOO[24],_Rx_,_Rv_);
           caml_call1(_Rw_,_Rz_);
           return caml_call3(CamlinternalOO[26],_Rx_,_Rz_,_Rv_)}},
       _d$_,
       _d__]);
    function _ea_(_Rm_)
     {caml_call2(CamlinternalOO[8],_Rm_,_cC_);
      var
       _Rn_=caml_call6(CamlinternalOO[18],_Rm_,0,_cC_,0,logic_t$2,1)[1],
       _Ro_=caml_call6(CamlinternalOO[18],_Rm_,0,0,_cB_,fmt_logic_t$1,1)[1];
      return function(_Rt_,_Rs_,_Rr_,_Rq_,_Rp_)
       {var _Ru_=caml_call2(CamlinternalOO[24],_Rs_,_Rm_);
        caml_call1(_Rn_,_Ru_);
        caml_call3
         (_Ro_,
          _Ru_,
          function(x_066,param)
           {var x_068=param[2],x_067=param[1];
            return caml_call6
                    (Stdlib_Format[129],x_066,_eb_,_Rr_,x_067,_Rq_,x_068)},
          _Rp_);
        return caml_call3(CamlinternalOO[26],_Rs_,_Ru_,_Rm_)}}
    var fmt_logic_t$2=caml_call2(CamlinternalOO[19],_cB_,_ea_);
    function fmt_logic$2(fa,fb,inh_061,subj_062)
     {function _Rl_(x_063,param)
       {var x_065=param[2],x_064=param[1];
        return caml_call6(Stdlib_Format[129],x_063,_ec_,fa,x_064,fb,x_065)}
      return caml_call4(GT[224],logic,_Rl_,inh_061,subj_062)}
    function _ed_(_Rc_)
     {caml_call2(CamlinternalOO[8],_Rc_,_cC_);
      var
       _Rd_=caml_call6(CamlinternalOO[18],_Rc_,0,_cC_,0,logic_t$2,1)[1],
       _Re_=caml_call6(CamlinternalOO[18],_Rc_,0,0,_cB_,foldr_logic_t$1,1)[1];
      return function(_Rj_,_Ri_,_Rh_,_Rg_,_Rf_)
       {var _Rk_=caml_call2(CamlinternalOO[24],_Ri_,_Rc_);
        caml_call1(_Rd_,_Rk_);
        caml_call3
         (_Re_,
          _Rk_,
          function(x_074,param)
           {var x_076=param[2],x_075=param[1];
            return caml_call2(_Rh_,caml_call2(_Rg_,x_074,x_076),x_075)},
          _Rf_);
        return caml_call3(CamlinternalOO[26],_Ri_,_Rk_,_Rc_)}}
    var foldr_logic_t$2=caml_call2(CamlinternalOO[19],_cB_,_ed_);
    function foldr_logic$2(fa,fb,inh_069,subj_070)
     {function _Rb_(x_071,param)
       {var x_073=param[2],x_072=param[1];
        return caml_call2(fa,caml_call2(fb,x_071,x_073),x_072)}
      return caml_call4(GT[226],logic,_Rb_,inh_069,subj_070)}
    function _ee_(_Q4_)
     {caml_call2(CamlinternalOO[8],_Q4_,_cC_);
      var
       _Q5_=caml_call6(CamlinternalOO[18],_Q4_,0,_cC_,0,logic_t$2,1)[1],
       _Q6_=caml_call6(CamlinternalOO[18],_Q4_,0,0,_cB_,foldl_logic_t$1,1)[1];
      return function(_Q$_,_Q__,_Q9_,_Q8_,_Q7_)
       {var _Ra_=caml_call2(CamlinternalOO[24],_Q__,_Q4_);
        caml_call1(_Q5_,_Ra_);
        caml_call3
         (_Q6_,
          _Ra_,
          function(x_082,param)
           {var x_084=param[2],x_083=param[1];
            return caml_call2(_Q8_,caml_call2(_Q9_,x_082,x_083),x_084)},
          _Q7_);
        return caml_call3(CamlinternalOO[26],_Q__,_Ra_,_Q4_)}}
    var foldl_logic_t$2=caml_call2(CamlinternalOO[19],_cB_,_ee_);
    function foldl_logic$2(fa,fb,inh_077,subj_078)
     {function _Q3_(x_079,param)
       {var x_081=param[2],x_080=param[1];
        return caml_call2(fb,caml_call2(fa,x_079,x_080),x_081)}
      return caml_call4(GT[225],logic,_Q3_,inh_077,subj_078)}
    function _ef_(_QR_)
     {caml_call2(CamlinternalOO[8],_QR_,_cC_);
      var
       _QS_=caml_call6(CamlinternalOO[18],_QR_,0,_cC_,0,logic_t$2,1)[1],
       _QT_=
        caml_call6(CamlinternalOO[18],_QR_,0,0,_cB_,compare_logic_t$1,1)[1];
      return function(_QY_,_QX_,_QW_,_QV_,_QU_)
       {var _QZ_=caml_call2(CamlinternalOO[24],_QX_,_QR_);
        caml_call1(_QS_,_QZ_);
        caml_call3
         (_QT_,
          _QZ_,
          function(x_090,param)
           {var x_092=param[2],x_091=param[1],x_094=x_090[2],x_093=x_090[1];
            function _Q0_(param){return caml_call2(_QV_,x_094,x_092)}
            function _Q1_(param){return caml_call2(_QW_,x_093,x_091)}
            var _Q2_=caml_call2(GT[6],1,_Q1_);
            return caml_call2(GT[6],_Q2_,_Q0_)},
          _QU_);
        return caml_call3(CamlinternalOO[26],_QX_,_QZ_,_QR_)}}
    var compare_logic_t$2=caml_call2(CamlinternalOO[19],_cB_,_ef_);
    function compare_logic$2(fa,fb,inh,subj)
     {function _QN_(x_085,param)
       {var x_087=param[2],x_086=param[1],x_089=x_085[2],x_088=x_085[1];
        function _QO_(param){return caml_call2(fb,x_089,x_087)}
        function _QP_(param){return caml_call2(fa,x_088,x_086)}
        var _QQ_=caml_call2(GT[6],1,_QP_);
        return caml_call2(GT[6],_QQ_,_QO_)}
      return caml_call4(GT[228],logic,_QN_,inh,subj)}
    function _eg_(_QD_)
     {caml_call2(CamlinternalOO[8],_QD_,_cC_);
      var
       _QE_=caml_call6(CamlinternalOO[18],_QD_,0,_cC_,0,logic_t$2,1)[1],
       _QF_=caml_call6(CamlinternalOO[18],_QD_,0,0,_cB_,eq_logic_t$1,1)[1];
      return function(_QK_,_QJ_,_QI_,_QH_,_QG_)
       {var _QL_=caml_call2(CamlinternalOO[24],_QJ_,_QD_);
        caml_call1(_QE_,_QL_);
        caml_call3
         (_QF_,
          _QL_,
          function(x_100,param)
           {var
             x_102=param[2],
             x_101=param[1],
             x_104=x_100[2],
             x_103=x_100[1],
             _QM_=caml_call2(_QI_,x_103,x_101);
            return _QM_?caml_call2(_QH_,x_104,x_102):_QM_},
          _QG_);
        return caml_call3(CamlinternalOO[26],_QJ_,_QL_,_QD_)}}
    var eq_logic_t$2=caml_call2(CamlinternalOO[19],_cB_,_eg_);
    function eq_logic$2(fa,fb,inh,subj)
     {function _QB_(x_095,param)
       {var
         x_097=param[2],
         x_096=param[1],
         x_099=x_095[2],
         x_098=x_095[1],
         _QC_=caml_call2(fa,x_098,x_096);
        return _QC_?caml_call2(fb,x_099,x_097):_QC_}
      return caml_call4(GT[227],logic,_QB_,inh,subj)}
    function _eh_(_Qd_)
     {caml_call2(CamlinternalOO[8],_Qd_,_cC_);
      var
       _Qe_=caml_call6(CamlinternalOO[18],_Qd_,0,_cC_,0,logic_t$2,1)[1],
       _Qf_=caml_call6(CamlinternalOO[18],_Qd_,0,0,_cB_,html_logic_t$0,1)[1];
      return function(_Qk_,_Qj_,_Qi_,_Qh_,_Qg_)
       {var _Ql_=caml_call2(CamlinternalOO[24],_Qj_,_Qd_);
        caml_call1(_Qe_,_Ql_);
        caml_call3
         (_Qf_,
          _Ql_,
          function(x_108,param)
           {var
             x_110=param[2],
             x_109=param[1],
             _Qm_=caml_call2(_Qh_,0,x_110),
             _Qn_=caml_call2(Stdlib_List[4],_Qm_,0),
             _Qo_=caml_call1(HTML[10],_Qn_),
             _Qp_=caml_call2(HTML[25],0,_Qo_),
             _Qq_=caml_call2(Stdlib_List[4],_Qp_,0),
             _Qr_=caml_call2(_Qi_,0,x_109),
             _Qs_=caml_call2(Stdlib_List[4],_Qr_,0),
             _Qt_=caml_call1(HTML[10],_Qs_),
             _Qu_=caml_call2(HTML[25],0,_Qt_),
             _Qv_=caml_call2(Stdlib_List[4],_Qu_,_Qq_),
             _Qw_=caml_call1(HTML[10],_Qv_),
             _Qx_=caml_call2(HTML[23],0,_Qw_),
             _Qy_=caml_call2(Stdlib_List[4],_Qx_,0),
             _Qz_=caml_call1(HTML[3],cst_tuple$1),
             _QA_=caml_call2(Stdlib_List[4],_Qz_,_Qy_);
            return caml_call1(HTML[10],_QA_)},
          _Qg_);
        return caml_call3(CamlinternalOO[26],_Qj_,_Ql_,_Qd_)}}
    var html_logic_t$1=caml_call2(CamlinternalOO[19],_cB_,_eh_);
    function _ei_(fa,fb,param,subj)
     {function _PZ_(param)
       {var
         x_107=param[2],
         x_106=param[1],
         _P0_=caml_call2(fb,0,x_107),
         _P1_=caml_call2(Stdlib_List[4],_P0_,0),
         _P2_=caml_call1(HTML[10],_P1_),
         _P3_=caml_call2(HTML[25],0,_P2_),
         _P4_=caml_call2(Stdlib_List[4],_P3_,0),
         _P5_=caml_call2(fa,0,x_106),
         _P6_=caml_call2(Stdlib_List[4],_P5_,0),
         _P7_=caml_call1(HTML[10],_P6_),
         _P8_=caml_call2(HTML[25],0,_P7_),
         _P9_=caml_call2(Stdlib_List[4],_P8_,_P4_),
         _P__=caml_call1(HTML[10],_P9_),
         _P$_=caml_call2(HTML[23],0,_P__),
         _Qa_=caml_call2(Stdlib_List[4],_P$_,0),
         _Qb_=caml_call1(HTML[3],cst_tuple$2),
         _Qc_=caml_call2(Stdlib_List[4],_Qb_,_Qa_);
        return caml_call1(HTML[10],_Qc_)}
      return caml_call3(GT[222],logic,_PZ_,subj)}
    function _ej_(_PP_)
     {caml_call2(CamlinternalOO[8],_PP_,_cC_);
      var
       _PQ_=caml_call6(CamlinternalOO[18],_PP_,0,_cC_,0,logic_t$2,1)[1],
       _PR_=caml_call6(CamlinternalOO[18],_PP_,0,0,_cB_,gmap_logic_t$1,1)[1];
      return function(_PW_,_PV_,_PU_,_PT_,_PS_)
       {var _PX_=caml_call2(CamlinternalOO[24],_PV_,_PP_);
        caml_call1(_PQ_,_PX_);
        caml_call3
         (_PR_,
          _PX_,
          function(x_114,param)
           {var
             x_116=param[2],
             x_115=param[1],
             _PY_=caml_call2(_PT_,x_114,x_116);
            return [0,caml_call2(_PU_,x_114,x_115),_PY_]},
          _PS_);
        return caml_call3(CamlinternalOO[26],_PV_,_PX_,_PP_)}}
    var gmap_logic_t$2=caml_call2(CamlinternalOO[19],_cB_,_ej_);
    function _ek_(fa,fb,param,subj)
     {var x_111=0;
      function _PN_(param)
       {var x_113=param[2],x_112=param[1],_PO_=caml_call2(fb,x_111,x_113);
        return [0,caml_call2(fa,x_111,x_112),_PO_]}
      return caml_call3(GT[223],logic,_PN_,subj)}
    function _el_(_PC_)
     {caml_call2(CamlinternalOO[8],_PC_,_cC_);
      var
       _PD_=caml_call6(CamlinternalOO[18],_PC_,0,_cC_,0,logic_t$2,1)[1],
       _PE_=caml_call6(CamlinternalOO[18],_PC_,0,0,_cB_,show_logic_t$1,1)[1];
      return function(_PJ_,_PI_,_PH_,_PG_,_PF_)
       {var _PK_=caml_call2(CamlinternalOO[24],_PI_,_PC_);
        caml_call1(_PD_,_PK_);
        caml_call3
         (_PE_,
          _PK_,
          function(x_120,param)
           {var
             x_122=param[2],
             x_121=param[1],
             _PL_=caml_call2(_PG_,0,x_122),
             _PM_=caml_call2(_PH_,0,x_121);
            return caml_call3(Stdlib_Printf[4],_em_,_PM_,_PL_)},
          _PF_);
        return caml_call3(CamlinternalOO[26],_PI_,_PK_,_PC_)}}
    var show_logic_t$2=caml_call2(CamlinternalOO[19],_cB_,_el_);
    function _en_(fa,fb,param,subj)
     {function _Pz_(param)
       {var
         x_119=param[2],
         x_118=param[1],
         _PA_=caml_call2(fb,0,x_119),
         _PB_=caml_call2(fa,0,x_118);
        return caml_call3(Stdlib_Printf[4],_eo_,_PB_,_PA_)}
      return caml_call3(GT[221],logic,_Pz_,subj)}
    function _ep_(eta){return caml_call2(GT[2],gcata_logic,eta)}
    var
     _eq_=caml_call1(CamlinternalOO[16],_cz_),
     _er_=caml_call2(CamlinternalOO[8],_eq_,_cD_),
     _es_=_er_[1],
     _et_=_er_[2],
     _eu_=_er_[3],
     _ev_=_er_[4],
     _ew_=_er_[5],
     _ex_=_er_[6],
     _ey_=_er_[7],
     _ez_=_er_[8];
    function _eA_(self_40,fa,fb,subj)
     {var _Py_=caml_call1(GT[4],fb);
      return _en_(caml_call1(GT[4],fa),_Py_,0,subj)}
    function _eB_(self_40,fa,fb,subj)
     {var _Px_=caml_call1(GT[4],fb);
      return _ek_(caml_call1(GT[4],fa),_Px_,0,subj)}
    function _eC_(self_40,fa,fb,subj)
     {var _Pw_=caml_call1(GT[4],fb);
      return _ei_(caml_call1(GT[4],fa),_Pw_,0,subj)}
    function _eD_(self_40){return eq_logic$2}
    function _eE_(self_40){return compare_logic$2}
    function _eF_(self_40){return foldl_logic$2}
    function _eG_(self_40){return foldr_logic$2}
    var
     _eH_=
      [0,
       _ex_,
       function(self_40){return fmt_logic$2},
       _ev_,
       _eG_,
       _ew_,
       _eF_,
       _ez_,
       _eE_,
       _ey_,
       _eD_,
       _et_,
       _eC_,
       _eu_,
       _eB_,
       _es_,
       _eA_];
    caml_call2(CamlinternalOO[11],_eq_,_eH_);
    caml_call1(CamlinternalOO[17],_eq_);
    var _eI_=caml_call2(CamlinternalOO[24],0,_eq_);
    function html_logic$0(fa,fb,subj)
     {var _Pv_=caml_call1(GT[4],fb);
      return _ei_(caml_call1(GT[4],fa),_Pv_,0,subj)}
    function gmap_logic$1(fa,fb,subj)
     {var _Pu_=caml_call1(GT[4],fb);
      return _ek_(caml_call1(GT[4],fa),_Pu_,0,subj)}
    function show_logic$1(fa,fb,subj)
     {var _Pt_=caml_call1(GT[4],fb);
      return _en_(caml_call1(GT[4],fa),_Pt_,0,subj)}
    var
     _eJ_=caml_call1(CamlinternalOO[16],_cz_),
     _eK_=caml_call2(CamlinternalOO[8],_eJ_,_cD_),
     _eL_=_eK_[1],
     _eM_=_eK_[2],
     _eN_=_eK_[3],
     _eO_=_eK_[4],
     _eP_=_eK_[5],
     _eQ_=_eK_[6],
     _eR_=_eK_[7],
     _eS_=_eK_[8];
    function _eT_(self_41,fa,fb)
     {function _Ps_(l){return caml_call4(GT[221],ground$0,fa,fb,l)}
      return caml_call2(GT[221],logic,_Ps_)}
    function _eU_(self_41)
     {return caml_call1(caml_get_public_method(_eI_,5096781,19),_eI_)}
    function _eV_(self_41)
     {return caml_call1(caml_get_public_method(_eI_,-988375701,20),_eI_)}
    function _eW_(self_41)
     {return caml_call1(caml_get_public_method(_eI_,76555601,21),_eI_)}
    function _eX_(self_41)
     {return caml_call1(caml_get_public_method(_eI_,76555595,22),_eI_)}
    function _eY_(self_41)
     {return caml_call1(caml_get_public_method(_eI_,22636,23),_eI_)}
    function _eZ_(self_41)
     {return caml_call1(caml_get_public_method(_eI_,-999816043,24),_eI_)}
    var
     _e0_=
      [0,
       _eS_,
       function(self_41)
        {return caml_call1(caml_get_public_method(_eI_,57219237,25),_eI_)},
       _eN_,
       _eZ_,
       _eR_,
       _eY_,
       _eP_,
       _eX_,
       _eO_,
       _eW_,
       _eM_,
       _eV_,
       _eQ_,
       _eU_,
       _eL_,
       _eT_];
    caml_call2(CamlinternalOO[11],_eJ_,_e0_);
    caml_call1(CamlinternalOO[17],_eJ_);
    var logic$1=[0,gcata_logic,caml_call2(CamlinternalOO[24],0,_eJ_),_ep_];
    function inj$0(f,g,p){return [1,caml_call4(GT[223],ground$0,f,g,p)]}
    function pair(x,y){return [0,x,y]}
    function reify$5(ra,rb)
     {var symbol_bind=_m_[3];
      function _Pq_(self)
       {var
         _Pr_=
          caml_call2
           (symbol_bind,
            ra,
            function(fa)
             {return caml_call2
                      (symbol_bind,
                       rb,
                       function(fb)
                        {function foo(param)
                          {if(0 === param[0])
                            {var xs=param[2],v=param[1];
                             return [0,v,caml_call2(Stdlib_List[19],foo,xs)]}
                           var x=param[1];
                           return [1,caml_call4(GT[223],t$0,fa,fb,x)]}
                         return caml_call1(_m_[1],foo)})});
        return caml_call2(Reifier[4],Reifier[1],_Pr_)}
      return caml_call1(Reifier[7],_Pq_)}
    function prj_exn$1(ra,rb)
     {var
       symbol_bind=_m_[3],
       _Po_=
        caml_call2
         (symbol_bind,
          ra,
          function(fa)
           {return caml_call2
                    (symbol_bind,
                     rb,
                     function(fb)
                      {function _Pp_(x){return caml_call4(GT[223],t$0,fa,fb,x)}
                       return caml_call1(_m_[1],_Pp_)})});
      return caml_call2(Reifier[4],Reifier[2],_Po_)}
    var
     OCanren_Pair=
      [0,
       t_t$0,
       gcata_t$0,
       fmt_t_t$0,
       fmt_t$0,
       foldr_t_t$0,
       foldr_t$0,
       foldl_t_t$0,
       foldl_t$0,
       compare_t_t$0,
       compare_t$0,
       eq_t_t$0,
       eq_t$0,
       html_t_t,
       html_t,
       gmap_t_t$0,
       gmap_t$0,
       show_t_t$0,
       show_t$0,
       t$0,
       ground_t$0,
       gcata_ground$0,
       fmt_ground_t$0,
       fmt_ground$0,
       foldr_ground_t$0,
       foldr_ground$0,
       foldl_ground_t$0,
       foldl_ground$0,
       compare_ground_t$0,
       compare_ground$0,
       eq_ground_t$0,
       eq_ground$0,
       html_ground_t,
       html_ground,
       gmap_ground_t$0,
       gmap_ground$0,
       show_ground_t$0,
       show_ground$0,
       ground$0,
       logic_t$2,
       gcata_logic,
       fmt_logic_t$2,
       fmt_logic$2,
       foldr_logic_t$2,
       foldr_logic$2,
       foldl_logic_t$2,
       foldl_logic$2,
       compare_logic_t$2,
       compare_logic$2,
       eq_logic_t$2,
       eq_logic$2,
       html_logic_t$1,
       html_logic$0,
       gmap_logic_t$2,
       gmap_logic$1,
       show_logic_t$2,
       show_logic$1,
       logic$1,
       inj$0,
       pair,
       reify$5,
       prj_exn$1];
    caml_register_global(342,OCanren_Pair,"OCanren__Pair");
    var logic_t$3=[],_e6_=0,_e7_=0;
    caml_update_dummy
     (logic_t$3,
      [0,
       0,
       function(_Pj_)
        {caml_call2(CamlinternalOO[8],_Pj_,_e5_);
         var _Pk_=caml_call6(CamlinternalOO[18],_Pj_,0,_e5_,0,logic_t,1)[1];
         return function(_Pm_,_Pl_)
          {var _Pn_=caml_call2(CamlinternalOO[24],_Pl_,_Pj_);
           caml_call1(_Pk_,_Pn_);
           return caml_call3(CamlinternalOO[26],_Pl_,_Pn_,_Pj_)}},
       _e7_,
       _e6_]);
    function _e8_(_Pb_)
     {caml_call2(CamlinternalOO[8],_Pb_,_e5_);
      var
       _Pc_=caml_call6(CamlinternalOO[18],_Pb_,0,_e5_,0,logic_t$3,1)[1],
       _Pd_=caml_call6(CamlinternalOO[18],_Pb_,0,0,_e4_,fmt_logic_t,1)[1];
      return function(_Ph_,_Pg_,_Pf_,_Pe_)
       {var _Pi_=caml_call2(CamlinternalOO[24],_Pg_,_Pb_);
        caml_call1(_Pc_,_Pi_);
        caml_call3(_Pd_,_Pi_,_Pf_,_Pe_);
        return caml_call3(CamlinternalOO[26],_Pg_,_Pi_,_Pb_)}}
    var fmt_logic_t$3=caml_call2(CamlinternalOO[19],_e4_,_e8_);
    function fmt_logic$3(fa,inh_001,subj_002)
     {return caml_call4(GT[224],logic,fa,inh_001,subj_002)}
    function _e9_(_O5_)
     {caml_call2(CamlinternalOO[8],_O5_,_e5_);
      var
       _O6_=caml_call6(CamlinternalOO[18],_O5_,0,_e5_,0,logic_t$3,1)[1],
       _O7_=caml_call6(CamlinternalOO[18],_O5_,0,0,_e4_,foldr_logic_t,1)[1];
      return function(_O$_,_O__,_O9_,_O8_)
       {var _Pa_=caml_call2(CamlinternalOO[24],_O__,_O5_);
        caml_call1(_O6_,_Pa_);
        caml_call3(_O7_,_Pa_,_O9_,_O8_);
        return caml_call3(CamlinternalOO[26],_O__,_Pa_,_O5_)}}
    var foldr_logic_t$3=caml_call2(CamlinternalOO[19],_e4_,_e9_);
    function foldr_logic$3(fa,inh_003,subj_004)
     {return caml_call4(GT[226],logic,fa,inh_003,subj_004)}
    function _e__(_OX_)
     {caml_call2(CamlinternalOO[8],_OX_,_e5_);
      var
       _OY_=caml_call6(CamlinternalOO[18],_OX_,0,_e5_,0,logic_t$3,1)[1],
       _OZ_=caml_call6(CamlinternalOO[18],_OX_,0,0,_e4_,foldl_logic_t,1)[1];
      return function(_O3_,_O2_,_O1_,_O0_)
       {var _O4_=caml_call2(CamlinternalOO[24],_O2_,_OX_);
        caml_call1(_OY_,_O4_);
        caml_call3(_OZ_,_O4_,_O1_,_O0_);
        return caml_call3(CamlinternalOO[26],_O2_,_O4_,_OX_)}}
    var foldl_logic_t$3=caml_call2(CamlinternalOO[19],_e4_,_e__);
    function foldl_logic$3(fa,inh_005,subj_006)
     {return caml_call4(GT[225],logic,fa,inh_005,subj_006)}
    function _e$_(_OP_)
     {caml_call2(CamlinternalOO[8],_OP_,_e5_);
      var
       _OQ_=caml_call6(CamlinternalOO[18],_OP_,0,_e5_,0,logic_t$3,1)[1],
       _OR_=caml_call6(CamlinternalOO[18],_OP_,0,0,_e4_,compare_logic_t,1)[1];
      return function(_OV_,_OU_,_OT_,_OS_)
       {var _OW_=caml_call2(CamlinternalOO[24],_OU_,_OP_);
        caml_call1(_OQ_,_OW_);
        caml_call3(_OR_,_OW_,_OT_,_OS_);
        return caml_call3(CamlinternalOO[26],_OU_,_OW_,_OP_)}}
    var compare_logic_t$3=caml_call2(CamlinternalOO[19],_e4_,_e$_);
    function compare_logic$3(fa,inh,subj)
     {return caml_call4(GT[228],logic,fa,inh,subj)}
    function _fa_(_OH_)
     {caml_call2(CamlinternalOO[8],_OH_,_e5_);
      var
       _OI_=caml_call6(CamlinternalOO[18],_OH_,0,_e5_,0,logic_t$3,1)[1],
       _OJ_=caml_call6(CamlinternalOO[18],_OH_,0,0,_e4_,eq_logic_t,1)[1];
      return function(_ON_,_OM_,_OL_,_OK_)
       {var _OO_=caml_call2(CamlinternalOO[24],_OM_,_OH_);
        caml_call1(_OI_,_OO_);
        caml_call3(_OJ_,_OO_,_OL_,_OK_);
        return caml_call3(CamlinternalOO[26],_OM_,_OO_,_OH_)}}
    var eq_logic_t$3=caml_call2(CamlinternalOO[19],_e4_,_fa_);
    function eq_logic$3(fa,inh,subj)
     {return caml_call4(GT[227],logic,fa,inh,subj)}
    function _fb_(_Oz_)
     {caml_call2(CamlinternalOO[8],_Oz_,_e5_);
      var
       _OA_=caml_call6(CamlinternalOO[18],_Oz_,0,_e5_,0,logic_t$3,1)[1],
       _OB_=caml_call6(CamlinternalOO[18],_Oz_,0,0,_e4_,html_logic_t,1)[1];
      return function(_OF_,_OE_,_OD_,_OC_)
       {var _OG_=caml_call2(CamlinternalOO[24],_OE_,_Oz_);
        caml_call1(_OA_,_OG_);
        caml_call3(_OB_,_OG_,_OD_,_OC_);
        return caml_call3(CamlinternalOO[26],_OE_,_OG_,_Oz_)}}
    var html_logic_t$2=caml_call2(CamlinternalOO[19],_e4_,_fb_);
    function _fc_(_Or_)
     {caml_call2(CamlinternalOO[8],_Or_,_e5_);
      var
       _Os_=caml_call6(CamlinternalOO[18],_Or_,0,_e5_,0,logic_t$3,1)[1],
       _Ot_=caml_call6(CamlinternalOO[18],_Or_,0,0,_e4_,gmap_logic_t,1)[1];
      return function(_Ox_,_Ow_,_Ov_,_Ou_)
       {var _Oy_=caml_call2(CamlinternalOO[24],_Ow_,_Or_);
        caml_call1(_Os_,_Oy_);
        caml_call3(_Ot_,_Oy_,_Ov_,_Ou_);
        return caml_call3(CamlinternalOO[26],_Ow_,_Oy_,_Or_)}}
    var gmap_logic_t$3=caml_call2(CamlinternalOO[19],_e4_,_fc_);
    function _fd_(_Oj_)
     {caml_call2(CamlinternalOO[8],_Oj_,_e5_);
      var
       _Ok_=caml_call6(CamlinternalOO[18],_Oj_,0,_e5_,0,logic_t$3,1)[1],
       _Ol_=caml_call6(CamlinternalOO[18],_Oj_,0,0,_e4_,show_logic_t,1)[1];
      return function(_Op_,_Oo_,_On_,_Om_)
       {var _Oq_=caml_call2(CamlinternalOO[24],_Oo_,_Oj_);
        caml_call1(_Ok_,_Oq_);
        caml_call3(_Ol_,_Oq_,_On_,_Om_);
        return caml_call3(CamlinternalOO[26],_Oo_,_Oq_,_Oj_)}}
    var
     show_logic_t$3=caml_call2(CamlinternalOO[19],_e4_,_fd_),
     _fe_=caml_call1(CamlinternalOO[16],_e2_),
     _ff_=caml_call2(CamlinternalOO[8],_fe_,shared$2),
     _fg_=_ff_[1],
     _fh_=_ff_[2],
     _fi_=_ff_[3],
     _fj_=_ff_[4],
     _fk_=_ff_[5],
     _fl_=_ff_[6],
     _fm_=_ff_[7],
     _fn_=_ff_[8];
    function _fo_(self_10,fa,subj)
     {var fa$0=caml_call1(GT[4],fa),_Oi_=caml_call1(fa$0,0);
      return caml_call3(GT[221],logic,_Oi_,subj)}
    function _fp_(self_10,fa,subj)
     {var fa$0=caml_call1(GT[4],fa),_Oh_=caml_call1(fa$0,0);
      return caml_call3(GT[223],logic,_Oh_,subj)}
    function _fq_(self_10,fa,subj)
     {var fa$0=caml_call1(GT[4],fa),_Og_=caml_call1(fa$0,0);
      return caml_call3(GT[222],logic,_Og_,subj)}
    function _fr_(self_10){return eq_logic$3}
    function _fs_(self_10){return compare_logic$3}
    function _ft_(self_10){return foldl_logic$3}
    function _fu_(self_10){return foldr_logic$3}
    var
     _fv_=
      [0,
       _fl_,
       function(self_10){return fmt_logic$3},
       _fj_,
       _fu_,
       _fk_,
       _ft_,
       _fn_,
       _fs_,
       _fm_,
       _fr_,
       _fh_,
       _fq_,
       _fi_,
       _fp_,
       _fg_,
       _fo_];
    caml_call2(CamlinternalOO[11],_fe_,_fv_);
    caml_call1(CamlinternalOO[17],_fe_);
    caml_call2(CamlinternalOO[24],0,_fe_);
    var ground_t$1=[],_fw_=0,_fx_=0;
    caml_update_dummy
     (ground_t$1,
      [0,
       0,
       function(_Ob_)
        {caml_call2(CamlinternalOO[8],_Ob_,_e3_);
         var _Oc_=caml_call6(CamlinternalOO[18],_Ob_,0,_e3_,0,GT[161],1)[1];
         return function(_Oe_,_Od_)
          {var _Of_=caml_call2(CamlinternalOO[24],_Od_,_Ob_);
           caml_call1(_Oc_,_Of_);
           return caml_call3(CamlinternalOO[26],_Od_,_Of_,_Ob_)}},
       _fx_,
       _fw_]);
    var gcata_ground$1=GT[162];
    function _fy_(_N5_)
     {caml_call2(CamlinternalOO[8],_N5_,_e3_);
      var
       _N6_=caml_call6(CamlinternalOO[18],_N5_,0,_e3_,0,ground_t$1,1)[1],
       _N7_=caml_call6(CamlinternalOO[18],_N5_,0,0,_e1_,GT[165],1)[1];
      return function(_N$_,_N__,_N9_,_N8_)
       {var _Oa_=caml_call2(CamlinternalOO[24],_N__,_N5_);
        caml_call1(_N6_,_Oa_);
        caml_call3(_N7_,_Oa_,_N9_,_N8_);
        return caml_call3(CamlinternalOO[26],_N__,_Oa_,_N5_)}}
    var fmt_ground_t$1=caml_call2(CamlinternalOO[19],_e1_,_fy_);
    function fmt_ground$1(fa,inh_007,subj_008)
     {return caml_call4(GT[224],GT[173],fa,inh_007,subj_008)}
    function _fz_(_NX_)
     {caml_call2(CamlinternalOO[8],_NX_,_e3_);
      var
       _NY_=caml_call6(CamlinternalOO[18],_NX_,0,_e3_,0,ground_t$1,1)[1],
       _NZ_=caml_call6(CamlinternalOO[18],_NX_,0,0,_e1_,GT[170],1)[1];
      return function(_N3_,_N2_,_N1_,_N0_)
       {var _N4_=caml_call2(CamlinternalOO[24],_N2_,_NX_);
        caml_call1(_NY_,_N4_);
        caml_call3(_NZ_,_N4_,_N1_,_N0_);
        return caml_call3(CamlinternalOO[26],_N2_,_N4_,_NX_)}}
    var foldr_ground_t$1=caml_call2(CamlinternalOO[19],_e1_,_fz_);
    function foldr_ground$1(fa,inh_009,subj_010)
     {return caml_call4(GT[226],GT[173],fa,inh_009,subj_010)}
    function _fA_(_NP_)
     {caml_call2(CamlinternalOO[8],_NP_,_e3_);
      var
       _NQ_=caml_call6(CamlinternalOO[18],_NP_,0,_e3_,0,ground_t$1,1)[1],
       _NR_=caml_call6(CamlinternalOO[18],_NP_,0,0,_e1_,GT[169],1)[1];
      return function(_NV_,_NU_,_NT_,_NS_)
       {var _NW_=caml_call2(CamlinternalOO[24],_NU_,_NP_);
        caml_call1(_NQ_,_NW_);
        caml_call3(_NR_,_NW_,_NT_,_NS_);
        return caml_call3(CamlinternalOO[26],_NU_,_NW_,_NP_)}}
    var foldl_ground_t$1=caml_call2(CamlinternalOO[19],_e1_,_fA_);
    function foldl_ground$1(fa,inh_011,subj_012)
     {return caml_call4(GT[225],GT[173],fa,inh_011,subj_012)}
    function _fB_(_NH_)
     {caml_call2(CamlinternalOO[8],_NH_,_e3_);
      var
       _NI_=caml_call6(CamlinternalOO[18],_NH_,0,_e3_,0,ground_t$1,1)[1],
       _NJ_=caml_call6(CamlinternalOO[18],_NH_,0,0,_e1_,GT[172],1)[1];
      return function(_NN_,_NM_,_NL_,_NK_)
       {var _NO_=caml_call2(CamlinternalOO[24],_NM_,_NH_);
        caml_call1(_NI_,_NO_);
        caml_call3(_NJ_,_NO_,_NL_,_NK_);
        return caml_call3(CamlinternalOO[26],_NM_,_NO_,_NH_)}}
    var compare_ground_t$1=caml_call2(CamlinternalOO[19],_e1_,_fB_);
    function compare_ground$1(fa,inh,subj)
     {return caml_call4(GT[228],GT[173],fa,inh,subj)}
    function _fC_(_Nz_)
     {caml_call2(CamlinternalOO[8],_Nz_,_e3_);
      var
       _NA_=caml_call6(CamlinternalOO[18],_Nz_,0,_e3_,0,ground_t$1,1)[1],
       _NB_=caml_call6(CamlinternalOO[18],_Nz_,0,0,_e1_,GT[171],1)[1];
      return function(_NF_,_NE_,_ND_,_NC_)
       {var _NG_=caml_call2(CamlinternalOO[24],_NE_,_Nz_);
        caml_call1(_NA_,_NG_);
        caml_call3(_NB_,_NG_,_ND_,_NC_);
        return caml_call3(CamlinternalOO[26],_NE_,_NG_,_Nz_)}}
    var eq_ground_t$1=caml_call2(CamlinternalOO[19],_e1_,_fC_);
    function eq_ground$1(fa,inh,subj)
     {return caml_call4(GT[227],GT[173],fa,inh,subj)}
    function _fD_(_Nr_)
     {caml_call2(CamlinternalOO[8],_Nr_,_e3_);
      var
       _Ns_=caml_call6(CamlinternalOO[18],_Nr_,0,_e3_,0,ground_t$1,1)[1],
       _Nt_=caml_call6(CamlinternalOO[18],_Nr_,0,0,_e1_,GT[164],1)[1];
      return function(_Nx_,_Nw_,_Nv_,_Nu_)
       {var _Ny_=caml_call2(CamlinternalOO[24],_Nw_,_Nr_);
        caml_call1(_Ns_,_Ny_);
        caml_call3(_Nt_,_Ny_,_Nv_,_Nu_);
        return caml_call3(CamlinternalOO[26],_Nw_,_Ny_,_Nr_)}}
    var html_ground_t$0=caml_call2(CamlinternalOO[19],_e1_,_fD_);
    function _fE_(fa,param,subj)
     {var _Nq_=caml_call1(fa,0);return caml_call3(GT[222],GT[173],_Nq_,subj)}
    function _fF_(_Ni_)
     {caml_call2(CamlinternalOO[8],_Ni_,_e3_);
      var
       _Nj_=caml_call6(CamlinternalOO[18],_Ni_,0,_e3_,0,ground_t$1,1)[1],
       _Nk_=caml_call6(CamlinternalOO[18],_Ni_,0,0,_e1_,GT[166],1)[1];
      return function(_No_,_Nn_,_Nm_,_Nl_)
       {var _Np_=caml_call2(CamlinternalOO[24],_Nn_,_Ni_);
        caml_call1(_Nj_,_Np_);
        caml_call3(_Nk_,_Np_,_Nm_,_Nl_);
        return caml_call3(CamlinternalOO[26],_Nn_,_Np_,_Ni_)}}
    var gmap_ground_t$1=caml_call2(CamlinternalOO[19],_e1_,_fF_);
    function _fG_(fa,param,subj)
     {var _Nh_=caml_call1(fa,0);return caml_call3(GT[223],GT[173],_Nh_,subj)}
    function _fH_(_M$_)
     {caml_call2(CamlinternalOO[8],_M$_,_e3_);
      var
       _Na_=caml_call6(CamlinternalOO[18],_M$_,0,_e3_,0,ground_t$1,1)[1],
       _Nb_=caml_call6(CamlinternalOO[18],_M$_,0,0,_e1_,GT[163],1)[1];
      return function(_Nf_,_Ne_,_Nd_,_Nc_)
       {var _Ng_=caml_call2(CamlinternalOO[24],_Ne_,_M$_);
        caml_call1(_Na_,_Ng_);
        caml_call3(_Nb_,_Ng_,_Nd_,_Nc_);
        return caml_call3(CamlinternalOO[26],_Ne_,_Ng_,_M$_)}}
    var show_ground_t$1=caml_call2(CamlinternalOO[19],_e1_,_fH_);
    function _fI_(fa,param,subj)
     {var _M__=caml_call1(fa,0);return caml_call3(GT[221],GT[173],_M__,subj)}
    function _fJ_(eta){return caml_call2(GT[2],gcata_ground$1,eta)}
    var
     _fK_=caml_call1(CamlinternalOO[16],_e2_),
     _fL_=caml_call2(CamlinternalOO[8],_fK_,shared$2),
     _fM_=_fL_[1],
     _fN_=_fL_[2],
     _fO_=_fL_[3],
     _fP_=_fL_[4],
     _fQ_=_fL_[5],
     _fR_=_fL_[6],
     _fS_=_fL_[7],
     _fT_=_fL_[8];
    function _fU_(self_20,fa,subj){return _fI_(caml_call1(GT[4],fa),0,subj)}
    function _fV_(self_20,fa,subj){return _fG_(caml_call1(GT[4],fa),0,subj)}
    function _fW_(self_20,fa,subj){return _fE_(caml_call1(GT[4],fa),0,subj)}
    function _fX_(self_20){return eq_ground$1}
    function _fY_(self_20){return compare_ground$1}
    function _fZ_(self_20){return foldl_ground$1}
    function _f0_(self_20){return foldr_ground$1}
    var
     _f1_=
      [0,
       _fR_,
       function(self_20){return fmt_ground$1},
       _fP_,
       _f0_,
       _fQ_,
       _fZ_,
       _fT_,
       _fY_,
       _fS_,
       _fX_,
       _fN_,
       _fW_,
       _fO_,
       _fV_,
       _fM_,
       _fU_];
    caml_call2(CamlinternalOO[11],_fK_,_f1_);
    caml_call1(CamlinternalOO[17],_fK_);
    var
     ground$1=
      [0,gcata_ground$1,caml_call2(CamlinternalOO[24],0,_fK_),_fJ_];
    function html_ground$0(fa,subj){return _fE_(caml_call1(GT[4],fa),0,subj)}
    function gmap_ground$1(fa,subj){return _fG_(caml_call1(GT[4],fa),0,subj)}
    function show_ground$1(fa,subj){return _fI_(caml_call1(GT[4],fa),0,subj)}
    var logic_t$4=[],_f2_=0,_f3_=0;
    caml_update_dummy
     (logic_t$4,
      [0,
       0,
       function(_M5_)
        {caml_call2(CamlinternalOO[8],_M5_,_e5_);
         var _M6_=caml_call6(CamlinternalOO[18],_M5_,0,_e5_,0,logic_t$3,1)[1];
         return function(_M8_,_M7_)
          {var _M9_=caml_call2(CamlinternalOO[24],_M7_,_M5_);
           caml_call1(_M6_,_M9_);
           return caml_call3(CamlinternalOO[26],_M7_,_M9_,_M5_)}},
       _f3_,
       _f2_]);
    function _f4_(_MX_)
     {caml_call2(CamlinternalOO[8],_MX_,_e5_);
      var
       _MY_=caml_call6(CamlinternalOO[18],_MX_,0,_e5_,0,logic_t$4,1)[1],
       _MZ_=caml_call6(CamlinternalOO[18],_MX_,0,0,_e4_,fmt_logic_t$3,1)[1];
      return function(_M3_,_M2_,_M1_,_M0_)
       {var _M4_=caml_call2(CamlinternalOO[24],_M2_,_MX_);
        caml_call1(_MY_,_M4_);
        caml_call3
         (_MZ_,
          _M4_,
          function(inh_017,subj_018)
           {return caml_call4(GT[224],GT[173],_M1_,inh_017,subj_018)},
          _M0_);
        return caml_call3(CamlinternalOO[26],_M2_,_M4_,_MX_)}}
    var fmt_logic_t$4=caml_call2(CamlinternalOO[19],_e4_,_f4_);
    function fmt_logic$4(fa,inh_013,subj_014)
     {function _MW_(inh_015,subj_016)
       {return caml_call4(GT[224],GT[173],fa,inh_015,subj_016)}
      return caml_call4(GT[224],logic,_MW_,inh_013,subj_014)}
    function _f5_(_MO_)
     {caml_call2(CamlinternalOO[8],_MO_,_e5_);
      var
       _MP_=caml_call6(CamlinternalOO[18],_MO_,0,_e5_,0,logic_t$4,1)[1],
       _MQ_=caml_call6(CamlinternalOO[18],_MO_,0,0,_e4_,foldr_logic_t$3,1)[1];
      return function(_MU_,_MT_,_MS_,_MR_)
       {var _MV_=caml_call2(CamlinternalOO[24],_MT_,_MO_);
        caml_call1(_MP_,_MV_);
        caml_call3
         (_MQ_,
          _MV_,
          function(inh_023,subj_024)
           {return caml_call4(GT[226],GT[173],_MS_,inh_023,subj_024)},
          _MR_);
        return caml_call3(CamlinternalOO[26],_MT_,_MV_,_MO_)}}
    var foldr_logic_t$4=caml_call2(CamlinternalOO[19],_e4_,_f5_);
    function foldr_logic$4(fa,inh_019,subj_020)
     {function _MN_(inh_021,subj_022)
       {return caml_call4(GT[226],GT[173],fa,inh_021,subj_022)}
      return caml_call4(GT[226],logic,_MN_,inh_019,subj_020)}
    function _f6_(_MF_)
     {caml_call2(CamlinternalOO[8],_MF_,_e5_);
      var
       _MG_=caml_call6(CamlinternalOO[18],_MF_,0,_e5_,0,logic_t$4,1)[1],
       _MH_=caml_call6(CamlinternalOO[18],_MF_,0,0,_e4_,foldl_logic_t$3,1)[1];
      return function(_ML_,_MK_,_MJ_,_MI_)
       {var _MM_=caml_call2(CamlinternalOO[24],_MK_,_MF_);
        caml_call1(_MG_,_MM_);
        caml_call3
         (_MH_,
          _MM_,
          function(inh_029,subj_030)
           {return caml_call4(GT[225],GT[173],_MJ_,inh_029,subj_030)},
          _MI_);
        return caml_call3(CamlinternalOO[26],_MK_,_MM_,_MF_)}}
    var foldl_logic_t$4=caml_call2(CamlinternalOO[19],_e4_,_f6_);
    function foldl_logic$4(fa,inh_025,subj_026)
     {function _ME_(inh_027,subj_028)
       {return caml_call4(GT[225],GT[173],fa,inh_027,subj_028)}
      return caml_call4(GT[225],logic,_ME_,inh_025,subj_026)}
    function _f7_(_Mw_)
     {caml_call2(CamlinternalOO[8],_Mw_,_e5_);
      var
       _Mx_=caml_call6(CamlinternalOO[18],_Mw_,0,_e5_,0,logic_t$4,1)[1],
       _My_=
        caml_call6(CamlinternalOO[18],_Mw_,0,0,_e4_,compare_logic_t$3,1)[1];
      return function(_MC_,_MB_,_MA_,_Mz_)
       {var _MD_=caml_call2(CamlinternalOO[24],_MB_,_Mw_);
        caml_call1(_Mx_,_MD_);
        caml_call3
         (_My_,
          _MD_,
          function(inh,subj){return caml_call4(GT[228],GT[173],_MA_,inh,subj)},
          _Mz_);
        return caml_call3(CamlinternalOO[26],_MB_,_MD_,_Mw_)}}
    var compare_logic_t$4=caml_call2(CamlinternalOO[19],_e4_,_f7_);
    function compare_logic$4(fa,inh,subj)
     {function _Mv_(inh,subj){return caml_call4(GT[228],GT[173],fa,inh,subj)}
      return caml_call4(GT[228],logic,_Mv_,inh,subj)}
    function _f8_(_Mn_)
     {caml_call2(CamlinternalOO[8],_Mn_,_e5_);
      var
       _Mo_=caml_call6(CamlinternalOO[18],_Mn_,0,_e5_,0,logic_t$4,1)[1],
       _Mp_=caml_call6(CamlinternalOO[18],_Mn_,0,0,_e4_,eq_logic_t$3,1)[1];
      return function(_Mt_,_Ms_,_Mr_,_Mq_)
       {var _Mu_=caml_call2(CamlinternalOO[24],_Ms_,_Mn_);
        caml_call1(_Mo_,_Mu_);
        caml_call3
         (_Mp_,
          _Mu_,
          function(inh,subj){return caml_call4(GT[227],GT[173],_Mr_,inh,subj)},
          _Mq_);
        return caml_call3(CamlinternalOO[26],_Ms_,_Mu_,_Mn_)}}
    var eq_logic_t$4=caml_call2(CamlinternalOO[19],_e4_,_f8_);
    function eq_logic$4(fa,inh,subj)
     {function _Mm_(inh,subj){return caml_call4(GT[227],GT[173],fa,inh,subj)}
      return caml_call4(GT[227],logic,_Mm_,inh,subj)}
    function _f9_(_Md_)
     {caml_call2(CamlinternalOO[8],_Md_,_e5_);
      var
       _Me_=caml_call6(CamlinternalOO[18],_Md_,0,_e5_,0,logic_t$4,1)[1],
       _Mf_=caml_call6(CamlinternalOO[18],_Md_,0,0,_e4_,html_logic_t$2,1)[1];
      return function(_Mj_,_Mi_,_Mh_,_Mg_)
       {var _Mk_=caml_call2(CamlinternalOO[24],_Mi_,_Md_);
        caml_call1(_Me_,_Mk_);
        caml_call3
         (_Mf_,
          _Mk_,
          function(param,subj)
           {var _Ml_=caml_call1(_Mh_,0);
            return caml_call3(GT[222],GT[173],_Ml_,subj)},
          _Mg_);
        return caml_call3(CamlinternalOO[26],_Mi_,_Mk_,_Md_)}}
    var html_logic_t$3=caml_call2(CamlinternalOO[19],_e4_,_f9_);
    function _f__(fa,param,subj)
     {function _Mb_(subj)
       {var _Mc_=caml_call1(fa,0);
        return caml_call3(GT[222],GT[173],_Mc_,subj)}
      return caml_call3(GT[222],logic,_Mb_,subj)}
    function _f$_(_L4_)
     {caml_call2(CamlinternalOO[8],_L4_,_e5_);
      var
       _L5_=caml_call6(CamlinternalOO[18],_L4_,0,_e5_,0,logic_t$4,1)[1],
       _L6_=caml_call6(CamlinternalOO[18],_L4_,0,0,_e4_,gmap_logic_t$3,1)[1];
      return function(_L__,_L9_,_L8_,_L7_)
       {var _L$_=caml_call2(CamlinternalOO[24],_L9_,_L4_);
        caml_call1(_L5_,_L$_);
        caml_call3
         (_L6_,
          _L$_,
          function(param,subj)
           {var _Ma_=caml_call1(_L8_,0);
            return caml_call3(GT[223],GT[173],_Ma_,subj)},
          _L7_);
        return caml_call3(CamlinternalOO[26],_L9_,_L$_,_L4_)}}
    var gmap_logic_t$4=caml_call2(CamlinternalOO[19],_e4_,_f$_);
    function _ga_(fa,param,subj)
     {function _L2_(subj)
       {var _L3_=caml_call1(fa,0);
        return caml_call3(GT[223],GT[173],_L3_,subj)}
      return caml_call3(GT[223],logic,_L2_,subj)}
    function _gb_(_LT_)
     {caml_call2(CamlinternalOO[8],_LT_,_e5_);
      var
       _LU_=caml_call6(CamlinternalOO[18],_LT_,0,_e5_,0,logic_t$4,1)[1],
       _LV_=caml_call6(CamlinternalOO[18],_LT_,0,0,_e4_,show_logic_t$3,1)[1];
      return function(_LZ_,_LY_,_LX_,_LW_)
       {var _L0_=caml_call2(CamlinternalOO[24],_LY_,_LT_);
        caml_call1(_LU_,_L0_);
        caml_call3
         (_LV_,
          _L0_,
          function(param,subj)
           {var _L1_=caml_call1(_LX_,0);
            return caml_call3(GT[221],GT[173],_L1_,subj)},
          _LW_);
        return caml_call3(CamlinternalOO[26],_LY_,_L0_,_LT_)}}
    var show_logic_t$4=caml_call2(CamlinternalOO[19],_e4_,_gb_);
    function _gc_(fa,param,subj)
     {function _LR_(subj)
       {var _LS_=caml_call1(fa,0);
        return caml_call3(GT[221],GT[173],_LS_,subj)}
      return caml_call3(GT[221],logic,_LR_,subj)}
    function _gd_(eta){return caml_call2(GT[2],gcata_logic,eta)}
    var
     _ge_=caml_call1(CamlinternalOO[16],_e2_),
     _gf_=caml_call2(CamlinternalOO[8],_ge_,shared$2),
     _gg_=_gf_[1],
     _gh_=_gf_[2],
     _gi_=_gf_[3],
     _gj_=_gf_[4],
     _gk_=_gf_[5],
     _gl_=_gf_[6],
     _gm_=_gf_[7],
     _gn_=_gf_[8];
    function _go_(self_30,fa,subj){return _gc_(caml_call1(GT[4],fa),0,subj)}
    function _gp_(self_30,fa,subj){return _ga_(caml_call1(GT[4],fa),0,subj)}
    function _gq_(self_30,fa,subj){return _f__(caml_call1(GT[4],fa),0,subj)}
    function _gr_(self_30){return eq_logic$4}
    function _gs_(self_30){return compare_logic$4}
    function _gt_(self_30){return foldl_logic$4}
    function _gu_(self_30){return foldr_logic$4}
    var
     _gv_=
      [0,
       _gl_,
       function(self_30){return fmt_logic$4},
       _gj_,
       _gu_,
       _gk_,
       _gt_,
       _gn_,
       _gs_,
       _gm_,
       _gr_,
       _gh_,
       _gq_,
       _gi_,
       _gp_,
       _gg_,
       _go_];
    caml_call2(CamlinternalOO[11],_ge_,_gv_);
    caml_call1(CamlinternalOO[17],_ge_);
    var _gw_=caml_call2(CamlinternalOO[24],0,_ge_);
    function html_logic$1(fa,subj){return _f__(caml_call1(GT[4],fa),0,subj)}
    function gmap_logic$2(fa,subj){return _ga_(caml_call1(GT[4],fa),0,subj)}
    function show_logic$2(fa,subj){return _gc_(caml_call1(GT[4],fa),0,subj)}
    var
     _gx_=caml_call1(CamlinternalOO[16],_e2_),
     _gy_=caml_call2(CamlinternalOO[8],_gx_,shared$2),
     _gz_=_gy_[1],
     _gA_=_gy_[2],
     _gB_=_gy_[3],
     _gC_=_gy_[4],
     _gD_=_gy_[5],
     _gE_=_gy_[6],
     _gF_=_gy_[7],
     _gG_=_gy_[8];
    function _gH_(self_31,fa)
     {function _LQ_(l){return caml_call3(GT[221],GT[173],fa,l)}
      return caml_call2(GT[221],logic,_LQ_)}
    function _gI_(self_31)
     {return caml_call1(caml_get_public_method(_gw_,5096781,26),_gw_)}
    function _gJ_(self_31)
     {return caml_call1(caml_get_public_method(_gw_,-988375701,27),_gw_)}
    function _gK_(self_31)
     {return caml_call1(caml_get_public_method(_gw_,76555601,28),_gw_)}
    function _gL_(self_31)
     {return caml_call1(caml_get_public_method(_gw_,76555595,29),_gw_)}
    function _gM_(self_31)
     {return caml_call1(caml_get_public_method(_gw_,22636,30),_gw_)}
    function _gN_(self_31)
     {return caml_call1(caml_get_public_method(_gw_,-999816043,31),_gw_)}
    var
     _gO_=
      [0,
       _gG_,
       function(self_31)
        {return caml_call1(caml_get_public_method(_gw_,57219237,32),_gw_)},
       _gB_,
       _gN_,
       _gF_,
       _gM_,
       _gD_,
       _gL_,
       _gC_,
       _gK_,
       _gA_,
       _gJ_,
       _gE_,
       _gI_,
       _gz_,
       _gH_];
    caml_call2(CamlinternalOO[11],_gx_,_gO_);
    caml_call1(CamlinternalOO[17],_gx_);
    var
     logic$2=[0,gcata_logic,caml_call2(CamlinternalOO[24],0,_gx_),_gd_],
     t_t$1=[],
     _gP_=0,
     _gQ_=0;
    caml_update_dummy
     (t_t$1,
      [0,
       0,
       function(_LL_)
        {caml_call2(CamlinternalOO[8],_LL_,_e3_);
         var
          _LM_=
           caml_call6(CamlinternalOO[18],_LL_,0,_e3_,0,ground_t$1,1)[1];
         return function(_LO_,_LN_)
          {var _LP_=caml_call2(CamlinternalOO[24],_LN_,_LL_);
           caml_call1(_LM_,_LP_);
           return caml_call3(CamlinternalOO[26],_LN_,_LP_,_LL_)}},
       _gQ_,
       _gP_]);
    function _gR_(_LD_)
     {caml_call2(CamlinternalOO[8],_LD_,_e3_);
      var
       _LE_=caml_call6(CamlinternalOO[18],_LD_,0,_e3_,0,t_t$1,1)[1],
       _LF_=caml_call6(CamlinternalOO[18],_LD_,0,0,_e1_,fmt_ground_t$1,1)[1];
      return function(_LJ_,_LI_,_LH_,_LG_)
       {var _LK_=caml_call2(CamlinternalOO[24],_LI_,_LD_);
        caml_call1(_LE_,_LK_);
        caml_call3(_LF_,_LK_,_LH_,_LG_);
        return caml_call3(CamlinternalOO[26],_LI_,_LK_,_LD_)}}
    var fmt_t_t$1=caml_call2(CamlinternalOO[19],_e1_,_gR_);
    function fmt_t$1(fa,inh_031,subj_032)
     {return caml_call4(GT[224],ground$1,fa,inh_031,subj_032)}
    function _gS_(_Lv_)
     {caml_call2(CamlinternalOO[8],_Lv_,_e3_);
      var
       _Lw_=caml_call6(CamlinternalOO[18],_Lv_,0,_e3_,0,t_t$1,1)[1],
       _Lx_=caml_call6(CamlinternalOO[18],_Lv_,0,0,_e1_,foldr_ground_t$1,1)[1];
      return function(_LB_,_LA_,_Lz_,_Ly_)
       {var _LC_=caml_call2(CamlinternalOO[24],_LA_,_Lv_);
        caml_call1(_Lw_,_LC_);
        caml_call3(_Lx_,_LC_,_Lz_,_Ly_);
        return caml_call3(CamlinternalOO[26],_LA_,_LC_,_Lv_)}}
    var foldr_t_t$1=caml_call2(CamlinternalOO[19],_e1_,_gS_);
    function foldr_t$1(fa,inh_033,subj_034)
     {return caml_call4(GT[226],ground$1,fa,inh_033,subj_034)}
    function _gT_(_Ln_)
     {caml_call2(CamlinternalOO[8],_Ln_,_e3_);
      var
       _Lo_=caml_call6(CamlinternalOO[18],_Ln_,0,_e3_,0,t_t$1,1)[1],
       _Lp_=caml_call6(CamlinternalOO[18],_Ln_,0,0,_e1_,foldl_ground_t$1,1)[1];
      return function(_Lt_,_Ls_,_Lr_,_Lq_)
       {var _Lu_=caml_call2(CamlinternalOO[24],_Ls_,_Ln_);
        caml_call1(_Lo_,_Lu_);
        caml_call3(_Lp_,_Lu_,_Lr_,_Lq_);
        return caml_call3(CamlinternalOO[26],_Ls_,_Lu_,_Ln_)}}
    var foldl_t_t$1=caml_call2(CamlinternalOO[19],_e1_,_gT_);
    function foldl_t$1(fa,inh_035,subj_036)
     {return caml_call4(GT[225],ground$1,fa,inh_035,subj_036)}
    function _gU_(_Lf_)
     {caml_call2(CamlinternalOO[8],_Lf_,_e3_);
      var
       _Lg_=caml_call6(CamlinternalOO[18],_Lf_,0,_e3_,0,t_t$1,1)[1],
       _Lh_=
        caml_call6(CamlinternalOO[18],_Lf_,0,0,_e1_,compare_ground_t$1,1)[1];
      return function(_Ll_,_Lk_,_Lj_,_Li_)
       {var _Lm_=caml_call2(CamlinternalOO[24],_Lk_,_Lf_);
        caml_call1(_Lg_,_Lm_);
        caml_call3(_Lh_,_Lm_,_Lj_,_Li_);
        return caml_call3(CamlinternalOO[26],_Lk_,_Lm_,_Lf_)}}
    var compare_t_t$1=caml_call2(CamlinternalOO[19],_e1_,_gU_);
    function compare_t$1(fa,inh,subj)
     {return caml_call4(GT[228],ground$1,fa,inh,subj)}
    function _gV_(_K9_)
     {caml_call2(CamlinternalOO[8],_K9_,_e3_);
      var
       _K__=caml_call6(CamlinternalOO[18],_K9_,0,_e3_,0,t_t$1,1)[1],
       _K$_=caml_call6(CamlinternalOO[18],_K9_,0,0,_e1_,eq_ground_t$1,1)[1];
      return function(_Ld_,_Lc_,_Lb_,_La_)
       {var _Le_=caml_call2(CamlinternalOO[24],_Lc_,_K9_);
        caml_call1(_K__,_Le_);
        caml_call3(_K$_,_Le_,_Lb_,_La_);
        return caml_call3(CamlinternalOO[26],_Lc_,_Le_,_K9_)}}
    var eq_t_t$1=caml_call2(CamlinternalOO[19],_e1_,_gV_);
    function eq_t$1(fa,inh,subj)
     {return caml_call4(GT[227],ground$1,fa,inh,subj)}
    function _gW_(_K1_)
     {caml_call2(CamlinternalOO[8],_K1_,_e3_);
      var
       _K2_=caml_call6(CamlinternalOO[18],_K1_,0,_e3_,0,t_t$1,1)[1],
       _K3_=caml_call6(CamlinternalOO[18],_K1_,0,0,_e1_,html_ground_t$0,1)[1];
      return function(_K7_,_K6_,_K5_,_K4_)
       {var _K8_=caml_call2(CamlinternalOO[24],_K6_,_K1_);
        caml_call1(_K2_,_K8_);
        caml_call3(_K3_,_K8_,_K5_,_K4_);
        return caml_call3(CamlinternalOO[26],_K6_,_K8_,_K1_)}}
    var html_t_t$0=caml_call2(CamlinternalOO[19],_e1_,_gW_);
    function _gX_(fa,param,subj)
     {var _K0_=caml_call1(fa,0);return caml_call3(GT[222],ground$1,_K0_,subj)}
    function _gY_(_KS_)
     {caml_call2(CamlinternalOO[8],_KS_,_e3_);
      var
       _KT_=caml_call6(CamlinternalOO[18],_KS_,0,_e3_,0,t_t$1,1)[1],
       _KU_=caml_call6(CamlinternalOO[18],_KS_,0,0,_e1_,gmap_ground_t$1,1)[1];
      return function(_KY_,_KX_,_KW_,_KV_)
       {var _KZ_=caml_call2(CamlinternalOO[24],_KX_,_KS_);
        caml_call1(_KT_,_KZ_);
        caml_call3(_KU_,_KZ_,_KW_,_KV_);
        return caml_call3(CamlinternalOO[26],_KX_,_KZ_,_KS_)}}
    var gmap_t_t$1=caml_call2(CamlinternalOO[19],_e1_,_gY_);
    function _gZ_(fa,param,subj)
     {var _KR_=caml_call1(fa,0);return caml_call3(GT[223],ground$1,_KR_,subj)}
    function _g0_(_KJ_)
     {caml_call2(CamlinternalOO[8],_KJ_,_e3_);
      var
       _KK_=caml_call6(CamlinternalOO[18],_KJ_,0,_e3_,0,t_t$1,1)[1],
       _KL_=caml_call6(CamlinternalOO[18],_KJ_,0,0,_e1_,show_ground_t$1,1)[1];
      return function(_KP_,_KO_,_KN_,_KM_)
       {var _KQ_=caml_call2(CamlinternalOO[24],_KO_,_KJ_);
        caml_call1(_KK_,_KQ_);
        caml_call3(_KL_,_KQ_,_KN_,_KM_);
        return caml_call3(CamlinternalOO[26],_KO_,_KQ_,_KJ_)}}
    var show_t_t$1=caml_call2(CamlinternalOO[19],_e1_,_g0_);
    function _g1_(fa,param,subj)
     {var _KI_=caml_call1(fa,0);return caml_call3(GT[221],ground$1,_KI_,subj)}
    var
     _g2_=caml_call1(CamlinternalOO[16],_e2_),
     _g3_=caml_call2(CamlinternalOO[8],_g2_,shared$2),
     _g4_=_g3_[1],
     _g5_=_g3_[2],
     _g6_=_g3_[3],
     _g7_=_g3_[4],
     _g8_=_g3_[5],
     _g9_=_g3_[6],
     _g__=_g3_[7],
     _g$_=_g3_[8];
    function _ha_(self_41,fa,subj){return _g1_(caml_call1(GT[4],fa),0,subj)}
    function _hb_(self_41,fa,subj){return _gZ_(caml_call1(GT[4],fa),0,subj)}
    function _hc_(self_41,fa,subj){return _gX_(caml_call1(GT[4],fa),0,subj)}
    function _hd_(self_41){return eq_t$1}
    function _he_(self_41){return compare_t$1}
    function _hf_(self_41){return foldl_t$1}
    function _hg_(self_41){return foldr_t$1}
    var
     _hh_=
      [0,
       _g9_,
       function(self_41){return fmt_t$1},
       _g7_,
       _hg_,
       _g8_,
       _hf_,
       _g$_,
       _he_,
       _g__,
       _hd_,
       _g5_,
       _hc_,
       _g6_,
       _hb_,
       _g4_,
       _ha_];
    caml_call2(CamlinternalOO[11],_g2_,_hh_);
    caml_call1(CamlinternalOO[17],_g2_);
    caml_call2(CamlinternalOO[24],0,_g2_);
    function html_t$0(fa,subj){return _gX_(caml_call1(GT[4],fa),0,subj)}
    function gmap_t$1(fa,subj){return _gZ_(caml_call1(GT[4],fa),0,subj)}
    function show_t$1(fa,subj){return _g1_(caml_call1(GT[4],fa),0,subj)}
    function inj$1(f,x)
     {return [1,caml_call2(caml_call1(GT[223],GT[173]),f,x)]}
    function reify$6(ra)
     {function _KF_(r)
       {function _KG_(fa)
         {function foo(param)
           {if(0 === param[0])
             {var xs=param[2],v=param[1];
              return [0,v,caml_call2(Stdlib_List[19],foo,xs)]}
            var t=param[1];
            return [1,caml_call3(GT[223],ground$1,fa,t)]}
          var _KH_=caml_call1(_m_[1],foo);
          return caml_call2(Reifier[4],Reifier[1],_KH_)}
        return caml_call2(_m_[8][1],ra,_KG_)}
      return caml_call2(_m_[8][1],Reifier[1],_KF_)}
    function prj_exn$2(ra)
     {function _KB_(r)
       {function _KC_(fa)
         {function _KD_(x)
           {var _KE_=caml_call1(r,x);
            return caml_call3(GT[223],ground$1,fa,_KE_)}
          return caml_call1(_m_[1],_KD_)}
        return caml_call2(_m_[8][1],ra,_KC_)}
      return caml_call2(_m_[8][1],Reifier[2],_KB_)}
    function some(x){return [0,x]}
    function none(param){return 0}
    function option(param){if(! param)return 0;var x=param[1];return [0,x]}
    var
     OCanren_Option=
      [0,
       t_t$1,
       gcata_ground$1,
       fmt_t_t$1,
       fmt_t$1,
       foldr_t_t$1,
       foldr_t$1,
       foldl_t_t$1,
       foldl_t$1,
       compare_t_t$1,
       compare_t$1,
       eq_t_t$1,
       eq_t$1,
       html_t_t$0,
       html_t$0,
       gmap_t_t$1,
       gmap_t$1,
       show_t_t$1,
       show_t$1,
       ground$1,
       ground_t$1,
       gcata_ground$1,
       fmt_ground_t$1,
       fmt_ground$1,
       foldr_ground_t$1,
       foldr_ground$1,
       foldl_ground_t$1,
       foldl_ground$1,
       compare_ground_t$1,
       compare_ground$1,
       eq_ground_t$1,
       eq_ground$1,
       html_ground_t$0,
       html_ground$0,
       gmap_ground_t$1,
       gmap_ground$1,
       show_ground_t$1,
       show_ground$1,
       ground$1,
       logic_t$4,
       gcata_logic,
       fmt_logic_t$4,
       fmt_logic$4,
       foldr_logic_t$4,
       foldr_logic$4,
       foldl_logic_t$4,
       foldl_logic$4,
       compare_logic_t$4,
       compare_logic$4,
       eq_logic_t$4,
       eq_logic$4,
       html_logic_t$3,
       html_logic$1,
       gmap_logic_t$4,
       gmap_logic$2,
       show_logic_t$4,
       show_logic$2,
       logic$2,
       inj$1,
       option,
       reify$6,
       prj_exn$2,
       some,
       none];
    caml_register_global(343,OCanren_Option,"OCanren__Option");
    var ground_t$2=[],_hm_=0,_hn_=0;
    caml_update_dummy
     (ground_t$2,
      [0,
       0,
       function(_Kw_)
        {caml_call2(CamlinternalOO[7],_Kw_,cst_t_bool);
         var
          _Kx_=
           caml_call6(CamlinternalOO[18],_Kw_,0,shared$3,0,GT[19],1)[1];
         return function(_Kz_,_Ky_)
          {var _KA_=caml_call2(CamlinternalOO[24],_Ky_,_Kw_);
           caml_call1(_Kx_,_KA_);
           return caml_call3(CamlinternalOO[26],_Ky_,_KA_,_Kw_)}},
       _hn_,
       _hm_]);
    var _ho_=GT[31];
    function _hp_(_Kp_)
     {caml_call2(CamlinternalOO[7],_Kp_,cst_t_bool$0);
      var
       _Kq_=caml_call6(CamlinternalOO[18],_Kp_,0,shared$3,0,ground_t$2,1)[1],
       _Kr_=caml_call6(CamlinternalOO[18],_Kp_,0,0,shared$3,GT[23],1)[1];
      return function(_Ku_,_Kt_,_Ks_)
       {var _Kv_=caml_call2(CamlinternalOO[24],_Kt_,_Kp_);
        caml_call1(_Kq_,_Kv_);
        caml_call2(_Kr_,_Kv_,_Ks_);
        return caml_call3(CamlinternalOO[26],_Kt_,_Kv_,_Kp_)}}
    var fmt_ground_t$2=caml_call2(CamlinternalOO[19],shared$3,_hp_);
    function fmt_ground$2(inh_001,subj_002)
     {return caml_call3(GT[224],GT[32],inh_001,subj_002)}
    function _hq_(_Ki_)
     {caml_call2(CamlinternalOO[7],_Ki_,cst_t_bool$1);
      var
       _Kj_=caml_call6(CamlinternalOO[18],_Ki_,0,shared$3,0,ground_t$2,1)[1],
       _Kk_=caml_call6(CamlinternalOO[18],_Ki_,0,0,shared$3,GT[28],1)[1];
      return function(_Kn_,_Km_,_Kl_)
       {var _Ko_=caml_call2(CamlinternalOO[24],_Km_,_Ki_);
        caml_call1(_Kj_,_Ko_);
        caml_call2(_Kk_,_Ko_,_Kl_);
        return caml_call3(CamlinternalOO[26],_Km_,_Ko_,_Ki_)}}
    var gmap_ground_t$2=caml_call2(CamlinternalOO[19],shared$3,_hq_);
    function _hr_(param,subj){return caml_call2(GT[223],GT[32],subj)}
    function _hs_(_Kb_)
     {caml_call2(CamlinternalOO[7],_Kb_,cst_t_bool$2);
      var
       _Kc_=caml_call6(CamlinternalOO[18],_Kb_,0,shared$3,0,ground_t$2,1)[1],
       _Kd_=caml_call6(CamlinternalOO[18],_Kb_,0,0,shared$3,GT[24],1)[1];
      return function(_Kg_,_Kf_,_Ke_)
       {var _Kh_=caml_call2(CamlinternalOO[24],_Kf_,_Kb_);
        caml_call1(_Kc_,_Kh_);
        caml_call2(_Kd_,_Kh_,_Ke_);
        return caml_call3(CamlinternalOO[26],_Kf_,_Kh_,_Kb_)}}
    var foldl_ground_t$2=caml_call2(CamlinternalOO[19],shared$3,_hs_);
    function foldl_ground$2(inh_003,subj_004)
     {return caml_call3(GT[225],GT[32],inh_003,subj_004)}
    function _ht_(_J6_)
     {caml_call2(CamlinternalOO[7],_J6_,cst_t_bool$3);
      var
       _J7_=caml_call6(CamlinternalOO[18],_J6_,0,shared$3,0,ground_t$2,1)[1],
       _J8_=caml_call6(CamlinternalOO[18],_J6_,0,0,shared$3,GT[25],1)[1];
      return function(_J$_,_J__,_J9_)
       {var _Ka_=caml_call2(CamlinternalOO[24],_J__,_J6_);
        caml_call1(_J7_,_Ka_);
        caml_call2(_J8_,_Ka_,_J9_);
        return caml_call3(CamlinternalOO[26],_J__,_Ka_,_J6_)}}
    var foldr_ground_t$2=caml_call2(CamlinternalOO[19],shared$3,_ht_);
    function foldr_ground$2(inh_005,subj_006)
     {return caml_call3(GT[226],GT[32],inh_005,subj_006)}
    function _hu_(_JZ_)
     {caml_call2(CamlinternalOO[7],_JZ_,cst_t_bool$4);
      var
       _J0_=caml_call6(CamlinternalOO[18],_JZ_,0,shared$3,0,ground_t$2,1)[1],
       _J1_=caml_call6(CamlinternalOO[18],_JZ_,0,0,shared$3,GT[27],1)[1];
      return function(_J4_,_J3_,_J2_)
       {var _J5_=caml_call2(CamlinternalOO[24],_J3_,_JZ_);
        caml_call1(_J0_,_J5_);
        caml_call2(_J1_,_J5_,_J2_);
        return caml_call3(CamlinternalOO[26],_J3_,_J5_,_JZ_)}}
    var compare_ground_t$2=caml_call2(CamlinternalOO[19],shared$3,_hu_);
    function compare_ground$2(inh,subj)
     {return caml_call3(GT[228],GT[32],inh,subj)}
    function _hv_(_JS_)
     {caml_call2(CamlinternalOO[7],_JS_,cst_t_bool$5);
      var
       _JT_=caml_call6(CamlinternalOO[18],_JS_,0,shared$3,0,ground_t$2,1)[1],
       _JU_=caml_call6(CamlinternalOO[18],_JS_,0,0,shared$3,GT[26],1)[1];
      return function(_JX_,_JW_,_JV_)
       {var _JY_=caml_call2(CamlinternalOO[24],_JW_,_JS_);
        caml_call1(_JT_,_JY_);
        caml_call2(_JU_,_JY_,_JV_);
        return caml_call3(CamlinternalOO[26],_JW_,_JY_,_JS_)}}
    var eq_ground_t$2=caml_call2(CamlinternalOO[19],shared$3,_hv_);
    function eq_ground$2(inh,subj){return caml_call3(GT[227],GT[32],inh,subj)}
    function _hw_(_JL_)
     {caml_call2(CamlinternalOO[7],_JL_,cst_t_bool$6);
      var
       _JM_=caml_call6(CamlinternalOO[18],_JL_,0,shared$3,0,ground_t$2,1)[1],
       _JN_=caml_call6(CamlinternalOO[18],_JL_,0,0,shared$3,GT[20],1)[1];
      return function(_JQ_,_JP_,_JO_)
       {var _JR_=caml_call2(CamlinternalOO[24],_JP_,_JL_);
        caml_call1(_JM_,_JR_);
        caml_call2(_JN_,_JR_,_JO_);
        return caml_call3(CamlinternalOO[26],_JP_,_JR_,_JL_)}}
    var html_ground_t$1=caml_call2(CamlinternalOO[19],shared$3,_hw_);
    function _hx_(param,subj){return caml_call2(GT[222],GT[32],subj)}
    function _hy_(_JE_)
     {caml_call2(CamlinternalOO[7],_JE_,cst_t_bool$7);
      var
       _JF_=caml_call6(CamlinternalOO[18],_JE_,0,shared$3,0,ground_t$2,1)[1],
       _JG_=caml_call6(CamlinternalOO[18],_JE_,0,0,shared$3,GT[21],1)[1];
      return function(_JJ_,_JI_,_JH_)
       {var _JK_=caml_call2(CamlinternalOO[24],_JI_,_JE_);
        caml_call1(_JF_,_JK_);
        caml_call2(_JG_,_JK_,_JH_);
        return caml_call3(CamlinternalOO[26],_JI_,_JK_,_JE_)}}
    var show_ground_t$2=caml_call2(CamlinternalOO[19],shared$3,_hy_);
    function _hz_(param,subj){return caml_call2(GT[221],GT[32],subj)}
    function _hA_(eta){return caml_call2(GT[2],_ho_,eta)}
    var
     _hB_=caml_call1(CamlinternalOO[16],_hi_),
     _hC_=caml_call2(CamlinternalOO[8],_hB_,_hk_),
     _hD_=_hC_[1],
     _hE_=_hC_[2],
     _hF_=_hC_[3],
     _hG_=_hC_[4],
     _hH_=_hC_[5],
     _hI_=_hC_[6],
     _hJ_=_hC_[7],
     _hK_=_hC_[8];
    function _hL_(self_10,subj){return _hz_(0,subj)}
    function _hM_(self_10,subj){return _hx_(0,subj)}
    function _hN_(self_10){return eq_ground$2}
    function _hO_(self_10){return compare_ground$2}
    function _hP_(self_10){return foldr_ground$2}
    function _hQ_(self_10){return foldl_ground$2}
    function _hR_(self_10,subj){return _hr_(0,subj)}
    var
     _hS_=
      [0,
       _hI_,
       function(self_10){return fmt_ground$2},
       _hF_,
       _hR_,
       _hH_,
       _hQ_,
       _hG_,
       _hP_,
       _hK_,
       _hO_,
       _hJ_,
       _hN_,
       _hE_,
       _hM_,
       _hD_,
       _hL_];
    caml_call2(CamlinternalOO[11],_hB_,_hS_);
    caml_call1(CamlinternalOO[17],_hB_);
    var ground$2=[0,_ho_,caml_call2(CamlinternalOO[24],0,_hB_),_hA_];
    function gmap_ground$2(subj){return _hr_(0,subj)}
    function html_ground$1(subj){return _hx_(0,subj)}
    function show_ground$2(subj){return _hz_(0,subj)}
    var t_t$2=[],_hT_=0,_hU_=0;
    caml_update_dummy
     (t_t$2,
      [0,
       0,
       function(_Jz_)
        {caml_call2(CamlinternalOO[7],_Jz_,cst_t_bool$8);
         var
          _JA_=
           caml_call6(CamlinternalOO[18],_Jz_,0,shared$3,0,GT[19],1)[1];
         return function(_JC_,_JB_)
          {var _JD_=caml_call2(CamlinternalOO[24],_JB_,_Jz_);
           caml_call1(_JA_,_JD_);
           return caml_call3(CamlinternalOO[26],_JB_,_JD_,_Jz_)}},
       _hU_,
       _hT_]);
    var _hV_=GT[31];
    function _hW_(_Js_)
     {caml_call2(CamlinternalOO[7],_Js_,cst_t_bool$9);
      var
       _Jt_=caml_call6(CamlinternalOO[18],_Js_,0,shared$3,0,t_t$2,1)[1],
       _Ju_=caml_call6(CamlinternalOO[18],_Js_,0,0,shared$3,GT[23],1)[1];
      return function(_Jx_,_Jw_,_Jv_)
       {var _Jy_=caml_call2(CamlinternalOO[24],_Jw_,_Js_);
        caml_call1(_Jt_,_Jy_);
        caml_call2(_Ju_,_Jy_,_Jv_);
        return caml_call3(CamlinternalOO[26],_Jw_,_Jy_,_Js_)}}
    var fmt_t_t$2=caml_call2(CamlinternalOO[19],shared$3,_hW_);
    function fmt_t$2(inh_007,subj_008)
     {return caml_call3(GT[224],GT[32],inh_007,subj_008)}
    function _hX_(_Jl_)
     {caml_call2(CamlinternalOO[7],_Jl_,cst_t_bool$10);
      var
       _Jm_=caml_call6(CamlinternalOO[18],_Jl_,0,shared$3,0,t_t$2,1)[1],
       _Jn_=caml_call6(CamlinternalOO[18],_Jl_,0,0,shared$3,GT[28],1)[1];
      return function(_Jq_,_Jp_,_Jo_)
       {var _Jr_=caml_call2(CamlinternalOO[24],_Jp_,_Jl_);
        caml_call1(_Jm_,_Jr_);
        caml_call2(_Jn_,_Jr_,_Jo_);
        return caml_call3(CamlinternalOO[26],_Jp_,_Jr_,_Jl_)}}
    var gmap_t_t$2=caml_call2(CamlinternalOO[19],shared$3,_hX_);
    function _hY_(param,subj){return caml_call2(GT[223],GT[32],subj)}
    function _hZ_(_Je_)
     {caml_call2(CamlinternalOO[7],_Je_,cst_t_bool$11);
      var
       _Jf_=caml_call6(CamlinternalOO[18],_Je_,0,shared$3,0,t_t$2,1)[1],
       _Jg_=caml_call6(CamlinternalOO[18],_Je_,0,0,shared$3,GT[24],1)[1];
      return function(_Jj_,_Ji_,_Jh_)
       {var _Jk_=caml_call2(CamlinternalOO[24],_Ji_,_Je_);
        caml_call1(_Jf_,_Jk_);
        caml_call2(_Jg_,_Jk_,_Jh_);
        return caml_call3(CamlinternalOO[26],_Ji_,_Jk_,_Je_)}}
    var foldl_t_t$2=caml_call2(CamlinternalOO[19],shared$3,_hZ_);
    function foldl_t$2(inh_009,subj_010)
     {return caml_call3(GT[225],GT[32],inh_009,subj_010)}
    function _h0_(_I9_)
     {caml_call2(CamlinternalOO[7],_I9_,cst_t_bool$12);
      var
       _I__=caml_call6(CamlinternalOO[18],_I9_,0,shared$3,0,t_t$2,1)[1],
       _I$_=caml_call6(CamlinternalOO[18],_I9_,0,0,shared$3,GT[25],1)[1];
      return function(_Jc_,_Jb_,_Ja_)
       {var _Jd_=caml_call2(CamlinternalOO[24],_Jb_,_I9_);
        caml_call1(_I__,_Jd_);
        caml_call2(_I$_,_Jd_,_Ja_);
        return caml_call3(CamlinternalOO[26],_Jb_,_Jd_,_I9_)}}
    var foldr_t_t$2=caml_call2(CamlinternalOO[19],shared$3,_h0_);
    function foldr_t$2(inh_011,subj_012)
     {return caml_call3(GT[226],GT[32],inh_011,subj_012)}
    function _h1_(_I2_)
     {caml_call2(CamlinternalOO[7],_I2_,cst_t_bool$13);
      var
       _I3_=caml_call6(CamlinternalOO[18],_I2_,0,shared$3,0,t_t$2,1)[1],
       _I4_=caml_call6(CamlinternalOO[18],_I2_,0,0,shared$3,GT[27],1)[1];
      return function(_I7_,_I6_,_I5_)
       {var _I8_=caml_call2(CamlinternalOO[24],_I6_,_I2_);
        caml_call1(_I3_,_I8_);
        caml_call2(_I4_,_I8_,_I5_);
        return caml_call3(CamlinternalOO[26],_I6_,_I8_,_I2_)}}
    var compare_t_t$2=caml_call2(CamlinternalOO[19],shared$3,_h1_);
    function compare_t$2(inh,subj){return caml_call3(GT[228],GT[32],inh,subj)}
    function _h2_(_IV_)
     {caml_call2(CamlinternalOO[7],_IV_,cst_t_bool$14);
      var
       _IW_=caml_call6(CamlinternalOO[18],_IV_,0,shared$3,0,t_t$2,1)[1],
       _IX_=caml_call6(CamlinternalOO[18],_IV_,0,0,shared$3,GT[26],1)[1];
      return function(_I0_,_IZ_,_IY_)
       {var _I1_=caml_call2(CamlinternalOO[24],_IZ_,_IV_);
        caml_call1(_IW_,_I1_);
        caml_call2(_IX_,_I1_,_IY_);
        return caml_call3(CamlinternalOO[26],_IZ_,_I1_,_IV_)}}
    var eq_t_t$2=caml_call2(CamlinternalOO[19],shared$3,_h2_);
    function eq_t$2(inh,subj){return caml_call3(GT[227],GT[32],inh,subj)}
    function _h3_(_IO_)
     {caml_call2(CamlinternalOO[7],_IO_,cst_t_bool$15);
      var
       _IP_=caml_call6(CamlinternalOO[18],_IO_,0,shared$3,0,t_t$2,1)[1],
       _IQ_=caml_call6(CamlinternalOO[18],_IO_,0,0,shared$3,GT[20],1)[1];
      return function(_IT_,_IS_,_IR_)
       {var _IU_=caml_call2(CamlinternalOO[24],_IS_,_IO_);
        caml_call1(_IP_,_IU_);
        caml_call2(_IQ_,_IU_,_IR_);
        return caml_call3(CamlinternalOO[26],_IS_,_IU_,_IO_)}}
    var html_t_t$1=caml_call2(CamlinternalOO[19],shared$3,_h3_);
    function _h4_(param,subj){return caml_call2(GT[222],GT[32],subj)}
    function _h5_(_IH_)
     {caml_call2(CamlinternalOO[7],_IH_,cst_t_bool$16);
      var
       _II_=caml_call6(CamlinternalOO[18],_IH_,0,shared$3,0,t_t$2,1)[1],
       _IJ_=caml_call6(CamlinternalOO[18],_IH_,0,0,shared$3,GT[21],1)[1];
      return function(_IM_,_IL_,_IK_)
       {var _IN_=caml_call2(CamlinternalOO[24],_IL_,_IH_);
        caml_call1(_II_,_IN_);
        caml_call2(_IJ_,_IN_,_IK_);
        return caml_call3(CamlinternalOO[26],_IL_,_IN_,_IH_)}}
    var show_t_t$2=caml_call2(CamlinternalOO[19],shared$3,_h5_);
    function _h6_(param,subj){return caml_call2(GT[221],GT[32],subj)}
    function _h7_(eta){return caml_call2(GT[2],_hV_,eta)}
    var
     _h8_=caml_call1(CamlinternalOO[16],_hi_),
     _h9_=caml_call2(CamlinternalOO[8],_h8_,_hk_),
     _h__=_h9_[1],
     _h$_=_h9_[2],
     _ia_=_h9_[3],
     _ib_=_h9_[4],
     _ic_=_h9_[5],
     _id_=_h9_[6],
     _ie_=_h9_[7],
     _if_=_h9_[8];
    function _ig_(self_20,subj){return _h6_(0,subj)}
    function _ih_(self_20,subj){return _h4_(0,subj)}
    function _ii_(self_20){return eq_t$2}
    function _ij_(self_20){return compare_t$2}
    function _ik_(self_20){return foldr_t$2}
    function _il_(self_20){return foldl_t$2}
    function _im_(self_20,subj){return _hY_(0,subj)}
    var
     _in_=
      [0,
       _id_,
       function(self_20){return fmt_t$2},
       _ia_,
       _im_,
       _ic_,
       _il_,
       _ib_,
       _ik_,
       _if_,
       _ij_,
       _ie_,
       _ii_,
       _h$_,
       _ih_,
       _h__,
       _ig_];
    caml_call2(CamlinternalOO[11],_h8_,_in_);
    caml_call1(CamlinternalOO[17],_h8_);
    var t$1=[0,_hV_,caml_call2(CamlinternalOO[24],0,_h8_),_h7_];
    function gmap_t$2(subj){return _hY_(0,subj)}
    function html_t$1(subj){return _h4_(0,subj)}
    function show_t$2(subj){return _h6_(0,subj)}
    var logic_t$5=[],_io_=0,_ip_=0;
    caml_update_dummy
     (logic_t$5,
      [0,
       0,
       function(_IC_)
        {caml_call2(CamlinternalOO[8],_IC_,_hl_);
         var _ID_=caml_call6(CamlinternalOO[18],_IC_,0,_hl_,0,logic_t,1)[1];
         return function(_IF_,_IE_)
          {var _IG_=caml_call2(CamlinternalOO[24],_IE_,_IC_);
           caml_call1(_ID_,_IG_);
           return caml_call3(CamlinternalOO[26],_IE_,_IG_,_IC_)}},
       _ip_,
       _io_]);
    function _iq_(_Iv_)
     {caml_call2(CamlinternalOO[8],_Iv_,_hl_);
      var
       _Iw_=caml_call6(CamlinternalOO[18],_Iv_,0,_hl_,0,logic_t$5,1)[1],
       _Ix_=caml_call6(CamlinternalOO[18],_Iv_,0,0,_hj_,fmt_logic_t,1)[1];
      return function(_IA_,_Iz_,_Iy_)
       {var _IB_=caml_call2(CamlinternalOO[24],_Iz_,_Iv_);
        caml_call1(_Iw_,_IB_);
        caml_call3
         (_Ix_,
          _IB_,
          function(inh_017,subj_018)
           {return caml_call3(GT[224],GT[32],inh_017,subj_018)},
          _Iy_);
        return caml_call3(CamlinternalOO[26],_Iz_,_IB_,_Iv_)}}
    var fmt_logic_t$5=caml_call2(CamlinternalOO[19],_hj_,_iq_);
    function fmt_logic$5(inh_013,subj_014)
     {function _Iu_(inh_015,subj_016)
       {return caml_call3(GT[224],GT[32],inh_015,subj_016)}
      return caml_call4(GT[224],logic,_Iu_,inh_013,subj_014)}
    function _ir_(_In_)
     {caml_call2(CamlinternalOO[8],_In_,_hl_);
      var
       _Io_=caml_call6(CamlinternalOO[18],_In_,0,_hl_,0,logic_t$5,1)[1],
       _Ip_=caml_call6(CamlinternalOO[18],_In_,0,0,_hj_,gmap_logic_t,1)[1];
      return function(_Is_,_Ir_,_Iq_)
       {var _It_=caml_call2(CamlinternalOO[24],_Ir_,_In_);
        caml_call1(_Io_,_It_);
        caml_call3
         (_Ip_,
          _It_,
          function(param,subj){return caml_call2(GT[223],GT[32],subj)},
          _Iq_);
        return caml_call3(CamlinternalOO[26],_Ir_,_It_,_In_)}}
    var gmap_logic_t$5=caml_call2(CamlinternalOO[19],_hj_,_ir_);
    function _is_(param,subj)
     {function _Im_(subj){return caml_call2(GT[223],GT[32],subj)}
      return caml_call3(GT[223],logic,_Im_,subj)}
    function _it_(_If_)
     {caml_call2(CamlinternalOO[8],_If_,_hl_);
      var
       _Ig_=caml_call6(CamlinternalOO[18],_If_,0,_hl_,0,logic_t$5,1)[1],
       _Ih_=caml_call6(CamlinternalOO[18],_If_,0,0,_hj_,foldl_logic_t,1)[1];
      return function(_Ik_,_Ij_,_Ii_)
       {var _Il_=caml_call2(CamlinternalOO[24],_Ij_,_If_);
        caml_call1(_Ig_,_Il_);
        caml_call3
         (_Ih_,
          _Il_,
          function(inh_023,subj_024)
           {return caml_call3(GT[225],GT[32],inh_023,subj_024)},
          _Ii_);
        return caml_call3(CamlinternalOO[26],_Ij_,_Il_,_If_)}}
    var foldl_logic_t$5=caml_call2(CamlinternalOO[19],_hj_,_it_);
    function foldl_logic$5(inh_019,subj_020)
     {function _Ie_(inh_021,subj_022)
       {return caml_call3(GT[225],GT[32],inh_021,subj_022)}
      return caml_call4(GT[225],logic,_Ie_,inh_019,subj_020)}
    function _iu_(_H9_)
     {caml_call2(CamlinternalOO[8],_H9_,_hl_);
      var
       _H__=caml_call6(CamlinternalOO[18],_H9_,0,_hl_,0,logic_t$5,1)[1],
       _H$_=caml_call6(CamlinternalOO[18],_H9_,0,0,_hj_,foldr_logic_t,1)[1];
      return function(_Ic_,_Ib_,_Ia_)
       {var _Id_=caml_call2(CamlinternalOO[24],_Ib_,_H9_);
        caml_call1(_H__,_Id_);
        caml_call3
         (_H$_,
          _Id_,
          function(inh_029,subj_030)
           {return caml_call3(GT[226],GT[32],inh_029,subj_030)},
          _Ia_);
        return caml_call3(CamlinternalOO[26],_Ib_,_Id_,_H9_)}}
    var foldr_logic_t$5=caml_call2(CamlinternalOO[19],_hj_,_iu_);
    function foldr_logic$5(inh_025,subj_026)
     {function _H8_(inh_027,subj_028)
       {return caml_call3(GT[226],GT[32],inh_027,subj_028)}
      return caml_call4(GT[226],logic,_H8_,inh_025,subj_026)}
    function _iv_(_H1_)
     {caml_call2(CamlinternalOO[8],_H1_,_hl_);
      var
       _H2_=caml_call6(CamlinternalOO[18],_H1_,0,_hl_,0,logic_t$5,1)[1],
       _H3_=caml_call6(CamlinternalOO[18],_H1_,0,0,_hj_,compare_logic_t,1)[1];
      return function(_H6_,_H5_,_H4_)
       {var _H7_=caml_call2(CamlinternalOO[24],_H5_,_H1_);
        caml_call1(_H2_,_H7_);
        caml_call3
         (_H3_,
          _H7_,
          function(inh,subj){return caml_call3(GT[228],GT[32],inh,subj)},
          _H4_);
        return caml_call3(CamlinternalOO[26],_H5_,_H7_,_H1_)}}
    var compare_logic_t$5=caml_call2(CamlinternalOO[19],_hj_,_iv_);
    function compare_logic$5(inh,subj)
     {function _H0_(inh,subj){return caml_call3(GT[228],GT[32],inh,subj)}
      return caml_call4(GT[228],logic,_H0_,inh,subj)}
    function _iw_(_HT_)
     {caml_call2(CamlinternalOO[8],_HT_,_hl_);
      var
       _HU_=caml_call6(CamlinternalOO[18],_HT_,0,_hl_,0,logic_t$5,1)[1],
       _HV_=caml_call6(CamlinternalOO[18],_HT_,0,0,_hj_,eq_logic_t,1)[1];
      return function(_HY_,_HX_,_HW_)
       {var _HZ_=caml_call2(CamlinternalOO[24],_HX_,_HT_);
        caml_call1(_HU_,_HZ_);
        caml_call3
         (_HV_,
          _HZ_,
          function(inh,subj){return caml_call3(GT[227],GT[32],inh,subj)},
          _HW_);
        return caml_call3(CamlinternalOO[26],_HX_,_HZ_,_HT_)}}
    var eq_logic_t$5=caml_call2(CamlinternalOO[19],_hj_,_iw_);
    function eq_logic$5(inh,subj)
     {function _HS_(inh,subj){return caml_call3(GT[227],GT[32],inh,subj)}
      return caml_call4(GT[227],logic,_HS_,inh,subj)}
    function _ix_(_HL_)
     {caml_call2(CamlinternalOO[8],_HL_,_hl_);
      var
       _HM_=caml_call6(CamlinternalOO[18],_HL_,0,_hl_,0,logic_t$5,1)[1],
       _HN_=caml_call6(CamlinternalOO[18],_HL_,0,0,_hj_,html_logic_t,1)[1];
      return function(_HQ_,_HP_,_HO_)
       {var _HR_=caml_call2(CamlinternalOO[24],_HP_,_HL_);
        caml_call1(_HM_,_HR_);
        caml_call3
         (_HN_,
          _HR_,
          function(param,subj){return caml_call2(GT[222],GT[32],subj)},
          _HO_);
        return caml_call3(CamlinternalOO[26],_HP_,_HR_,_HL_)}}
    var html_logic_t$4=caml_call2(CamlinternalOO[19],_hj_,_ix_);
    function _iy_(param,subj)
     {function _HK_(subj){return caml_call2(GT[222],GT[32],subj)}
      return caml_call3(GT[222],logic,_HK_,subj)}
    function _iz_(_HD_)
     {caml_call2(CamlinternalOO[8],_HD_,_hl_);
      var
       _HE_=caml_call6(CamlinternalOO[18],_HD_,0,_hl_,0,logic_t$5,1)[1],
       _HF_=caml_call6(CamlinternalOO[18],_HD_,0,0,_hj_,show_logic_t,1)[1];
      return function(_HI_,_HH_,_HG_)
       {var _HJ_=caml_call2(CamlinternalOO[24],_HH_,_HD_);
        caml_call1(_HE_,_HJ_);
        caml_call3
         (_HF_,
          _HJ_,
          function(param,subj){return caml_call2(GT[221],GT[32],subj)},
          _HG_);
        return caml_call3(CamlinternalOO[26],_HH_,_HJ_,_HD_)}}
    var show_logic_t$5=caml_call2(CamlinternalOO[19],_hj_,_iz_);
    function _iA_(param,subj)
     {function _HC_(subj){return caml_call2(GT[221],GT[32],subj)}
      return caml_call3(GT[221],logic,_HC_,subj)}
    function _iB_(eta){return caml_call2(GT[2],gcata_logic,eta)}
    var
     _iC_=caml_call1(CamlinternalOO[16],_hi_),
     _iD_=caml_call2(CamlinternalOO[8],_iC_,_hk_),
     _iE_=_iD_[1],
     _iF_=_iD_[2],
     _iG_=_iD_[3],
     _iH_=_iD_[4],
     _iI_=_iD_[5],
     _iJ_=_iD_[6],
     _iK_=_iD_[7],
     _iL_=_iD_[8];
    function _iM_(self_30,subj){return _iA_(0,subj)}
    function _iN_(self_30,subj){return _iy_(0,subj)}
    function _iO_(self_30){return eq_logic$5}
    function _iP_(self_30){return compare_logic$5}
    function _iQ_(self_30){return foldr_logic$5}
    function _iR_(self_30){return foldl_logic$5}
    function _iS_(self_30,subj){return _is_(0,subj)}
    var
     _iT_=
      [0,
       _iJ_,
       function(self_30){return fmt_logic$5},
       _iG_,
       _iS_,
       _iI_,
       _iR_,
       _iH_,
       _iQ_,
       _iL_,
       _iP_,
       _iK_,
       _iO_,
       _iF_,
       _iN_,
       _iE_,
       _iM_];
    caml_call2(CamlinternalOO[11],_iC_,_iT_);
    caml_call1(CamlinternalOO[17],_iC_);
    var _iU_=caml_call2(CamlinternalOO[24],0,_iC_);
    function gmap_logic$3(subj){return _is_(0,subj)}
    function html_logic$2(subj){return _iy_(0,subj)}
    function show_logic$3(subj){return _iA_(0,subj)}
    var
     _iV_=caml_call1(CamlinternalOO[16],_hi_),
     _iW_=caml_call2(CamlinternalOO[8],_iV_,_hk_),
     _iX_=_iW_[1],
     _iY_=_iW_[2],
     _iZ_=_iW_[3],
     _i0_=_iW_[4],
     _i1_=_iW_[5],
     _i2_=_iW_[6],
     _i3_=_iW_[7],
     _i4_=_iW_[8];
    function _i5_(self_31)
     {var _HB_=caml_call1(GT[221],GT[32]);
      return caml_call2(GT[221],logic,_HB_)}
    function _i6_(self_31)
     {return caml_call1(caml_get_public_method(_iU_,5096781,33),_iU_)}
    function _i7_(self_31)
     {return caml_call1(caml_get_public_method(_iU_,-988375701,34),_iU_)}
    function _i8_(self_31)
     {return caml_call1(caml_get_public_method(_iU_,76555601,35),_iU_)}
    function _i9_(self_31)
     {return caml_call1(caml_get_public_method(_iU_,76555595,36),_iU_)}
    function _i__(self_31)
     {return caml_call1(caml_get_public_method(_iU_,22636,37),_iU_)}
    function _i$_(self_31)
     {return caml_call1(caml_get_public_method(_iU_,-999816043,38),_iU_)}
    var
     _ja_=
      [0,
       _i4_,
       function(self_31)
        {return caml_call1(caml_get_public_method(_iU_,57219237,39),_iU_)},
       _iZ_,
       _i$_,
       _i3_,
       _i__,
       _i1_,
       _i9_,
       _i0_,
       _i8_,
       _iY_,
       _i7_,
       _i2_,
       _i6_,
       _iX_,
       _i5_];
    caml_call2(CamlinternalOO[11],_iV_,_ja_);
    caml_call1(CamlinternalOO[17],_iV_);
    var
     logic$3=[0,gcata_logic,caml_call2(CamlinternalOO[24],0,_iV_),_iB_],
     falso=0,
     truo=1;
    function symbol$6(a,b,c)
     {var _GX_=0;
      function _GY_(_HA_){return unify$1(c,falso,_HA_)}
      function _GZ_(_Hz_){return unify$1(b,truo,_Hz_)}
      function _G0_(_Hy_){return unify$1(a,truo,_Hy_)}
      function _G1_(_Hx_){return symbol$3(_G0_,_GZ_,_Hx_)}
      var _G2_=[0,function(_Hw_){return symbol$3(_G1_,_GY_,_Hw_)},_GX_];
      function _G3_(_Hv_){return unify$1(c,truo,_Hv_)}
      function _G4_(_Hu_){return unify$1(b,falso,_Hu_)}
      function _G5_(_Ht_){return unify$1(a,truo,_Ht_)}
      function _G6_(_Hs_){return symbol$3(_G5_,_G4_,_Hs_)}
      var _G7_=[0,function(_Hr_){return symbol$3(_G6_,_G3_,_Hr_)},_G2_];
      function _G8_(_Hq_){return unify$1(c,truo,_Hq_)}
      function _G9_(_Hp_){return unify$1(b,truo,_Hp_)}
      function _G__(_Ho_){return unify$1(a,falso,_Ho_)}
      function _G$_(_Hn_){return symbol$3(_G__,_G9_,_Hn_)}
      var _Ha_=[0,function(_Hm_){return symbol$3(_G$_,_G8_,_Hm_)},_G7_];
      function _Hb_(_Hl_){return unify$1(c,truo,_Hl_)}
      function _Hc_(_Hk_){return unify$1(b,falso,_Hk_)}
      function _Hd_(_Hj_){return unify$1(a,falso,_Hj_)}
      function _He_(_Hi_){return symbol$3(_Hd_,_Hc_,_Hi_)}
      var _Hf_=[0,function(_Hh_){return symbol$3(_He_,_Hb_,_Hh_)},_Ha_];
      return function(_Hg_){return conde(_Hf_,_Hg_)}}
    function noto(a,na){return symbol$6(a,a,na)}
    function oro(a,b,c)
     {function _GQ_(aa,bb)
       {var
         _GR_=symbol$6(aa,bb,c),
         _GS_=symbol$6(b,b,bb),
         _GT_=symbol$6(a,a,aa);
        function _GU_(_GW_){return symbol$3(_GT_,_GS_,_GW_)}
        return function(_GV_){return symbol$3(_GU_,_GR_,_GV_)}}
      return caml_call1(Fresh[4],_GQ_)}
    function ando(a,b,c)
     {function _GM_(ab)
       {var _GN_=symbol$6(ab,ab,c),_GO_=symbol$6(a,b,ab);
        return function(_GP_){return symbol$3(_GO_,_GN_,_GP_)}}
      return caml_call1(Fresh[3],_GM_)}
    function symbol$7(a){return noto(a,truo)}
    function symbol$8(a,b){return ando(a,b,truo)}
    function symbol$9(a,b){return oro(a,b,truo)}
    var
     OCanren_Bool=
      [0,
       t_t$2,
       _hV_,
       fmt_t_t$2,
       fmt_t$2,
       gmap_t_t$2,
       gmap_t$2,
       foldl_t_t$2,
       foldl_t$2,
       foldr_t_t$2,
       foldr_t$2,
       compare_t_t$2,
       compare_t$2,
       eq_t_t$2,
       eq_t$2,
       html_t_t$1,
       html_t$1,
       show_t_t$2,
       show_t$2,
       t$1,
       ground_t$2,
       _ho_,
       fmt_ground_t$2,
       fmt_ground$2,
       gmap_ground_t$2,
       gmap_ground$2,
       foldl_ground_t$2,
       foldl_ground$2,
       foldr_ground_t$2,
       foldr_ground$2,
       compare_ground_t$2,
       compare_ground$2,
       eq_ground_t$2,
       eq_ground$2,
       html_ground_t$1,
       html_ground$1,
       show_ground_t$2,
       show_ground$2,
       ground$2,
       logic_t$5,
       gcata_logic,
       fmt_logic_t$5,
       fmt_logic$5,
       gmap_logic_t$5,
       gmap_logic$3,
       foldl_logic_t$5,
       foldl_logic$5,
       foldr_logic_t$5,
       foldr_logic$5,
       compare_logic_t$5,
       compare_logic$5,
       eq_logic_t$5,
       eq_logic$5,
       html_logic_t$4,
       html_logic$2,
       show_logic_t$5,
       show_logic$3,
       logic$3,
       to_logic,
       reify$2,
       prj_exn,
       falso,
       truo,
       symbol$6,
       noto,
       symbol$7,
       oro,
       symbol$9,
       ando,
       symbol$8];
    caml_register_global(344,OCanren_Bool,"OCanren__Bool");
    var t_t$3=[],_jg_=0,_jh_=0;
    caml_update_dummy
     (t_t$3,
      [0,
       0,
       function(_GJ_)
        {caml_call2(CamlinternalOO[8],_GJ_,shared$4);
         return function(_GL_,_GK_)
          {return caml_call2(CamlinternalOO[24],_GK_,_GJ_)}},
       _jh_,
       _jg_]);
    function gcata_ground$2(tr,inh,subj)
     {if(! subj)
       return caml_call3(caml_get_public_method(tr,4944435,41),tr,inh,subj);
      var x_001=subj[1];
      return caml_call4
              (caml_get_public_method(tr,4944439,40),tr,inh,subj,x_001)}
    function _ji_(_Gw_)
     {var
       _Gx_=caml_call2(CamlinternalOO[3],_Gw_,cst$95),
       _Gy_=caml_call2(CamlinternalOO[8],_Gw_,shared$4),
       _Gz_=_Gy_[1],
       _GA_=_Gy_[2],
       _GB_=caml_call6(CamlinternalOO[18],_Gw_,0,shared$4,0,t_t$3,1)[1];
      function _GC_(self_2,inh_004,param,x_005)
       {return caml_call4
                (Stdlib_Format[129],inh_004,_jj_,self_2[1 + _Gx_],x_005)}
      var
       _GD_=
        [0,
         _GA_,
         function(self_2,inh_003,param)
          {return caml_call2(Stdlib_Format[129],inh_003,_jk_)},
         _Gz_,
         _GC_];
      caml_call2(CamlinternalOO[11],_Gw_,_GD_);
      return function(_GH_,_GG_,_GF_,_GE_)
       {var _GI_=caml_call2(CamlinternalOO[24],_GG_,_Gw_);
        _GI_[1 + _Gx_] = _GF_;
        caml_call1(_GB_,_GI_);
        return caml_call3(CamlinternalOO[26],_GG_,_GI_,_Gw_)}}
    var fmt_t_t$3=caml_call2(CamlinternalOO[19],_jb_,_ji_);
    function fmt_t$3(fa,inh0,subj)
     {var _Gv_=caml_call2(fmt_t_t$3[1],0,fa);
      return caml_call4(GT[2],gcata_ground$2,_Gv_,inh0,subj)}
    function _jl_(_Gi_)
     {var
       _Gj_=caml_call2(CamlinternalOO[3],_Gi_,cst$96),
       _Gk_=caml_call2(CamlinternalOO[8],_Gi_,shared$4),
       _Gl_=_Gk_[1],
       _Gm_=_Gk_[2],
       _Gn_=caml_call6(CamlinternalOO[18],_Gi_,0,shared$4,0,t_t$3,1)[1];
      function _Go_(self_3,inh_007,param,x_008)
       {return caml_call2(self_3[1 + _Gj_],inh_007,x_008)}
      var
       _Gp_=
        [0,_Gm_,function(self_3,inh_006,param){return inh_006},_Gl_,_Go_];
      caml_call2(CamlinternalOO[11],_Gi_,_Gp_);
      return function(_Gt_,_Gs_,_Gr_,_Gq_)
       {var _Gu_=caml_call2(CamlinternalOO[24],_Gs_,_Gi_);
        _Gu_[1 + _Gj_] = _Gr_;
        caml_call1(_Gn_,_Gu_);
        return caml_call3(CamlinternalOO[26],_Gs_,_Gu_,_Gi_)}}
    var foldr_t_t$3=caml_call2(CamlinternalOO[19],_jb_,_jl_);
    function foldr_t$3(fa,inh0,subj)
     {var _Gh_=caml_call2(foldr_t_t$3[1],0,fa);
      return caml_call4(GT[2],gcata_ground$2,_Gh_,inh0,subj)}
    function _jm_(_F6_)
     {var
       _F7_=caml_call2(CamlinternalOO[3],_F6_,cst$97),
       _F8_=caml_call2(CamlinternalOO[8],_F6_,shared$4),
       _F9_=_F8_[1],
       _F__=_F8_[2],
       _F$_=caml_call6(CamlinternalOO[18],_F6_,0,shared$4,0,t_t$3,1)[1];
      function _Ga_(self_4,inh_010,param,x_011)
       {return caml_call2(self_4[1 + _F7_],inh_010,x_011)}
      var
       _Gb_=
        [0,_F__,function(self_4,inh_009,param){return inh_009},_F9_,_Ga_];
      caml_call2(CamlinternalOO[11],_F6_,_Gb_);
      return function(_Gf_,_Ge_,_Gd_,_Gc_)
       {var _Gg_=caml_call2(CamlinternalOO[24],_Ge_,_F6_);
        _Gg_[1 + _F7_] = _Gd_;
        caml_call1(_F$_,_Gg_);
        return caml_call3(CamlinternalOO[26],_Ge_,_Gg_,_F6_)}}
    var foldl_t_t$3=caml_call2(CamlinternalOO[19],_jb_,_jm_);
    function foldl_t$3(fa,inh0,subj)
     {var _F5_=caml_call2(foldl_t_t$3[1],0,fa);
      return caml_call4(GT[2],gcata_ground$2,_F5_,inh0,subj)}
    function _jn_(_FR_)
     {var
       _FS_=caml_call2(CamlinternalOO[3],_FR_,cst$98),
       _FT_=caml_call2(CamlinternalOO[8],_FR_,shared$4),
       _FU_=_FT_[1],
       _FV_=_FT_[2],
       _FW_=caml_call6(CamlinternalOO[18],_FR_,0,shared$4,0,t_t$3,1)[1];
      function _FX_(self_5,inh_014,param,x_015)
       {if(! inh_014)return caml_call2(GT[12],inh_014,_jo_);
        var x_016=inh_014[1];
        function _F4_(param){return caml_call2(self_5[1 + _FS_],x_016,x_015)}
        return caml_call2(GT[6],1,_F4_)}
      var
       _FY_=
        [0,
         _FV_,
         function(self_5,inh_012,param)
          {return inh_012?caml_call2(GT[12],inh_012,0):1},
         _FU_,
         _FX_];
      caml_call2(CamlinternalOO[11],_FR_,_FY_);
      return function(_F2_,_F1_,_F0_,_FZ_)
       {var _F3_=caml_call2(CamlinternalOO[24],_F1_,_FR_);
        _F3_[1 + _FS_] = _F0_;
        caml_call1(_FW_,_F3_);
        return caml_call3(CamlinternalOO[26],_F1_,_F3_,_FR_)}}
    var compare_t_t$3=caml_call2(CamlinternalOO[19],_jb_,_jn_);
    function compare_t$3(fa,inh0,subj)
     {var _FQ_=caml_call2(compare_t_t$3[1],0,fa);
      return caml_call4(GT[2],gcata_ground$2,_FQ_,inh0,subj)}
    function _jp_(_FD_)
     {var
       _FE_=caml_call2(CamlinternalOO[3],_FD_,cst$99),
       _FF_=caml_call2(CamlinternalOO[8],_FD_,shared$4),
       _FG_=_FF_[1],
       _FH_=_FF_[2],
       _FI_=caml_call6(CamlinternalOO[18],_FD_,0,shared$4,0,t_t$3,1)[1];
      function _FJ_(self_6,inh_020,param,x_021)
       {if(! inh_020)return 0;
        var x_022=inh_020[1];
        return caml_call2(self_6[1 + _FE_],x_022,x_021)}
      var
       _FK_=
        [0,_FH_,function(self_6,inh_018,param){return inh_018?0:1},_FG_,_FJ_];
      caml_call2(CamlinternalOO[11],_FD_,_FK_);
      return function(_FO_,_FN_,_FM_,_FL_)
       {var _FP_=caml_call2(CamlinternalOO[24],_FN_,_FD_);
        _FP_[1 + _FE_] = _FM_;
        caml_call1(_FI_,_FP_);
        return caml_call3(CamlinternalOO[26],_FN_,_FP_,_FD_)}}
    var eq_t_t$3=caml_call2(CamlinternalOO[19],_jb_,_jp_);
    function eq_t$3(fa,inh0,subj)
     {var _FC_=caml_call2(eq_t_t$3[1],0,fa);
      return caml_call4(GT[2],gcata_ground$2,_FC_,inh0,subj)}
    function _jq_(_Fd_)
     {var
       _Fe_=caml_call2(CamlinternalOO[3],_Fd_,cst$100),
       _Ff_=caml_call2(CamlinternalOO[8],_Fd_,shared$4),
       _Fg_=_Ff_[1],
       _Fh_=_Ff_[2],
       _Fi_=caml_call6(CamlinternalOO[18],_Fd_,0,shared$4,0,t_t$3,1)[1];
      function _Fj_(self_7,param,_Fr_,x_024)
       {var
         _Fs_=caml_call2(self_7[1 + _Fe_],0,x_024),
         _Ft_=caml_call2(Stdlib_List[4],_Fs_,0),
         _Fu_=caml_call1(HTML[10],_Ft_),
         _Fv_=caml_call2(HTML[25],0,_Fu_),
         _Fw_=caml_call2(Stdlib_List[4],_Fv_,0),
         _Fx_=caml_call1(HTML[10],_Fw_),
         _Fy_=caml_call2(HTML[23],0,_Fx_),
         _Fz_=caml_call2(Stdlib_List[4],_Fy_,0),
         _FA_=caml_call1(HTML[3],cst_S),
         _FB_=caml_call2(Stdlib_List[4],_FA_,_Fz_);
        return caml_call1(HTML[10],_FB_)}
      var
       _Fk_=
        [0,
         _Fh_,
         function(self_7,param,_Fq_){return caml_call1(HTML[3],cst_O)},
         _Fg_,
         _Fj_];
      caml_call2(CamlinternalOO[11],_Fd_,_Fk_);
      return function(_Fo_,_Fn_,_Fm_,_Fl_)
       {var _Fp_=caml_call2(CamlinternalOO[24],_Fn_,_Fd_);
        _Fp_[1 + _Fe_] = _Fm_;
        caml_call1(_Fi_,_Fp_);
        return caml_call3(CamlinternalOO[26],_Fn_,_Fp_,_Fd_)}}
    var html_t_t$2=caml_call2(CamlinternalOO[19],_jb_,_jq_);
    function _jr_(fa,inh0,subj)
     {var _Fc_=caml_call2(html_t_t$2[1],0,fa);
      return caml_call4(GT[2],gcata_ground$2,_Fc_,inh0,subj)}
    function _js_(_EZ_)
     {var
       _E0_=caml_call2(CamlinternalOO[3],_EZ_,cst$101),
       _E1_=caml_call2(CamlinternalOO[8],_EZ_,shared$4),
       _E2_=_E1_[1],
       _E3_=_E1_[2],
       _E4_=caml_call6(CamlinternalOO[18],_EZ_,0,shared$4,0,t_t$3,1)[1];
      function _E5_(self_8,param,_Fb_,x_025)
       {return [0,caml_call2(self_8[1 + _E0_],0,x_025)]}
      var _E6_=[0,_E3_,function(self_8,param,_Fa_){return 0},_E2_,_E5_];
      caml_call2(CamlinternalOO[11],_EZ_,_E6_);
      return function(_E__,_E9_,_E8_,_E7_)
       {var _E$_=caml_call2(CamlinternalOO[24],_E9_,_EZ_);
        _E$_[1 + _E0_] = _E8_;
        caml_call1(_E4_,_E$_);
        return caml_call3(CamlinternalOO[26],_E9_,_E$_,_EZ_)}}
    var gmap_t_t$3=caml_call2(CamlinternalOO[19],_jb_,_js_);
    function _jt_(fa,inh0,subj)
     {var _EY_=caml_call2(gmap_t_t$3[1],0,fa);
      return caml_call4(GT[2],gcata_ground$2,_EY_,inh0,subj)}
    function _ju_(_EI_)
     {var
       _EJ_=caml_call2(CamlinternalOO[3],_EI_,cst$102),
       _EK_=caml_call2(CamlinternalOO[8],_EI_,shared$4),
       _EL_=_EK_[1],
       _EM_=_EK_[2],
       _EN_=caml_call6(CamlinternalOO[18],_EI_,0,shared$4,0,t_t$3,1)[1];
      function _EO_(self_9,param,_EW_,x_026)
       {var _EX_=caml_call2(self_9[1 + _EJ_],0,x_026);
        return caml_call2(Stdlib_Printf[4],_jv_,_EX_)}
      var _EP_=[0,_EM_,function(self_9,param,_EV_){return cst_O$0},_EL_,_EO_];
      caml_call2(CamlinternalOO[11],_EI_,_EP_);
      return function(_ET_,_ES_,_ER_,_EQ_)
       {var _EU_=caml_call2(CamlinternalOO[24],_ES_,_EI_);
        _EU_[1 + _EJ_] = _ER_;
        caml_call1(_EN_,_EU_);
        return caml_call3(CamlinternalOO[26],_ES_,_EU_,_EI_)}}
    var show_t_t$3=caml_call2(CamlinternalOO[19],_jb_,_ju_);
    function _jw_(fa,inh0,subj)
     {var _EH_=caml_call2(show_t_t$3[1],0,fa);
      return caml_call4(GT[2],gcata_ground$2,_EH_,inh0,subj)}
    function _jx_(eta){return caml_call2(GT[2],gcata_ground$2,eta)}
    var
     _jy_=caml_call1(CamlinternalOO[16],_jc_),
     _jz_=caml_call2(CamlinternalOO[8],_jy_,_je_),
     _jA_=_jz_[1],
     _jB_=_jz_[2],
     _jC_=_jz_[3],
     _jD_=_jz_[4],
     _jE_=_jz_[5],
     _jF_=_jz_[6],
     _jG_=_jz_[7],
     _jH_=_jz_[8];
    function _jI_(self_10,fa,subj){return _jw_(caml_call1(GT[4],fa),0,subj)}
    function _jJ_(self_10,fa,subj){return _jt_(caml_call1(GT[4],fa),0,subj)}
    function _jK_(self_10,fa,subj){return _jr_(caml_call1(GT[4],fa),0,subj)}
    function _jL_(self_10){return eq_t$3}
    function _jM_(self_10){return compare_t$3}
    function _jN_(self_10){return foldl_t$3}
    function _jO_(self_10){return foldr_t$3}
    var
     _jP_=
      [0,
       _jF_,
       function(self_10){return fmt_t$3},
       _jD_,
       _jO_,
       _jE_,
       _jN_,
       _jH_,
       _jM_,
       _jG_,
       _jL_,
       _jB_,
       _jK_,
       _jC_,
       _jJ_,
       _jA_,
       _jI_];
    caml_call2(CamlinternalOO[11],_jy_,_jP_);
    caml_call1(CamlinternalOO[17],_jy_);
    var t$2=[0,gcata_ground$2,caml_call2(CamlinternalOO[24],0,_jy_),_jx_];
    function html_t$2(fa,subj){return _jr_(caml_call1(GT[4],fa),0,subj)}
    function gmap_t$3(fa,subj){return _jt_(caml_call1(GT[4],fa),0,subj)}
    function show_t$3(fa,subj){return _jw_(caml_call1(GT[4],fa),0,subj)}
    var ground_t$3=[],_jQ_=0,_jR_=0;
    caml_update_dummy
     (ground_t$3,
      [0,
       0,
       function(_EC_)
        {caml_call2(CamlinternalOO[8],_EC_,shared$4);
         var _ED_=caml_call6(CamlinternalOO[18],_EC_,0,shared$4,0,t_t$3,1)[1];
         return function(_EF_,_EE_)
          {var _EG_=caml_call2(CamlinternalOO[24],_EE_,_EC_);
           caml_call1(_ED_,_EG_);
           return caml_call3(CamlinternalOO[26],_EE_,_EG_,_EC_)}},
       _jR_,
       _jQ_]);
    function _jS_(_Ev_)
     {caml_call2(CamlinternalOO[8],_Ev_,shared$4);
      var
       _Ew_=caml_call6(CamlinternalOO[18],_Ev_,0,shared$4,0,ground_t$3,1)[1],
       _Ex_=caml_call6(CamlinternalOO[18],_Ev_,0,0,_jb_,fmt_t_t$3,1)[1];
      return function(_EA_,_Ez_,_Ey_)
       {var _EB_=caml_call2(CamlinternalOO[24],_Ez_,_Ev_);
        caml_call1(_Ew_,_EB_);
        caml_call3(_Ex_,_EB_,_Ey_,_Ey_);
        return caml_call3(CamlinternalOO[26],_Ez_,_EB_,_Ev_)}}
    var fmt_ground_t$3=caml_call2(CamlinternalOO[19],_jb_,_jS_);
    function fmt_ground$3(inh_027,subj_028)
     {return caml_call4(GT[224],t$2,fmt_ground$3,inh_027,subj_028)}
    function _jT_(_Eo_)
     {caml_call2(CamlinternalOO[8],_Eo_,shared$4);
      var
       _Ep_=caml_call6(CamlinternalOO[18],_Eo_,0,shared$4,0,ground_t$3,1)[1],
       _Eq_=caml_call6(CamlinternalOO[18],_Eo_,0,0,_jb_,foldr_t_t$3,1)[1];
      return function(_Et_,_Es_,_Er_)
       {var _Eu_=caml_call2(CamlinternalOO[24],_Es_,_Eo_);
        caml_call1(_Ep_,_Eu_);
        caml_call3(_Eq_,_Eu_,_Er_,_Er_);
        return caml_call3(CamlinternalOO[26],_Es_,_Eu_,_Eo_)}}
    var foldr_ground_t$3=caml_call2(CamlinternalOO[19],_jb_,_jT_);
    function foldr_ground$3(inh_029,subj_030)
     {return caml_call4(GT[226],t$2,foldr_ground$3,inh_029,subj_030)}
    function _jU_(_Eh_)
     {caml_call2(CamlinternalOO[8],_Eh_,shared$4);
      var
       _Ei_=caml_call6(CamlinternalOO[18],_Eh_,0,shared$4,0,ground_t$3,1)[1],
       _Ej_=caml_call6(CamlinternalOO[18],_Eh_,0,0,_jb_,foldl_t_t$3,1)[1];
      return function(_Em_,_El_,_Ek_)
       {var _En_=caml_call2(CamlinternalOO[24],_El_,_Eh_);
        caml_call1(_Ei_,_En_);
        caml_call3(_Ej_,_En_,_Ek_,_Ek_);
        return caml_call3(CamlinternalOO[26],_El_,_En_,_Eh_)}}
    var foldl_ground_t$3=caml_call2(CamlinternalOO[19],_jb_,_jU_);
    function foldl_ground$3(inh_031,subj_032)
     {return caml_call4(GT[225],t$2,foldl_ground$3,inh_031,subj_032)}
    function _jV_(_Ea_)
     {caml_call2(CamlinternalOO[8],_Ea_,shared$4);
      var
       _Eb_=caml_call6(CamlinternalOO[18],_Ea_,0,shared$4,0,ground_t$3,1)[1],
       _Ec_=caml_call6(CamlinternalOO[18],_Ea_,0,0,_jb_,compare_t_t$3,1)[1];
      return function(_Ef_,_Ee_,_Ed_)
       {var _Eg_=caml_call2(CamlinternalOO[24],_Ee_,_Ea_);
        caml_call1(_Eb_,_Eg_);
        caml_call3(_Ec_,_Eg_,_Ed_,_Ed_);
        return caml_call3(CamlinternalOO[26],_Ee_,_Eg_,_Ea_)}}
    var compare_ground_t$3=caml_call2(CamlinternalOO[19],_jb_,_jV_);
    function compare_ground$3(inh,subj)
     {return caml_call4(GT[228],t$2,compare_ground$3,inh,subj)}
    function _jW_(_D5_)
     {caml_call2(CamlinternalOO[8],_D5_,shared$4);
      var
       _D6_=caml_call6(CamlinternalOO[18],_D5_,0,shared$4,0,ground_t$3,1)[1],
       _D7_=caml_call6(CamlinternalOO[18],_D5_,0,0,_jb_,eq_t_t$3,1)[1];
      return function(_D__,_D9_,_D8_)
       {var _D$_=caml_call2(CamlinternalOO[24],_D9_,_D5_);
        caml_call1(_D6_,_D$_);
        caml_call3(_D7_,_D$_,_D8_,_D8_);
        return caml_call3(CamlinternalOO[26],_D9_,_D$_,_D5_)}}
    var eq_ground_t$3=caml_call2(CamlinternalOO[19],_jb_,_jW_);
    function eq_ground$3(inh,subj)
     {return caml_call4(GT[227],t$2,eq_ground$3,inh,subj)}
    function _jX_(_DY_)
     {caml_call2(CamlinternalOO[8],_DY_,shared$4);
      var
       _DZ_=caml_call6(CamlinternalOO[18],_DY_,0,shared$4,0,ground_t$3,1)[1],
       _D0_=caml_call6(CamlinternalOO[18],_DY_,0,0,_jb_,html_t_t$2,1)[1];
      return function(_D3_,_D2_,_D1_)
       {var _D4_=caml_call2(CamlinternalOO[24],_D2_,_DY_);
        caml_call1(_DZ_,_D4_);
        caml_call3(_D0_,_D4_,_D1_,_D1_);
        return caml_call3(CamlinternalOO[26],_D2_,_D4_,_DY_)}}
    var html_ground_t$2=caml_call2(CamlinternalOO[19],_jb_,_jX_);
    function _jY_(param,subj)
     {var _DV_=0;
      function _DW_(_DX_){return _jY_(_DV_,_DX_)}
      return caml_call3(GT[222],t$2,_DW_,subj)}
    function _jZ_(_DO_)
     {caml_call2(CamlinternalOO[8],_DO_,shared$4);
      var
       _DP_=caml_call6(CamlinternalOO[18],_DO_,0,shared$4,0,ground_t$3,1)[1],
       _DQ_=caml_call6(CamlinternalOO[18],_DO_,0,0,_jb_,gmap_t_t$3,1)[1];
      return function(_DT_,_DS_,_DR_)
       {var _DU_=caml_call2(CamlinternalOO[24],_DS_,_DO_);
        caml_call1(_DP_,_DU_);
        caml_call3(_DQ_,_DU_,_DR_,_DR_);
        return caml_call3(CamlinternalOO[26],_DS_,_DU_,_DO_)}}
    var gmap_ground_t$3=caml_call2(CamlinternalOO[19],_jb_,_jZ_);
    function _j0_(param,subj)
     {var _DL_=0;
      function _DM_(_DN_){return _j0_(_DL_,_DN_)}
      return caml_call3(GT[223],t$2,_DM_,subj)}
    function _j1_(_DE_)
     {caml_call2(CamlinternalOO[8],_DE_,shared$4);
      var
       _DF_=caml_call6(CamlinternalOO[18],_DE_,0,shared$4,0,ground_t$3,1)[1],
       _DG_=caml_call6(CamlinternalOO[18],_DE_,0,0,_jb_,show_t_t$3,1)[1];
      return function(_DJ_,_DI_,_DH_)
       {var _DK_=caml_call2(CamlinternalOO[24],_DI_,_DE_);
        caml_call1(_DF_,_DK_);
        caml_call3(_DG_,_DK_,_DH_,_DH_);
        return caml_call3(CamlinternalOO[26],_DI_,_DK_,_DE_)}}
    var show_ground_t$3=caml_call2(CamlinternalOO[19],_jb_,_j1_);
    function _j2_(param,subj)
     {var _DB_=0;
      function _DC_(_DD_){return _j2_(_DB_,_DD_)}
      return caml_call3(GT[221],t$2,_DC_,subj)}
    function _j3_(eta){return caml_call2(GT[2],gcata_ground$2,eta)}
    var
     _j4_=caml_call1(CamlinternalOO[16],_jc_),
     _j5_=caml_call2(CamlinternalOO[8],_j4_,_je_),
     _j6_=_j5_[1],
     _j7_=_j5_[2],
     _j8_=_j5_[3],
     _j9_=_j5_[4],
     _j__=_j5_[5],
     _j$_=_j5_[6],
     _ka_=_j5_[7],
     _kb_=_j5_[8];
    function _kc_(self_20,subj){return _j2_(0,subj)}
    function _kd_(self_20,subj){return _j0_(0,subj)}
    function _ke_(self_20,subj){return _jY_(0,subj)}
    function _kf_(self_20){return eq_ground$3}
    function _kg_(self_20){return compare_ground$3}
    function _kh_(self_20){return foldl_ground$3}
    function _ki_(self_20){return foldr_ground$3}
    var
     _kj_=
      [0,
       _j$_,
       function(self_20){return fmt_ground$3},
       _j9_,
       _ki_,
       _j__,
       _kh_,
       _kb_,
       _kg_,
       _ka_,
       _kf_,
       _j7_,
       _ke_,
       _j8_,
       _kd_,
       _j6_,
       _kc_];
    caml_call2(CamlinternalOO[11],_j4_,_kj_);
    caml_call1(CamlinternalOO[17],_j4_);
    var
     ground$3=
      [0,gcata_ground$2,caml_call2(CamlinternalOO[24],0,_j4_),_j3_];
    function html_ground$2(subj){return _jY_(0,subj)}
    function gmap_ground$3(subj){return _j0_(0,subj)}
    function show_ground$3(subj){return _j2_(0,subj)}
    var logic_t$6=[],_kk_=0,_kl_=0;
    caml_update_dummy
     (logic_t$6,
      [0,
       0,
       function(_Dw_)
        {caml_call2(CamlinternalOO[8],_Dw_,_jf_);
         var _Dx_=caml_call6(CamlinternalOO[18],_Dw_,0,_jf_,0,logic_t,1)[1];
         return function(_Dz_,_Dy_)
          {var _DA_=caml_call2(CamlinternalOO[24],_Dy_,_Dw_);
           caml_call1(_Dx_,_DA_);
           return caml_call3(CamlinternalOO[26],_Dy_,_DA_,_Dw_)}},
       _kl_,
       _kk_]);
    function _km_(_Dp_)
     {caml_call2(CamlinternalOO[8],_Dp_,_jf_);
      var
       _Dq_=caml_call6(CamlinternalOO[18],_Dp_,0,_jf_,0,logic_t$6,1)[1],
       _Dr_=caml_call6(CamlinternalOO[18],_Dp_,0,0,_jd_,fmt_logic_t,1)[1];
      return function(_Du_,_Dt_,_Ds_)
       {var _Dv_=caml_call2(CamlinternalOO[24],_Dt_,_Dp_);
        caml_call1(_Dq_,_Dv_);
        caml_call3
         (_Dr_,
          _Dv_,
          function(inh_037,subj_038)
           {return caml_call4(GT[224],t$2,_Ds_,inh_037,subj_038)},
          _Ds_);
        return caml_call3(CamlinternalOO[26],_Dt_,_Dv_,_Dp_)}}
    var fmt_logic_t$6=caml_call2(CamlinternalOO[19],_jd_,_km_);
    function fmt_logic$6(inh_033,subj_034)
     {function _Do_(inh_035,subj_036)
       {return caml_call4(GT[224],t$2,fmt_logic$6,inh_035,subj_036)}
      return caml_call4(GT[224],logic,_Do_,inh_033,subj_034)}
    function _kn_(_Dh_)
     {caml_call2(CamlinternalOO[8],_Dh_,_jf_);
      var
       _Di_=caml_call6(CamlinternalOO[18],_Dh_,0,_jf_,0,logic_t$6,1)[1],
       _Dj_=caml_call6(CamlinternalOO[18],_Dh_,0,0,_jd_,foldr_logic_t,1)[1];
      return function(_Dm_,_Dl_,_Dk_)
       {var _Dn_=caml_call2(CamlinternalOO[24],_Dl_,_Dh_);
        caml_call1(_Di_,_Dn_);
        caml_call3
         (_Dj_,
          _Dn_,
          function(inh_043,subj_044)
           {return caml_call4(GT[226],t$2,_Dk_,inh_043,subj_044)},
          _Dk_);
        return caml_call3(CamlinternalOO[26],_Dl_,_Dn_,_Dh_)}}
    var foldr_logic_t$6=caml_call2(CamlinternalOO[19],_jd_,_kn_);
    function foldr_logic$6(inh_039,subj_040)
     {function _Dg_(inh_041,subj_042)
       {return caml_call4(GT[226],t$2,foldr_logic$6,inh_041,subj_042)}
      return caml_call4(GT[226],logic,_Dg_,inh_039,subj_040)}
    function _ko_(_C$_)
     {caml_call2(CamlinternalOO[8],_C$_,_jf_);
      var
       _Da_=caml_call6(CamlinternalOO[18],_C$_,0,_jf_,0,logic_t$6,1)[1],
       _Db_=caml_call6(CamlinternalOO[18],_C$_,0,0,_jd_,foldl_logic_t,1)[1];
      return function(_De_,_Dd_,_Dc_)
       {var _Df_=caml_call2(CamlinternalOO[24],_Dd_,_C$_);
        caml_call1(_Da_,_Df_);
        caml_call3
         (_Db_,
          _Df_,
          function(inh_049,subj_050)
           {return caml_call4(GT[225],t$2,_Dc_,inh_049,subj_050)},
          _Dc_);
        return caml_call3(CamlinternalOO[26],_Dd_,_Df_,_C$_)}}
    var foldl_logic_t$6=caml_call2(CamlinternalOO[19],_jd_,_ko_);
    function foldl_logic$6(inh_045,subj_046)
     {function _C__(inh_047,subj_048)
       {return caml_call4(GT[225],t$2,foldl_logic$6,inh_047,subj_048)}
      return caml_call4(GT[225],logic,_C__,inh_045,subj_046)}
    function _kp_(_C3_)
     {caml_call2(CamlinternalOO[8],_C3_,_jf_);
      var
       _C4_=caml_call6(CamlinternalOO[18],_C3_,0,_jf_,0,logic_t$6,1)[1],
       _C5_=caml_call6(CamlinternalOO[18],_C3_,0,0,_jd_,compare_logic_t,1)[1];
      return function(_C8_,_C7_,_C6_)
       {var _C9_=caml_call2(CamlinternalOO[24],_C7_,_C3_);
        caml_call1(_C4_,_C9_);
        caml_call3
         (_C5_,
          _C9_,
          function(inh,subj){return caml_call4(GT[228],t$2,_C6_,inh,subj)},
          _C6_);
        return caml_call3(CamlinternalOO[26],_C7_,_C9_,_C3_)}}
    var compare_logic_t$6=caml_call2(CamlinternalOO[19],_jd_,_kp_);
    function compare_logic$6(inh,subj)
     {function _C2_(inh,subj)
       {return caml_call4(GT[228],t$2,compare_logic$6,inh,subj)}
      return caml_call4(GT[228],logic,_C2_,inh,subj)}
    function _kq_(_CV_)
     {caml_call2(CamlinternalOO[8],_CV_,_jf_);
      var
       _CW_=caml_call6(CamlinternalOO[18],_CV_,0,_jf_,0,logic_t$6,1)[1],
       _CX_=caml_call6(CamlinternalOO[18],_CV_,0,0,_jd_,eq_logic_t,1)[1];
      return function(_C0_,_CZ_,_CY_)
       {var _C1_=caml_call2(CamlinternalOO[24],_CZ_,_CV_);
        caml_call1(_CW_,_C1_);
        caml_call3
         (_CX_,
          _C1_,
          function(inh,subj){return caml_call4(GT[227],t$2,_CY_,inh,subj)},
          _CY_);
        return caml_call3(CamlinternalOO[26],_CZ_,_C1_,_CV_)}}
    var eq_logic_t$6=caml_call2(CamlinternalOO[19],_jd_,_kq_);
    function eq_logic$6(inh,subj)
     {function _CU_(inh,subj)
       {return caml_call4(GT[227],t$2,eq_logic$6,inh,subj)}
      return caml_call4(GT[227],logic,_CU_,inh,subj)}
    function _kr_(_CM_)
     {caml_call2(CamlinternalOO[8],_CM_,_jf_);
      var
       _CN_=caml_call6(CamlinternalOO[18],_CM_,0,_jf_,0,logic_t$6,1)[1],
       _CO_=caml_call6(CamlinternalOO[18],_CM_,0,0,_jd_,html_logic_t,1)[1];
      return function(_CR_,_CQ_,_CP_)
       {var _CS_=caml_call2(CamlinternalOO[24],_CQ_,_CM_);
        caml_call1(_CN_,_CS_);
        caml_call3
         (_CO_,
          _CS_,
          function(param,subj)
           {var _CT_=caml_call1(_CP_,0);
            return caml_call3(GT[222],t$2,_CT_,subj)},
          _CP_);
        return caml_call3(CamlinternalOO[26],_CQ_,_CS_,_CM_)}}
    var html_logic_t$5=caml_call2(CamlinternalOO[19],_jd_,_kr_);
    function _ks_(param,subj)
     {function _CI_(subj)
       {var _CJ_=0;
        function _CK_(_CL_){return _ks_(_CJ_,_CL_)}
        return caml_call3(GT[222],t$2,_CK_,subj)}
      return caml_call3(GT[222],logic,_CI_,subj)}
    function _kt_(_CA_)
     {caml_call2(CamlinternalOO[8],_CA_,_jf_);
      var
       _CB_=caml_call6(CamlinternalOO[18],_CA_,0,_jf_,0,logic_t$6,1)[1],
       _CC_=caml_call6(CamlinternalOO[18],_CA_,0,0,_jd_,gmap_logic_t,1)[1];
      return function(_CF_,_CE_,_CD_)
       {var _CG_=caml_call2(CamlinternalOO[24],_CE_,_CA_);
        caml_call1(_CB_,_CG_);
        caml_call3
         (_CC_,
          _CG_,
          function(param,subj)
           {var _CH_=caml_call1(_CD_,0);
            return caml_call3(GT[223],t$2,_CH_,subj)},
          _CD_);
        return caml_call3(CamlinternalOO[26],_CE_,_CG_,_CA_)}}
    var gmap_logic_t$6=caml_call2(CamlinternalOO[19],_jd_,_kt_);
    function _ku_(param,subj)
     {function _Cw_(subj)
       {var _Cx_=0;
        function _Cy_(_Cz_){return _ku_(_Cx_,_Cz_)}
        return caml_call3(GT[223],t$2,_Cy_,subj)}
      return caml_call3(GT[223],logic,_Cw_,subj)}
    function _kv_(_Co_)
     {caml_call2(CamlinternalOO[8],_Co_,_jf_);
      var
       _Cp_=caml_call6(CamlinternalOO[18],_Co_,0,_jf_,0,logic_t$6,1)[1],
       _Cq_=caml_call6(CamlinternalOO[18],_Co_,0,0,_jd_,show_logic_t,1)[1];
      return function(_Ct_,_Cs_,_Cr_)
       {var _Cu_=caml_call2(CamlinternalOO[24],_Cs_,_Co_);
        caml_call1(_Cp_,_Cu_);
        caml_call3
         (_Cq_,
          _Cu_,
          function(param,subj)
           {var _Cv_=caml_call1(_Cr_,0);
            return caml_call3(GT[221],t$2,_Cv_,subj)},
          _Cr_);
        return caml_call3(CamlinternalOO[26],_Cs_,_Cu_,_Co_)}}
    var show_logic_t$6=caml_call2(CamlinternalOO[19],_jd_,_kv_);
    function _kw_(param,subj)
     {function _Ck_(subj)
       {var _Cl_=0;
        function _Cm_(_Cn_){return _kw_(_Cl_,_Cn_)}
        return caml_call3(GT[221],t$2,_Cm_,subj)}
      return caml_call3(GT[221],logic,_Ck_,subj)}
    function _kx_(eta){return caml_call2(GT[2],gcata_logic,eta)}
    var
     _ky_=caml_call1(CamlinternalOO[16],_jc_),
     _kz_=caml_call2(CamlinternalOO[8],_ky_,_je_),
     _kA_=_kz_[1],
     _kB_=_kz_[2],
     _kC_=_kz_[3],
     _kD_=_kz_[4],
     _kE_=_kz_[5],
     _kF_=_kz_[6],
     _kG_=_kz_[7],
     _kH_=_kz_[8];
    function _kI_(self_30,subj){return _kw_(0,subj)}
    function _kJ_(self_30,subj){return _ku_(0,subj)}
    function _kK_(self_30,subj){return _ks_(0,subj)}
    function _kL_(self_30){return eq_logic$6}
    function _kM_(self_30){return compare_logic$6}
    function _kN_(self_30){return foldl_logic$6}
    function _kO_(self_30){return foldr_logic$6}
    var
     _kP_=
      [0,
       _kF_,
       function(self_30){return fmt_logic$6},
       _kD_,
       _kO_,
       _kE_,
       _kN_,
       _kH_,
       _kM_,
       _kG_,
       _kL_,
       _kB_,
       _kK_,
       _kC_,
       _kJ_,
       _kA_,
       _kI_];
    caml_call2(CamlinternalOO[11],_ky_,_kP_);
    caml_call1(CamlinternalOO[17],_ky_);
    var _kQ_=caml_call2(CamlinternalOO[24],0,_ky_);
    function html_logic$3(subj){return _ks_(0,subj)}
    function gmap_logic$4(subj){return _ku_(0,subj)}
    function show_logic$4(subj){return _kw_(0,subj)}
    var
     _kR_=caml_call1(CamlinternalOO[16],_jc_),
     _kS_=caml_call2(CamlinternalOO[8],_kR_,_je_),
     _kT_=_kS_[1],
     _kU_=_kS_[2],
     _kV_=_kS_[3],
     _kW_=_kS_[4],
     _kX_=_kS_[5],
     _kY_=_kS_[6],
     _kZ_=_kS_[7],
     _k0_=_kS_[8];
    function _k1_(self_31)
     {function _Ci_(l)
       {var _Cj_=caml_call1(self_31[1][1 + _kT_],self_31);
        return caml_call3(GT[221],t$2,_Cj_,l)}
      return caml_call2(GT[221],logic,_Ci_)}
    function _k2_(self_31)
     {return caml_call1(caml_get_public_method(_kQ_,5096781,42),_kQ_)}
    function _k3_(self_31)
     {return caml_call1(caml_get_public_method(_kQ_,-988375701,43),_kQ_)}
    function _k4_(self_31)
     {return caml_call1(caml_get_public_method(_kQ_,76555601,44),_kQ_)}
    function _k5_(self_31)
     {return caml_call1(caml_get_public_method(_kQ_,76555595,45),_kQ_)}
    function _k6_(self_31)
     {return caml_call1(caml_get_public_method(_kQ_,22636,46),_kQ_)}
    function _k7_(self_31)
     {return caml_call1(caml_get_public_method(_kQ_,-999816043,47),_kQ_)}
    var
     _k8_=
      [0,
       _k0_,
       function(self_31)
        {return caml_call1(caml_get_public_method(_kQ_,57219237,48),_kQ_)},
       _kV_,
       _k7_,
       _kZ_,
       _k6_,
       _kX_,
       _k5_,
       _kW_,
       _k4_,
       _kU_,
       _k3_,
       _kY_,
       _k2_,
       _kT_,
       _k1_];
    caml_call2(CamlinternalOO[11],_kR_,_k8_);
    caml_call1(CamlinternalOO[17],_kR_);
    var logic$4=[0,gcata_logic,caml_call2(CamlinternalOO[24],0,_kR_),_kx_];
    function of_int(n){return 0 < n?[0,of_int(n - 1 | 0)]:0}
    function to_int(param)
     {if(! param)return 0;var n=param[1];return 1 + to_int(n) | 0}
    function inj$2(n){return [1,caml_call2(caml_call1(GT[223],t$2),inj$2,n)]}
    function _k9_(self)
     {function _Cg_(fr)
       {function foo(param)
         {if(0 === param[0])
           {var xs=param[2],v=param[1];
            return [0,v,caml_call2(Stdlib_List[19],foo,xs)]}
          var x=param[1];
          return [1,caml_call3(GT[223],t$2,fr,x)]}
        return caml_call1(_m_[1],foo)}
      var _Ch_=caml_call2(_m_[8][1],self,_Cg_);
      return caml_call2(Reifier[4],Reifier[1],_Ch_)}
    var reify$7=caml_call1(Reifier[7],_k9_),symbol_bind=_m_[3];
    function _k__(self)
     {var
       _Ce_=
        caml_call2
         (symbol_bind,
          self,
          function(fr)
           {function _Cf_(x){return caml_call3(GT[223],t$2,fr,x)}
            return caml_call1(_m_[1],_Cf_)});
      return caml_call2(Reifier[4],Reifier[2],_Ce_)}
    var prj_exn$3=caml_call1(Reifier[7],_k__),o=0;
    function s(x){return [0,x]}
    function nat(n){return caml_call3(GT[223],t$2,nat,n)}
    var one$4=[0,o];
    function addo(x,y,z)
     {var _BW_=0;
      function _BX_(x$0,z$0)
       {var _B6_=addo(x$0,y,z$0),_B7_=[0,z$0];
        function _B8_(_Cd_){return unify$1(z,_B7_,_Cd_)}
        var _B9_=[0,x$0];
        function _B__(_Cc_){return unify$1(x,_B9_,_Cc_)}
        function _B$_(_Cb_){return symbol$3(_B__,_B8_,_Cb_)}
        return function(_Ca_){return symbol$3(_B$_,_B6_,_Ca_)}}
      var _BY_=[0,caml_call1(Fresh[4],_BX_),_BW_];
      function _BZ_(_B5_){return unify$1(z,y,_B5_)}
      function _B0_(_B4_){return unify$1(x,o,_B4_)}
      var _B1_=[0,function(_B3_){return symbol$3(_B0_,_BZ_,_B3_)},_BY_];
      return function(_B2_){return conde(_B1_,_B2_)}}
    function mulo(x,y,z)
     {var _BE_=0;
      function _BF_(x$0,z$0)
       {var _BO_=mulo(x$0,y,z$0),_BP_=addo(y,z$0,z),_BQ_=[0,x$0];
        function _BR_(_BV_){return unify$1(x,_BQ_,_BV_)}
        function _BS_(_BU_){return symbol$3(_BR_,_BP_,_BU_)}
        return function(_BT_){return symbol$3(_BS_,_BO_,_BT_)}}
      var _BG_=[0,caml_call1(Fresh[4],_BF_),_BE_];
      function _BH_(_BN_){return unify$1(z,o,_BN_)}
      function _BI_(_BM_){return unify$1(x,o,_BM_)}
      var _BJ_=[0,function(_BL_){return symbol$3(_BI_,_BH_,_BL_)},_BG_];
      return function(_BK_){return conde(_BJ_,_BK_)}}
    function leo(x,y,b)
     {var _Ba_=0;
      function _Bb_(x$0,y$0)
       {var _Bu_=leo(x$0,y$0,b),_Bv_=[0,y$0];
        function _Bw_(_BD_){return unify$1(y,_Bv_,_BD_)}
        var _Bx_=[0,x$0];
        function _By_(_BC_){return unify$1(x,_Bx_,_BC_)}
        function _Bz_(_BB_){return symbol$3(_By_,_Bw_,_BB_)}
        return function(_BA_){return symbol$3(_Bz_,_Bu_,_BA_)}}
      var _Bc_=[0,caml_call1(Fresh[4],_Bb_),_Ba_];
      function _Bd_(_Bt_){return unify$1(b,falso,_Bt_)}
      function _Be_(_Bs_){return unify$1(y,o,_Bs_)}
      function _Bf_(_Br_){return diseq(x,o,_Br_)}
      function _Bg_(_Bq_){return symbol$3(_Bf_,_Be_,_Bq_)}
      var _Bh_=[0,function(_Bp_){return symbol$3(_Bg_,_Bd_,_Bp_)},_Bc_];
      function _Bi_(_Bo_){return unify$1(b,truo,_Bo_)}
      function _Bj_(_Bn_){return unify$1(x,o,_Bn_)}
      var _Bk_=[0,function(_Bm_){return symbol$3(_Bj_,_Bi_,_Bm_)},_Bh_];
      return function(_Bl_){return conde(_Bk_,_Bl_)}}
    function geo(x,y,b){return leo(y,x,b)}
    function symbol$10(x,y){return leo(x,y,truo)}
    function symbol$11(x,y){return geo(x,y,truo)}
    function gto(x,y,b)
     {var _AI_=0;
      function _AJ_(x$0,y$0)
       {var _A2_=gto(x$0,y$0,b),_A3_=[0,y$0];
        function _A4_(_A$_){return unify$1(y,_A3_,_A$_)}
        var _A5_=[0,x$0];
        function _A6_(_A__){return unify$1(x,_A5_,_A__)}
        function _A7_(_A9_){return symbol$3(_A6_,_A4_,_A9_)}
        return function(_A8_){return symbol$3(_A7_,_A2_,_A8_)}}
      var _AK_=[0,caml_call1(Fresh[4],_AJ_),_AI_];
      function _AL_(_A1_){return unify$1(b,falso,_A1_)}
      function _AM_(_A0_){return unify$1(x,o,_A0_)}
      var _AN_=[0,function(_AZ_){return symbol$3(_AM_,_AL_,_AZ_)},_AK_];
      function _AO_(_AY_){return unify$1(b,truo,_AY_)}
      function _AP_(_AX_){return unify$1(y,o,_AX_)}
      function _AQ_(_AW_){return diseq(x,o,_AW_)}
      function _AR_(_AV_){return symbol$3(_AQ_,_AP_,_AV_)}
      var _AS_=[0,function(_AU_){return symbol$3(_AR_,_AO_,_AU_)},_AN_];
      return function(_AT_){return conde(_AS_,_AT_)}}
    function lto(x,y,b){return gto(y,x,b)}
    function symbol$12(x,y){return gto(x,y,truo)}
    function symbol$13(x,y){return lto(x,y,truo)}
    function maxo(x,y,z)
     {var _Aw_=0,_Ax_=symbol$13(x,y);
      function _Ay_(_AH_){return unify$1(z,y,_AH_)}
      var
       _Az_=[0,function(_AG_){return symbol$3(_Ay_,_Ax_,_AG_)},_Aw_],
       _AA_=symbol$11(x,y);
      function _AB_(_AF_){return unify$1(z,x,_AF_)}
      var _AC_=[0,function(_AE_){return symbol$3(_AB_,_AA_,_AE_)},_Az_];
      return function(_AD_){return conde(_AC_,_AD_)}}
    function mino(x,y,z)
     {var _Ak_=0,_Al_=symbol$12(x,y);
      function _Am_(_Av_){return unify$1(z,y,_Av_)}
      var
       _An_=[0,function(_Au_){return symbol$3(_Am_,_Al_,_Au_)},_Ak_],
       _Ao_=symbol$10(x,y);
      function _Ap_(_At_){return unify$1(z,x,_At_)}
      var _Aq_=[0,function(_As_){return symbol$3(_Ap_,_Ao_,_As_)},_An_];
      return function(_Ar_){return conde(_Aq_,_Ar_)}}
    var
     OCanren_Nat=
      [0,
       t_t$3,
       gcata_ground$2,
       fmt_t_t$3,
       fmt_t$3,
       gmap_t_t$3,
       gmap_t$3,
       foldr_t_t$3,
       foldr_t$3,
       foldl_t_t$3,
       foldl_t$3,
       compare_t_t$3,
       compare_t$3,
       eq_t_t$3,
       eq_t$3,
       html_t_t$2,
       html_t$2,
       show_t_t$3,
       show_t$3,
       t$2,
       ground_t$3,
       gcata_ground$2,
       fmt_ground_t$3,
       fmt_ground$3,
       gmap_ground_t$3,
       gmap_ground$3,
       foldr_ground_t$3,
       foldr_ground$3,
       foldl_ground_t$3,
       foldl_ground$3,
       compare_ground_t$3,
       compare_ground$3,
       eq_ground_t$3,
       eq_ground$3,
       html_ground_t$2,
       html_ground$2,
       show_ground_t$3,
       show_ground$3,
       ground$3,
       logic_t$6,
       gcata_logic,
       fmt_logic_t$6,
       fmt_logic$6,
       gmap_logic_t$6,
       gmap_logic$4,
       foldr_logic_t$6,
       foldr_logic$6,
       foldl_logic_t$6,
       foldl_logic$6,
       compare_logic_t$6,
       compare_logic$6,
       eq_logic_t$6,
       eq_logic$6,
       html_logic_t$5,
       html_logic$3,
       show_logic_t$6,
       show_logic$4,
       logic$4,
       inj$2,
       reify$7,
       prj_exn$3,
       of_int,
       to_int,
       nat,
       o,
       s,
       o,
       one$4,
       s,
       addo,
       addo,
       mulo,
       mulo,
       leo,
       geo,
       gto,
       lto,
       symbol$10,
       symbol$11,
       symbol$12,
       symbol$13,
       maxo,
       mino];
    caml_register_global(345,OCanren_Nat,"OCanren__Nat");
    var list_t=[],_le_=0,_lf_=0;
    caml_update_dummy
     (list_t,
      [0,
       0,
       function(_Ah_)
        {caml_call2(CamlinternalOO[8],_Ah_,_lc_);
         return function(_Aj_,_Ai_)
          {return caml_call2(CamlinternalOO[24],_Ai_,_Ah_)}},
       _lf_,
       _le_]);
    function gcata_ground$3(tr,inh,subj)
     {if(! subj)
       return caml_call3(caml_get_public_method(tr,1068646037,50),tr,inh,subj);
      var x_002=subj[2],x_001=subj[1];
      return caml_call5
              (caml_get_public_method(tr,-184304979,49),
               tr,
               inh,
               subj,
               x_001,
               x_002)}
    function _lg_(_z4_)
     {var
       _z5_=caml_call2(CamlinternalOO[3],_z4_,cst$103),
       _z6_=caml_call2(CamlinternalOO[3],_z4_,cst$104),
       _z7_=caml_call2(CamlinternalOO[8],_z4_,_lc_),
       _z8_=_z7_[1],
       _z9_=_z7_[2],
       _z__=caml_call6(CamlinternalOO[18],_z4_,0,_lc_,0,list_t,1)[1];
      function _z$_(self_2,inh_006,param,x_007,x_008)
       {return caml_call6
                (Stdlib_Format[129],
                 inh_006,
                 _lh_,
                 self_2[1 + _z5_],
                 x_007,
                 self_2[1 + _z6_],
                 x_008)}
      var
       _Aa_=
        [0,
         _z8_,
         function(self_2,inh_005,param)
          {return caml_call2(Stdlib_Format[129],inh_005,_li_)},
         _z9_,
         _z$_];
      caml_call2(CamlinternalOO[11],_z4_,_Aa_);
      return function(_Af_,_Ae_,_Ad_,_Ac_,_Ab_)
       {var _Ag_=caml_call2(CamlinternalOO[24],_Ae_,_z4_);
        _Ag_[1 + _z6_] = _Ac_;
        _Ag_[1 + _z5_] = _Ad_;
        caml_call1(_z__,_Ag_);
        return caml_call3(CamlinternalOO[26],_Ae_,_Ag_,_z4_)}}
    var fmt_list_t=caml_call2(CamlinternalOO[19],_la_,_lg_);
    function fmt_list(fa,fl,inh0,subj)
     {var _z3_=caml_call3(fmt_list_t[1],0,fa,fl);
      return caml_call4(GT[2],gcata_ground$3,_z3_,inh0,subj)}
    function _lj_(_zN_)
     {var
       _zO_=caml_call2(CamlinternalOO[3],_zN_,cst$105),
       _zP_=caml_call2(CamlinternalOO[3],_zN_,cst$106),
       _zQ_=caml_call2(CamlinternalOO[8],_zN_,_lc_),
       _zR_=_zQ_[1],
       _zS_=_zQ_[2],
       _zT_=caml_call6(CamlinternalOO[18],_zN_,0,_lc_,0,list_t,1)[1];
      function _zU_(self_3,inh_010,param,x_011,x_012)
       {var _z2_=caml_call2(self_3[1 + _zP_],inh_010,x_012);
        return caml_call2(self_3[1 + _zO_],_z2_,x_011)}
      var
       _zV_=
        [0,_zR_,function(self_3,inh_009,param){return inh_009},_zS_,_zU_];
      caml_call2(CamlinternalOO[11],_zN_,_zV_);
      return function(_z0_,_zZ_,_zY_,_zX_,_zW_)
       {var _z1_=caml_call2(CamlinternalOO[24],_zZ_,_zN_);
        _z1_[1 + _zP_] = _zX_;
        _z1_[1 + _zO_] = _zY_;
        caml_call1(_zT_,_z1_);
        return caml_call3(CamlinternalOO[26],_zZ_,_z1_,_zN_)}}
    var foldr_list_t=caml_call2(CamlinternalOO[19],_la_,_lj_);
    function foldr_list(fa,fl,inh0,subj)
     {var _zM_=caml_call3(foldr_list_t[1],0,fa,fl);
      return caml_call4(GT[2],gcata_ground$3,_zM_,inh0,subj)}
    function _lk_(_zw_)
     {var
       _zx_=caml_call2(CamlinternalOO[3],_zw_,cst$107),
       _zy_=caml_call2(CamlinternalOO[3],_zw_,cst$108),
       _zz_=caml_call2(CamlinternalOO[8],_zw_,_lc_),
       _zA_=_zz_[1],
       _zB_=_zz_[2],
       _zC_=caml_call6(CamlinternalOO[18],_zw_,0,_lc_,0,list_t,1)[1];
      function _zD_(self_4,inh_014,param,x_015,x_016)
       {var _zL_=caml_call2(self_4[1 + _zx_],inh_014,x_015);
        return caml_call2(self_4[1 + _zy_],_zL_,x_016)}
      var
       _zE_=
        [0,_zA_,function(self_4,inh_013,param){return inh_013},_zB_,_zD_];
      caml_call2(CamlinternalOO[11],_zw_,_zE_);
      return function(_zJ_,_zI_,_zH_,_zG_,_zF_)
       {var _zK_=caml_call2(CamlinternalOO[24],_zI_,_zw_);
        _zK_[1 + _zy_] = _zG_;
        _zK_[1 + _zx_] = _zH_;
        caml_call1(_zC_,_zK_);
        return caml_call3(CamlinternalOO[26],_zI_,_zK_,_zw_)}}
    var foldl_list_t=caml_call2(CamlinternalOO[19],_la_,_lk_);
    function foldl_list(fa,fl,inh0,subj)
     {var _zv_=caml_call3(foldl_list_t[1],0,fa,fl);
      return caml_call4(GT[2],gcata_ground$3,_zv_,inh0,subj)}
    function _ll_(_zd_)
     {var
       _ze_=caml_call2(CamlinternalOO[3],_zd_,cst$109),
       _zf_=caml_call2(CamlinternalOO[3],_zd_,cst$110),
       _zg_=caml_call2(CamlinternalOO[8],_zd_,_lc_),
       _zh_=_zg_[1],
       _zi_=_zg_[2],
       _zj_=caml_call6(CamlinternalOO[18],_zd_,0,_lc_,0,list_t,1)[1];
      function _zk_(self_5,inh_019,param,x_020,x_021)
       {if(! inh_019)return caml_call2(GT[12],inh_019,_lm_);
        var x_023=inh_019[2],x_022=inh_019[1];
        function _zs_(param){return caml_call2(self_5[1 + _zf_],x_023,x_021)}
        function _zt_(param){return caml_call2(self_5[1 + _ze_],x_022,x_020)}
        var _zu_=caml_call2(GT[6],1,_zt_);
        return caml_call2(GT[6],_zu_,_zs_)}
      var
       _zl_=
        [0,
         _zh_,
         function(self_5,inh_017,param)
          {return inh_017?caml_call2(GT[12],inh_017,0):1},
         _zi_,
         _zk_];
      caml_call2(CamlinternalOO[11],_zd_,_zl_);
      return function(_zq_,_zp_,_zo_,_zn_,_zm_)
       {var _zr_=caml_call2(CamlinternalOO[24],_zp_,_zd_);
        _zr_[1 + _zf_] = _zn_;
        _zr_[1 + _ze_] = _zo_;
        caml_call1(_zj_,_zr_);
        return caml_call3(CamlinternalOO[26],_zp_,_zr_,_zd_)}}
    var compare_list_t=caml_call2(CamlinternalOO[19],_la_,_ll_);
    function compare_list(fa,fl,inh0,subj)
     {var _zc_=caml_call3(compare_list_t[1],0,fa,fl);
      return caml_call4(GT[2],gcata_ground$3,_zc_,inh0,subj)}
    function _ln_(_yY_)
     {var
       _yZ_=caml_call2(CamlinternalOO[3],_yY_,cst$111),
       _y0_=caml_call2(CamlinternalOO[3],_yY_,cst$112),
       _y1_=caml_call2(CamlinternalOO[8],_yY_,_lc_),
       _y2_=_y1_[1],
       _y3_=_y1_[2],
       _y4_=caml_call6(CamlinternalOO[18],_yY_,0,_lc_,0,list_t,1)[1];
      function _y5_(self_6,inh_027,param,x_028,x_029)
       {if(! inh_027)return 0;
        var
         x_031=inh_027[2],
         x_030=inh_027[1],
         _zb_=caml_call2(self_6[1 + _yZ_],x_030,x_028);
        return _zb_?caml_call2(self_6[1 + _y0_],x_031,x_029):_zb_}
      var
       _y6_=
        [0,_y2_,function(self_6,inh_025,param){return inh_025?0:1},_y3_,_y5_];
      caml_call2(CamlinternalOO[11],_yY_,_y6_);
      return function(_y$_,_y__,_y9_,_y8_,_y7_)
       {var _za_=caml_call2(CamlinternalOO[24],_y__,_yY_);
        _za_[1 + _y0_] = _y8_;
        _za_[1 + _yZ_] = _y9_;
        caml_call1(_y4_,_za_);
        return caml_call3(CamlinternalOO[26],_y__,_za_,_yY_)}}
    var eq_list_t=caml_call2(CamlinternalOO[19],_la_,_ln_);
    function eq_list(fa,fl,inh0,subj)
     {var _yX_=caml_call3(eq_list_t[1],0,fa,fl);
      return caml_call4(GT[2],gcata_ground$3,_yX_,inh0,subj)}
    function _lo_(_yr_)
     {var
       _ys_=caml_call2(CamlinternalOO[3],_yr_,cst$113),
       _yt_=caml_call2(CamlinternalOO[3],_yr_,cst$114),
       _yu_=caml_call2(CamlinternalOO[8],_yr_,_lc_),
       _yv_=_yu_[1],
       _yw_=_yu_[2],
       _yx_=caml_call6(CamlinternalOO[18],_yr_,0,_lc_,0,list_t,1)[1];
      function _yy_(self_7,param,_yH_,x_033,x_034)
       {var
         _yI_=caml_call2(self_7[1 + _yt_],0,x_034),
         _yJ_=caml_call2(Stdlib_List[4],_yI_,0),
         _yK_=caml_call1(HTML[10],_yJ_),
         _yL_=caml_call2(HTML[25],0,_yK_),
         _yM_=caml_call2(Stdlib_List[4],_yL_,0),
         _yN_=caml_call2(self_7[1 + _ys_],0,x_033),
         _yO_=caml_call2(Stdlib_List[4],_yN_,0),
         _yP_=caml_call1(HTML[10],_yO_),
         _yQ_=caml_call2(HTML[25],0,_yP_),
         _yR_=caml_call2(Stdlib_List[4],_yQ_,_yM_),
         _yS_=caml_call1(HTML[10],_yR_),
         _yT_=caml_call2(HTML[23],0,_yS_),
         _yU_=caml_call2(Stdlib_List[4],_yT_,0),
         _yV_=caml_call1(HTML[3],cst_Cons),
         _yW_=caml_call2(Stdlib_List[4],_yV_,_yU_);
        return caml_call1(HTML[10],_yW_)}
      var
       _yz_=
        [0,
         _yv_,
         function(self_7,param,_yG_){return caml_call1(HTML[3],cst_Nil)},
         _yw_,
         _yy_];
      caml_call2(CamlinternalOO[11],_yr_,_yz_);
      return function(_yE_,_yD_,_yC_,_yB_,_yA_)
       {var _yF_=caml_call2(CamlinternalOO[24],_yD_,_yr_);
        _yF_[1 + _yt_] = _yB_;
        _yF_[1 + _ys_] = _yC_;
        caml_call1(_yx_,_yF_);
        return caml_call3(CamlinternalOO[26],_yD_,_yF_,_yr_)}}
    var html_list_t=caml_call2(CamlinternalOO[19],_la_,_lo_);
    function _lp_(fa,fl,inh0,subj)
     {var _yq_=caml_call3(html_list_t[1],0,fa,fl);
      return caml_call4(GT[2],gcata_ground$3,_yq_,inh0,subj)}
    function _lq_(_x__)
     {var
       _x$_=caml_call2(CamlinternalOO[3],_x__,cst$115),
       _ya_=caml_call2(CamlinternalOO[3],_x__,cst$116),
       _yb_=caml_call2(CamlinternalOO[8],_x__,_lc_),
       _yc_=_yb_[1],
       _yd_=_yb_[2],
       _ye_=caml_call6(CamlinternalOO[18],_x__,0,_lc_,0,list_t,1)[1];
      function _yf_(self_8,param,_yo_,x_035,x_036)
       {var _yp_=caml_call2(self_8[1 + _ya_],0,x_036);
        return [0,caml_call2(self_8[1 + _x$_],0,x_035),_yp_]}
      var _yg_=[0,_yc_,function(self_8,param,_yn_){return 0},_yd_,_yf_];
      caml_call2(CamlinternalOO[11],_x__,_yg_);
      return function(_yl_,_yk_,_yj_,_yi_,_yh_)
       {var _ym_=caml_call2(CamlinternalOO[24],_yk_,_x__);
        _ym_[1 + _ya_] = _yi_;
        _ym_[1 + _x$_] = _yj_;
        caml_call1(_ye_,_ym_);
        return caml_call3(CamlinternalOO[26],_yk_,_ym_,_x__)}}
    var gmap_list_t=caml_call2(CamlinternalOO[19],_la_,_lq_);
    function _lr_(fa,fl,inh0,subj)
     {var _x9_=caml_call3(gmap_list_t[1],0,fa,fl);
      return caml_call4(GT[2],gcata_ground$3,_x9_,inh0,subj)}
    function _ls_(_xQ_)
     {var
       _xR_=caml_call2(CamlinternalOO[3],_xQ_,cst$117),
       _xS_=caml_call2(CamlinternalOO[3],_xQ_,cst$118),
       _xT_=caml_call2(CamlinternalOO[8],_xQ_,_lc_),
       _xU_=_xT_[1],
       _xV_=_xT_[2],
       _xW_=caml_call6(CamlinternalOO[18],_xQ_,0,_lc_,0,list_t,1)[1];
      function _xX_(self_9,param,_x6_,x_037,x_038)
       {var
         _x7_=caml_call2(self_9[1 + _xS_],0,x_038),
         _x8_=caml_call2(self_9[1 + _xR_],0,x_037);
        return caml_call3(Stdlib_Printf[4],_lt_,_x8_,_x7_)}
      var
       _xY_=
        [0,_xU_,function(self_9,param,_x5_){return cst_Nil$0},_xV_,_xX_];
      caml_call2(CamlinternalOO[11],_xQ_,_xY_);
      return function(_x3_,_x2_,_x1_,_x0_,_xZ_)
       {var _x4_=caml_call2(CamlinternalOO[24],_x2_,_xQ_);
        _x4_[1 + _xS_] = _x0_;
        _x4_[1 + _xR_] = _x1_;
        caml_call1(_xW_,_x4_);
        return caml_call3(CamlinternalOO[26],_x2_,_x4_,_xQ_)}}
    var show_list_t=caml_call2(CamlinternalOO[19],_la_,_ls_);
    function _lu_(fa,fl,inh0,subj)
     {var _xP_=caml_call3(show_list_t[1],0,fa,fl);
      return caml_call4(GT[2],gcata_ground$3,_xP_,inh0,subj)}
    function _lv_(eta){return caml_call2(GT[2],gcata_ground$3,eta)}
    var
     _lw_=caml_call1(CamlinternalOO[16],_k$_),
     _lx_=caml_call2(CamlinternalOO[8],_lw_,_ld_),
     _ly_=_lx_[1],
     _lz_=_lx_[2],
     _lA_=_lx_[3],
     _lB_=_lx_[4],
     _lC_=_lx_[5],
     _lD_=_lx_[6],
     _lE_=_lx_[7],
     _lF_=_lx_[8];
    function _lG_(self_10,fa,fl,subj)
     {var _xO_=caml_call1(GT[4],fl);
      return _lu_(caml_call1(GT[4],fa),_xO_,0,subj)}
    function _lH_(self_10,fa,fl,subj)
     {var _xN_=caml_call1(GT[4],fl);
      return _lr_(caml_call1(GT[4],fa),_xN_,0,subj)}
    function _lI_(self_10,fa,fl,subj)
     {var _xM_=caml_call1(GT[4],fl);
      return _lp_(caml_call1(GT[4],fa),_xM_,0,subj)}
    function _lJ_(self_10){return eq_list}
    function _lK_(self_10){return compare_list}
    function _lL_(self_10){return foldl_list}
    function _lM_(self_10){return foldr_list}
    var
     _lN_=
      [0,
       _lD_,
       function(self_10){return fmt_list},
       _lB_,
       _lM_,
       _lC_,
       _lL_,
       _lF_,
       _lK_,
       _lE_,
       _lJ_,
       _lz_,
       _lI_,
       _lA_,
       _lH_,
       _ly_,
       _lG_];
    caml_call2(CamlinternalOO[11],_lw_,_lN_);
    caml_call1(CamlinternalOO[17],_lw_);
    var list=[0,gcata_ground$3,caml_call2(CamlinternalOO[24],0,_lw_),_lv_];
    function html_list(fa,fl,subj)
     {var _xL_=caml_call1(GT[4],fl);
      return _lp_(caml_call1(GT[4],fa),_xL_,0,subj)}
    function gmap_list(fa,fl,subj)
     {var _xK_=caml_call1(GT[4],fl);
      return _lr_(caml_call1(GT[4],fa),_xK_,0,subj)}
    function show_list(fa,fl,subj)
     {var _xJ_=caml_call1(GT[4],fl);
      return _lu_(caml_call1(GT[4],fa),_xJ_,0,subj)}
    var t_t$4=[],_lO_=0,_lP_=0;
    caml_update_dummy
     (t_t$4,
      [0,
       0,
       function(_xE_)
        {caml_call2(CamlinternalOO[8],_xE_,_lc_);
         var _xF_=caml_call6(CamlinternalOO[18],_xE_,0,_lc_,0,list_t,1)[1];
         return function(_xH_,_xG_)
          {var _xI_=caml_call2(CamlinternalOO[24],_xG_,_xE_);
           caml_call1(_xF_,_xI_);
           return caml_call3(CamlinternalOO[26],_xG_,_xI_,_xE_)}},
       _lP_,
       _lO_]);
    function _lQ_(_xv_)
     {caml_call2(CamlinternalOO[8],_xv_,_lc_);
      var
       _xw_=caml_call6(CamlinternalOO[18],_xv_,0,_lc_,0,t_t$4,1)[1],
       _xx_=caml_call6(CamlinternalOO[18],_xv_,0,0,_la_,fmt_list_t,1)[1];
      return function(_xC_,_xB_,_xA_,_xz_,_xy_)
       {var _xD_=caml_call2(CamlinternalOO[24],_xB_,_xv_);
        caml_call1(_xw_,_xD_);
        caml_call4(_xx_,_xD_,_xA_,_xz_,_xy_);
        return caml_call3(CamlinternalOO[26],_xB_,_xD_,_xv_)}}
    var fmt_t_t$4=caml_call2(CamlinternalOO[19],_la_,_lQ_);
    function fmt_t$4(fa,fl,inh_039,subj_040)
     {return caml_call5(GT[224],list,fa,fl,inh_039,subj_040)}
    function _lR_(_xm_)
     {caml_call2(CamlinternalOO[8],_xm_,_lc_);
      var
       _xn_=caml_call6(CamlinternalOO[18],_xm_,0,_lc_,0,t_t$4,1)[1],
       _xo_=caml_call6(CamlinternalOO[18],_xm_,0,0,_la_,foldr_list_t,1)[1];
      return function(_xt_,_xs_,_xr_,_xq_,_xp_)
       {var _xu_=caml_call2(CamlinternalOO[24],_xs_,_xm_);
        caml_call1(_xn_,_xu_);
        caml_call4(_xo_,_xu_,_xr_,_xq_,_xp_);
        return caml_call3(CamlinternalOO[26],_xs_,_xu_,_xm_)}}
    var foldr_t_t$4=caml_call2(CamlinternalOO[19],_la_,_lR_);
    function foldr_t$4(fa,fl,inh_041,subj_042)
     {return caml_call5(GT[226],list,fa,fl,inh_041,subj_042)}
    function _lS_(_xd_)
     {caml_call2(CamlinternalOO[8],_xd_,_lc_);
      var
       _xe_=caml_call6(CamlinternalOO[18],_xd_,0,_lc_,0,t_t$4,1)[1],
       _xf_=caml_call6(CamlinternalOO[18],_xd_,0,0,_la_,foldl_list_t,1)[1];
      return function(_xk_,_xj_,_xi_,_xh_,_xg_)
       {var _xl_=caml_call2(CamlinternalOO[24],_xj_,_xd_);
        caml_call1(_xe_,_xl_);
        caml_call4(_xf_,_xl_,_xi_,_xh_,_xg_);
        return caml_call3(CamlinternalOO[26],_xj_,_xl_,_xd_)}}
    var foldl_t_t$4=caml_call2(CamlinternalOO[19],_la_,_lS_);
    function foldl_t$4(fa,fl,inh_043,subj_044)
     {return caml_call5(GT[225],list,fa,fl,inh_043,subj_044)}
    function _lT_(_w6_)
     {caml_call2(CamlinternalOO[8],_w6_,_lc_);
      var
       _w7_=caml_call6(CamlinternalOO[18],_w6_,0,_lc_,0,t_t$4,1)[1],
       _w8_=caml_call6(CamlinternalOO[18],_w6_,0,0,_la_,compare_list_t,1)[1];
      return function(_xb_,_xa_,_w$_,_w__,_w9_)
       {var _xc_=caml_call2(CamlinternalOO[24],_xa_,_w6_);
        caml_call1(_w7_,_xc_);
        caml_call4(_w8_,_xc_,_w$_,_w__,_w9_);
        return caml_call3(CamlinternalOO[26],_xa_,_xc_,_w6_)}}
    var compare_t_t$4=caml_call2(CamlinternalOO[19],_la_,_lT_);
    function compare_t$4(fa,fl,inh,subj)
     {return caml_call5(GT[228],list,fa,fl,inh,subj)}
    function _lU_(_wX_)
     {caml_call2(CamlinternalOO[8],_wX_,_lc_);
      var
       _wY_=caml_call6(CamlinternalOO[18],_wX_,0,_lc_,0,t_t$4,1)[1],
       _wZ_=caml_call6(CamlinternalOO[18],_wX_,0,0,_la_,eq_list_t,1)[1];
      return function(_w4_,_w3_,_w2_,_w1_,_w0_)
       {var _w5_=caml_call2(CamlinternalOO[24],_w3_,_wX_);
        caml_call1(_wY_,_w5_);
        caml_call4(_wZ_,_w5_,_w2_,_w1_,_w0_);
        return caml_call3(CamlinternalOO[26],_w3_,_w5_,_wX_)}}
    var eq_t_t$4=caml_call2(CamlinternalOO[19],_la_,_lU_);
    function eq_t$4(fa,fl,inh,subj)
     {return caml_call5(GT[227],list,fa,fl,inh,subj)}
    function _lV_(_wO_)
     {caml_call2(CamlinternalOO[8],_wO_,_lc_);
      var
       _wP_=caml_call6(CamlinternalOO[18],_wO_,0,_lc_,0,t_t$4,1)[1],
       _wQ_=caml_call6(CamlinternalOO[18],_wO_,0,0,_la_,html_list_t,1)[1];
      return function(_wV_,_wU_,_wT_,_wS_,_wR_)
       {var _wW_=caml_call2(CamlinternalOO[24],_wU_,_wO_);
        caml_call1(_wP_,_wW_);
        caml_call4(_wQ_,_wW_,_wT_,_wS_,_wR_);
        return caml_call3(CamlinternalOO[26],_wU_,_wW_,_wO_)}}
    var html_t_t$3=caml_call2(CamlinternalOO[19],_la_,_lV_);
    function _lW_(fa,fl,param,subj)
     {var _wM_=caml_call1(fl,0),_wN_=caml_call1(fa,0);
      return caml_call4(GT[222],list,_wN_,_wM_,subj)}
    function _lX_(_wD_)
     {caml_call2(CamlinternalOO[8],_wD_,_lc_);
      var
       _wE_=caml_call6(CamlinternalOO[18],_wD_,0,_lc_,0,t_t$4,1)[1],
       _wF_=caml_call6(CamlinternalOO[18],_wD_,0,0,_la_,gmap_list_t,1)[1];
      return function(_wK_,_wJ_,_wI_,_wH_,_wG_)
       {var _wL_=caml_call2(CamlinternalOO[24],_wJ_,_wD_);
        caml_call1(_wE_,_wL_);
        caml_call4(_wF_,_wL_,_wI_,_wH_,_wG_);
        return caml_call3(CamlinternalOO[26],_wJ_,_wL_,_wD_)}}
    var gmap_t_t$4=caml_call2(CamlinternalOO[19],_la_,_lX_);
    function _lY_(fa,fl,param,subj)
     {var _wB_=caml_call1(fl,0),_wC_=caml_call1(fa,0);
      return caml_call4(GT[223],list,_wC_,_wB_,subj)}
    function _lZ_(_ws_)
     {caml_call2(CamlinternalOO[8],_ws_,_lc_);
      var
       _wt_=caml_call6(CamlinternalOO[18],_ws_,0,_lc_,0,t_t$4,1)[1],
       _wu_=caml_call6(CamlinternalOO[18],_ws_,0,0,_la_,show_list_t,1)[1];
      return function(_wz_,_wy_,_wx_,_ww_,_wv_)
       {var _wA_=caml_call2(CamlinternalOO[24],_wy_,_ws_);
        caml_call1(_wt_,_wA_);
        caml_call4(_wu_,_wA_,_wx_,_ww_,_wv_);
        return caml_call3(CamlinternalOO[26],_wy_,_wA_,_ws_)}}
    var show_t_t$4=caml_call2(CamlinternalOO[19],_la_,_lZ_);
    function _l0_(fa,fl,param,subj)
     {var _wq_=caml_call1(fl,0),_wr_=caml_call1(fa,0);
      return caml_call4(GT[221],list,_wr_,_wq_,subj)}
    function _l1_(eta){return caml_call2(GT[2],gcata_ground$3,eta)}
    var
     _l2_=caml_call1(CamlinternalOO[16],_k$_),
     _l3_=caml_call2(CamlinternalOO[8],_l2_,_ld_),
     _l4_=_l3_[1],
     _l5_=_l3_[2],
     _l6_=_l3_[3],
     _l7_=_l3_[4],
     _l8_=_l3_[5],
     _l9_=_l3_[6],
     _l__=_l3_[7],
     _l$_=_l3_[8];
    function _ma_(self_20,fa,fl,subj)
     {var _wp_=caml_call1(GT[4],fl);
      return _l0_(caml_call1(GT[4],fa),_wp_,0,subj)}
    function _mb_(self_20,fa,fl,subj)
     {var _wo_=caml_call1(GT[4],fl);
      return _lY_(caml_call1(GT[4],fa),_wo_,0,subj)}
    function _mc_(self_20,fa,fl,subj)
     {var _wn_=caml_call1(GT[4],fl);
      return _lW_(caml_call1(GT[4],fa),_wn_,0,subj)}
    function _md_(self_20){return eq_t$4}
    function _me_(self_20){return compare_t$4}
    function _mf_(self_20){return foldl_t$4}
    function _mg_(self_20){return foldr_t$4}
    var
     _mh_=
      [0,
       _l9_,
       function(self_20){return fmt_t$4},
       _l7_,
       _mg_,
       _l8_,
       _mf_,
       _l$_,
       _me_,
       _l__,
       _md_,
       _l5_,
       _mc_,
       _l6_,
       _mb_,
       _l4_,
       _ma_];
    caml_call2(CamlinternalOO[11],_l2_,_mh_);
    caml_call1(CamlinternalOO[17],_l2_);
    var t$3=[0,gcata_ground$3,caml_call2(CamlinternalOO[24],0,_l2_),_l1_];
    function html_t$3(fa,fl,subj)
     {var _wm_=caml_call1(GT[4],fl);
      return _lW_(caml_call1(GT[4],fa),_wm_,0,subj)}
    function gmap_t$4(fa,fl,subj)
     {var _wl_=caml_call1(GT[4],fl);
      return _lY_(caml_call1(GT[4],fa),_wl_,0,subj)}
    function show_t$4(fa,fl,subj)
     {var _wk_=caml_call1(GT[4],fl);
      return _l0_(caml_call1(GT[4],fa),_wk_,0,subj)}
    var ground_t$4=[],_mi_=0,_mj_=0;
    caml_update_dummy
     (ground_t$4,
      [0,
       0,
       function(_wf_)
        {caml_call2(CamlinternalOO[8],_wf_,_lc_);
         var _wg_=caml_call6(CamlinternalOO[18],_wf_,0,_lc_,0,t_t$4,1)[1];
         return function(_wi_,_wh_)
          {var _wj_=caml_call2(CamlinternalOO[24],_wh_,_wf_);
           caml_call1(_wg_,_wj_);
           return caml_call3(CamlinternalOO[26],_wh_,_wj_,_wf_)}},
       _mj_,
       _mi_]);
    function _mk_(_v9_)
     {caml_call2(CamlinternalOO[8],_v9_,_lc_);
      var
       _v__=caml_call6(CamlinternalOO[18],_v9_,0,_lc_,0,ground_t$4,1)[1],
       _v$_=caml_call6(CamlinternalOO[18],_v9_,0,0,_la_,fmt_t_t$4,1)[1];
      return function(_wd_,_wc_,_wb_,_wa_)
       {var _we_=caml_call2(CamlinternalOO[24],_wc_,_v9_);
        caml_call1(_v__,_we_);
        caml_call4(_v$_,_we_,_wb_,_wa_,_wa_);
        return caml_call3(CamlinternalOO[26],_wc_,_we_,_v9_)}}
    var fmt_ground_t$4=caml_call2(CamlinternalOO[19],_la_,_mk_);
    function fmt_ground$4(fa,inh_045,subj_046)
     {function _v6_(_v7_,_v8_){return fmt_ground$4(fa,_v7_,_v8_)}
      return caml_call5(GT[224],t$3,fa,_v6_,inh_045,subj_046)}
    function _ml_(_vY_)
     {caml_call2(CamlinternalOO[8],_vY_,_lc_);
      var
       _vZ_=caml_call6(CamlinternalOO[18],_vY_,0,_lc_,0,ground_t$4,1)[1],
       _v0_=caml_call6(CamlinternalOO[18],_vY_,0,0,_la_,foldr_t_t$4,1)[1];
      return function(_v4_,_v3_,_v2_,_v1_)
       {var _v5_=caml_call2(CamlinternalOO[24],_v3_,_vY_);
        caml_call1(_vZ_,_v5_);
        caml_call4(_v0_,_v5_,_v2_,_v1_,_v1_);
        return caml_call3(CamlinternalOO[26],_v3_,_v5_,_vY_)}}
    var foldr_ground_t$4=caml_call2(CamlinternalOO[19],_la_,_ml_);
    function foldr_ground$4(fa,inh_047,subj_048)
     {function _vV_(_vW_,_vX_){return foldr_ground$4(fa,_vW_,_vX_)}
      return caml_call5(GT[226],t$3,fa,_vV_,inh_047,subj_048)}
    function _mm_(_vN_)
     {caml_call2(CamlinternalOO[8],_vN_,_lc_);
      var
       _vO_=caml_call6(CamlinternalOO[18],_vN_,0,_lc_,0,ground_t$4,1)[1],
       _vP_=caml_call6(CamlinternalOO[18],_vN_,0,0,_la_,foldl_t_t$4,1)[1];
      return function(_vT_,_vS_,_vR_,_vQ_)
       {var _vU_=caml_call2(CamlinternalOO[24],_vS_,_vN_);
        caml_call1(_vO_,_vU_);
        caml_call4(_vP_,_vU_,_vR_,_vQ_,_vQ_);
        return caml_call3(CamlinternalOO[26],_vS_,_vU_,_vN_)}}
    var foldl_ground_t$4=caml_call2(CamlinternalOO[19],_la_,_mm_);
    function foldl_ground$4(fa,inh_049,subj_050)
     {function _vK_(_vL_,_vM_){return foldl_ground$4(fa,_vL_,_vM_)}
      return caml_call5(GT[225],t$3,fa,_vK_,inh_049,subj_050)}
    function _mn_(_vC_)
     {caml_call2(CamlinternalOO[8],_vC_,_lc_);
      var
       _vD_=caml_call6(CamlinternalOO[18],_vC_,0,_lc_,0,ground_t$4,1)[1],
       _vE_=caml_call6(CamlinternalOO[18],_vC_,0,0,_la_,compare_t_t$4,1)[1];
      return function(_vI_,_vH_,_vG_,_vF_)
       {var _vJ_=caml_call2(CamlinternalOO[24],_vH_,_vC_);
        caml_call1(_vD_,_vJ_);
        caml_call4(_vE_,_vJ_,_vG_,_vF_,_vF_);
        return caml_call3(CamlinternalOO[26],_vH_,_vJ_,_vC_)}}
    var compare_ground_t$4=caml_call2(CamlinternalOO[19],_la_,_mn_);
    function compare_ground$4(fa,inh,subj)
     {function _vz_(_vA_,_vB_){return compare_ground$4(fa,_vA_,_vB_)}
      return caml_call5(GT[228],t$3,fa,_vz_,inh,subj)}
    function _mo_(_vr_)
     {caml_call2(CamlinternalOO[8],_vr_,_lc_);
      var
       _vs_=caml_call6(CamlinternalOO[18],_vr_,0,_lc_,0,ground_t$4,1)[1],
       _vt_=caml_call6(CamlinternalOO[18],_vr_,0,0,_la_,eq_t_t$4,1)[1];
      return function(_vx_,_vw_,_vv_,_vu_)
       {var _vy_=caml_call2(CamlinternalOO[24],_vw_,_vr_);
        caml_call1(_vs_,_vy_);
        caml_call4(_vt_,_vy_,_vv_,_vu_,_vu_);
        return caml_call3(CamlinternalOO[26],_vw_,_vy_,_vr_)}}
    var eq_ground_t$4=caml_call2(CamlinternalOO[19],_la_,_mo_);
    function eq_ground$4(fa,inh,subj)
     {function _vo_(_vp_,_vq_){return eq_ground$4(fa,_vp_,_vq_)}
      return caml_call5(GT[227],t$3,fa,_vo_,inh,subj)}
    function _mp_(_vg_)
     {caml_call2(CamlinternalOO[8],_vg_,_lc_);
      var
       _vh_=caml_call6(CamlinternalOO[18],_vg_,0,_lc_,0,ground_t$4,1)[1],
       _vi_=caml_call6(CamlinternalOO[18],_vg_,0,0,_la_,html_t_t$3,1)[1];
      return function(_vm_,_vl_,_vk_,_vj_)
       {var _vn_=caml_call2(CamlinternalOO[24],_vl_,_vg_);
        caml_call1(_vh_,_vn_);
        caml_call4(_vi_,_vn_,_vk_,_vj_,_vj_);
        return caml_call3(CamlinternalOO[26],_vl_,_vn_,_vg_)}}
    var html_ground_t$3=caml_call2(CamlinternalOO[19],_la_,_mp_);
    function _mq_(fa,param,subj)
     {var _vc_=0;
      function _vd_(_vf_){return _mq_(fa,_vc_,_vf_)}
      var _ve_=caml_call1(fa,0);
      return caml_call4(GT[222],t$3,_ve_,_vd_,subj)}
    function _mr_(_u6_)
     {caml_call2(CamlinternalOO[8],_u6_,_lc_);
      var
       _u7_=caml_call6(CamlinternalOO[18],_u6_,0,_lc_,0,ground_t$4,1)[1],
       _u8_=caml_call6(CamlinternalOO[18],_u6_,0,0,_la_,gmap_t_t$4,1)[1];
      return function(_va_,_u$_,_u__,_u9_)
       {var _vb_=caml_call2(CamlinternalOO[24],_u$_,_u6_);
        caml_call1(_u7_,_vb_);
        caml_call4(_u8_,_vb_,_u__,_u9_,_u9_);
        return caml_call3(CamlinternalOO[26],_u$_,_vb_,_u6_)}}
    var gmap_ground_t$4=caml_call2(CamlinternalOO[19],_la_,_mr_);
    function _ms_(fa,param,subj)
     {var _u2_=0;
      function _u3_(_u5_){return _ms_(fa,_u2_,_u5_)}
      var _u4_=caml_call1(fa,0);
      return caml_call4(GT[223],t$3,_u4_,_u3_,subj)}
    function _mt_(_uU_)
     {caml_call2(CamlinternalOO[8],_uU_,_lc_);
      var
       _uV_=caml_call6(CamlinternalOO[18],_uU_,0,_lc_,0,ground_t$4,1)[1],
       _uW_=caml_call6(CamlinternalOO[18],_uU_,0,0,_la_,show_t_t$4,1)[1];
      return function(_u0_,_uZ_,_uY_,_uX_)
       {var _u1_=caml_call2(CamlinternalOO[24],_uZ_,_uU_);
        caml_call1(_uV_,_u1_);
        caml_call4(_uW_,_u1_,_uY_,_uX_,_uX_);
        return caml_call3(CamlinternalOO[26],_uZ_,_u1_,_uU_)}}
    var show_ground_t$4=caml_call2(CamlinternalOO[19],_la_,_mt_);
    function _mu_(fa,param,subj)
     {var _uQ_=0;
      function _uR_(_uT_){return _mu_(fa,_uQ_,_uT_)}
      var _uS_=caml_call1(fa,0);
      return caml_call4(GT[221],t$3,_uS_,_uR_,subj)}
    function _mv_(eta){return caml_call2(GT[2],gcata_ground$3,eta)}
    var
     _mw_=caml_call1(CamlinternalOO[16],_k$_),
     _mx_=caml_call2(CamlinternalOO[8],_mw_,_ld_),
     _my_=_mx_[1],
     _mz_=_mx_[2],
     _mA_=_mx_[3],
     _mB_=_mx_[4],
     _mC_=_mx_[5],
     _mD_=_mx_[6],
     _mE_=_mx_[7],
     _mF_=_mx_[8];
    function _mG_(self_30,fa,subj){return _mu_(caml_call1(GT[4],fa),0,subj)}
    function _mH_(self_30,fa,subj){return _ms_(caml_call1(GT[4],fa),0,subj)}
    function _mI_(self_30,fa,subj){return _mq_(caml_call1(GT[4],fa),0,subj)}
    function _mJ_(self_30){return eq_ground$4}
    function _mK_(self_30){return compare_ground$4}
    function _mL_(self_30){return foldl_ground$4}
    function _mM_(self_30){return foldr_ground$4}
    var
     _mN_=
      [0,
       _mD_,
       function(self_30){return fmt_ground$4},
       _mB_,
       _mM_,
       _mC_,
       _mL_,
       _mF_,
       _mK_,
       _mE_,
       _mJ_,
       _mz_,
       _mI_,
       _mA_,
       _mH_,
       _my_,
       _mG_];
    caml_call2(CamlinternalOO[11],_mw_,_mN_);
    caml_call1(CamlinternalOO[17],_mw_);
    var _mO_=[0,gcata_ground$3,caml_call2(CamlinternalOO[24],0,_mw_),_mv_];
    function html_ground$3(fa,subj){return _mq_(caml_call1(GT[4],fa),0,subj)}
    function gmap_ground$4(fa,subj){return _ms_(caml_call1(GT[4],fa),0,subj)}
    function show_ground$4(fa,subj){return _mu_(caml_call1(GT[4],fa),0,subj)}
    var logic_t$7=[],_mP_=0,_mQ_=0;
    caml_update_dummy
     (logic_t$7,
      [0,
       0,
       function(_uL_)
        {caml_call2(CamlinternalOO[8],_uL_,shared$5);
         var
          _uM_=
           caml_call6(CamlinternalOO[18],_uL_,0,shared$5,0,logic_t,1)[1];
         return function(_uO_,_uN_)
          {var _uP_=caml_call2(CamlinternalOO[24],_uN_,_uL_);
           caml_call1(_uM_,_uP_);
           return caml_call3(CamlinternalOO[26],_uN_,_uP_,_uL_)}},
       _mQ_,
       _mP_]);
    function _mR_(_uD_)
     {caml_call2(CamlinternalOO[8],_uD_,shared$5);
      var
       _uE_=caml_call6(CamlinternalOO[18],_uD_,0,shared$5,0,logic_t$7,1)[1],
       _uF_=caml_call6(CamlinternalOO[18],_uD_,0,0,_lb_,fmt_logic_t,1)[1];
      return function(_uJ_,_uI_,_uH_,_uG_)
       {var _uK_=caml_call2(CamlinternalOO[24],_uI_,_uD_);
        caml_call1(_uE_,_uK_);
        caml_call3
         (_uF_,
          _uK_,
          function(inh_055,subj_056)
           {return caml_call5(GT[224],t$3,_uH_,_uG_,inh_055,subj_056)},
          _uG_);
        return caml_call3(CamlinternalOO[26],_uI_,_uK_,_uD_)}}
    var fmt_logic_t$7=caml_call2(CamlinternalOO[19],_lb_,_mR_);
    function fmt_logic$7(fa,inh_051,subj_052)
     {function _uz_(inh_053,subj_054)
       {function _uA_(_uB_,_uC_){return fmt_logic$7(fa,_uB_,_uC_)}
        return caml_call5(GT[224],t$3,fa,_uA_,inh_053,subj_054)}
      return caml_call4(GT[224],logic,_uz_,inh_051,subj_052)}
    function _mS_(_ur_)
     {caml_call2(CamlinternalOO[8],_ur_,shared$5);
      var
       _us_=caml_call6(CamlinternalOO[18],_ur_,0,shared$5,0,logic_t$7,1)[1],
       _ut_=caml_call6(CamlinternalOO[18],_ur_,0,0,_lb_,foldr_logic_t,1)[1];
      return function(_ux_,_uw_,_uv_,_uu_)
       {var _uy_=caml_call2(CamlinternalOO[24],_uw_,_ur_);
        caml_call1(_us_,_uy_);
        caml_call3
         (_ut_,
          _uy_,
          function(inh_061,subj_062)
           {return caml_call5(GT[226],t$3,_uv_,_uu_,inh_061,subj_062)},
          _uu_);
        return caml_call3(CamlinternalOO[26],_uw_,_uy_,_ur_)}}
    var foldr_logic_t$7=caml_call2(CamlinternalOO[19],_lb_,_mS_);
    function foldr_logic$7(fa,inh_057,subj_058)
     {function _un_(inh_059,subj_060)
       {function _uo_(_up_,_uq_){return foldr_logic$7(fa,_up_,_uq_)}
        return caml_call5(GT[226],t$3,fa,_uo_,inh_059,subj_060)}
      return caml_call4(GT[226],logic,_un_,inh_057,subj_058)}
    function _mT_(_uf_)
     {caml_call2(CamlinternalOO[8],_uf_,shared$5);
      var
       _ug_=caml_call6(CamlinternalOO[18],_uf_,0,shared$5,0,logic_t$7,1)[1],
       _uh_=caml_call6(CamlinternalOO[18],_uf_,0,0,_lb_,foldl_logic_t,1)[1];
      return function(_ul_,_uk_,_uj_,_ui_)
       {var _um_=caml_call2(CamlinternalOO[24],_uk_,_uf_);
        caml_call1(_ug_,_um_);
        caml_call3
         (_uh_,
          _um_,
          function(inh_067,subj_068)
           {return caml_call5(GT[225],t$3,_uj_,_ui_,inh_067,subj_068)},
          _ui_);
        return caml_call3(CamlinternalOO[26],_uk_,_um_,_uf_)}}
    var foldl_logic_t$7=caml_call2(CamlinternalOO[19],_lb_,_mT_);
    function foldl_logic$7(fa,inh_063,subj_064)
     {function _ub_(inh_065,subj_066)
       {function _uc_(_ud_,_ue_){return foldl_logic$7(fa,_ud_,_ue_)}
        return caml_call5(GT[225],t$3,fa,_uc_,inh_065,subj_066)}
      return caml_call4(GT[225],logic,_ub_,inh_063,subj_064)}
    function _mU_(_t5_)
     {caml_call2(CamlinternalOO[8],_t5_,shared$5);
      var
       _t6_=caml_call6(CamlinternalOO[18],_t5_,0,shared$5,0,logic_t$7,1)[1],
       _t7_=caml_call6(CamlinternalOO[18],_t5_,0,0,_lb_,compare_logic_t,1)[1];
      return function(_t$_,_t__,_t9_,_t8_)
       {var _ua_=caml_call2(CamlinternalOO[24],_t__,_t5_);
        caml_call1(_t6_,_ua_);
        caml_call3
         (_t7_,
          _ua_,
          function(inh,subj)
           {return caml_call5(GT[228],t$3,_t9_,_t8_,inh,subj)},
          _t8_);
        return caml_call3(CamlinternalOO[26],_t__,_ua_,_t5_)}}
    var compare_logic_t$7=caml_call2(CamlinternalOO[19],_lb_,_mU_);
    function compare_logic$7(fa,inh,subj)
     {function _t1_(inh,subj)
       {function _t2_(_t3_,_t4_){return compare_logic$7(fa,_t3_,_t4_)}
        return caml_call5(GT[228],t$3,fa,_t2_,inh,subj)}
      return caml_call4(GT[228],logic,_t1_,inh,subj)}
    function _mV_(_tT_)
     {caml_call2(CamlinternalOO[8],_tT_,shared$5);
      var
       _tU_=caml_call6(CamlinternalOO[18],_tT_,0,shared$5,0,logic_t$7,1)[1],
       _tV_=caml_call6(CamlinternalOO[18],_tT_,0,0,_lb_,eq_logic_t,1)[1];
      return function(_tZ_,_tY_,_tX_,_tW_)
       {var _t0_=caml_call2(CamlinternalOO[24],_tY_,_tT_);
        caml_call1(_tU_,_t0_);
        caml_call3
         (_tV_,
          _t0_,
          function(inh,subj)
           {return caml_call5(GT[227],t$3,_tX_,_tW_,inh,subj)},
          _tW_);
        return caml_call3(CamlinternalOO[26],_tY_,_t0_,_tT_)}}
    var eq_logic_t$7=caml_call2(CamlinternalOO[19],_lb_,_mV_);
    function eq_logic$7(fa,inh,subj)
     {function _tP_(inh,subj)
       {function _tQ_(_tR_,_tS_){return eq_logic$7(fa,_tR_,_tS_)}
        return caml_call5(GT[227],t$3,fa,_tQ_,inh,subj)}
      return caml_call4(GT[227],logic,_tP_,inh,subj)}
    function _mW_(_tF_)
     {caml_call2(CamlinternalOO[8],_tF_,shared$5);
      var
       _tG_=caml_call6(CamlinternalOO[18],_tF_,0,shared$5,0,logic_t$7,1)[1],
       _tH_=caml_call6(CamlinternalOO[18],_tF_,0,0,_lb_,html_logic_t,1)[1];
      return function(_tL_,_tK_,_tJ_,_tI_)
       {var _tM_=caml_call2(CamlinternalOO[24],_tK_,_tF_);
        caml_call1(_tG_,_tM_);
        caml_call3
         (_tH_,
          _tM_,
          function(param,subj)
           {var _tN_=caml_call1(_tI_,0),_tO_=caml_call1(_tJ_,0);
            return caml_call4(GT[222],t$3,_tO_,_tN_,subj)},
          _tI_);
        return caml_call3(CamlinternalOO[26],_tK_,_tM_,_tF_)}}
    var html_logic_t$6=caml_call2(CamlinternalOO[19],_lb_,_mW_);
    function _mX_(fa,param,subj)
     {function _tA_(subj)
       {var _tB_=0;
        function _tC_(_tE_){return _mX_(fa,_tB_,_tE_)}
        var _tD_=caml_call1(fa,0);
        return caml_call4(GT[222],t$3,_tD_,_tC_,subj)}
      return caml_call3(GT[222],logic,_tA_,subj)}
    function _mY_(_tq_)
     {caml_call2(CamlinternalOO[8],_tq_,shared$5);
      var
       _tr_=caml_call6(CamlinternalOO[18],_tq_,0,shared$5,0,logic_t$7,1)[1],
       _ts_=caml_call6(CamlinternalOO[18],_tq_,0,0,_lb_,gmap_logic_t,1)[1];
      return function(_tw_,_tv_,_tu_,_tt_)
       {var _tx_=caml_call2(CamlinternalOO[24],_tv_,_tq_);
        caml_call1(_tr_,_tx_);
        caml_call3
         (_ts_,
          _tx_,
          function(param,subj)
           {var _ty_=caml_call1(_tt_,0),_tz_=caml_call1(_tu_,0);
            return caml_call4(GT[223],t$3,_tz_,_ty_,subj)},
          _tt_);
        return caml_call3(CamlinternalOO[26],_tv_,_tx_,_tq_)}}
    var gmap_logic_t$7=caml_call2(CamlinternalOO[19],_lb_,_mY_);
    function _mZ_(fa,param,subj)
     {function _tl_(subj)
       {var _tm_=0;
        function _tn_(_tp_){return _mZ_(fa,_tm_,_tp_)}
        var _to_=caml_call1(fa,0);
        return caml_call4(GT[223],t$3,_to_,_tn_,subj)}
      return caml_call3(GT[223],logic,_tl_,subj)}
    function _m0_(_tb_)
     {caml_call2(CamlinternalOO[8],_tb_,shared$5);
      var
       _tc_=caml_call6(CamlinternalOO[18],_tb_,0,shared$5,0,logic_t$7,1)[1],
       _td_=caml_call6(CamlinternalOO[18],_tb_,0,0,_lb_,show_logic_t,1)[1];
      return function(_th_,_tg_,_tf_,_te_)
       {var _ti_=caml_call2(CamlinternalOO[24],_tg_,_tb_);
        caml_call1(_tc_,_ti_);
        caml_call3
         (_td_,
          _ti_,
          function(param,subj)
           {var _tj_=caml_call1(_te_,0),_tk_=caml_call1(_tf_,0);
            return caml_call4(GT[221],t$3,_tk_,_tj_,subj)},
          _te_);
        return caml_call3(CamlinternalOO[26],_tg_,_ti_,_tb_)}}
    var show_logic_t$7=caml_call2(CamlinternalOO[19],_lb_,_m0_);
    function _m1_(fa,param,subj)
     {function _s8_(subj)
       {var _s9_=0;
        function _s__(_ta_){return _m1_(fa,_s9_,_ta_)}
        var _s$_=caml_call1(fa,0);
        return caml_call4(GT[221],t$3,_s$_,_s__,subj)}
      return caml_call3(GT[221],logic,_s8_,subj)}
    function _m2_(eta){return caml_call2(GT[2],gcata_logic,eta)}
    var
     _m3_=caml_call1(CamlinternalOO[16],_k$_),
     _m4_=caml_call2(CamlinternalOO[8],_m3_,_ld_),
     _m5_=_m4_[1],
     _m6_=_m4_[2],
     _m7_=_m4_[3],
     _m8_=_m4_[4],
     _m9_=_m4_[5],
     _m__=_m4_[6],
     _m$_=_m4_[7],
     _na_=_m4_[8];
    function _nb_(self_40,fa,subj){return _m1_(caml_call1(GT[4],fa),0,subj)}
    function _nc_(self_40,fa,subj){return _mZ_(caml_call1(GT[4],fa),0,subj)}
    function _nd_(self_40,fa,subj){return _mX_(caml_call1(GT[4],fa),0,subj)}
    function _ne_(self_40){return eq_logic$7}
    function _nf_(self_40){return compare_logic$7}
    function _ng_(self_40){return foldl_logic$7}
    function _nh_(self_40){return foldr_logic$7}
    var
     _ni_=
      [0,
       _m__,
       function(self_40){return fmt_logic$7},
       _m8_,
       _nh_,
       _m9_,
       _ng_,
       _na_,
       _nf_,
       _m$_,
       _ne_,
       _m6_,
       _nd_,
       _m7_,
       _nc_,
       _m5_,
       _nb_];
    caml_call2(CamlinternalOO[11],_m3_,_ni_);
    caml_call1(CamlinternalOO[17],_m3_);
    caml_call2(CamlinternalOO[24],0,_m3_);
    function html_logic$4(fa,subj){return _mX_(caml_call1(GT[4],fa),0,subj)}
    function gmap_logic$5(fa,subj){return _mZ_(caml_call1(GT[4],fa),0,subj)}
    function show_logic$5(fa,subj){return _m1_(caml_call1(GT[4],fa),0,subj)}
    var
     _nk_=[0,0,0,0],
     _nj_=_mO_[3],
     _nl_=caml_call1(CamlinternalOO[16],_k$_),
     _nm_=caml_call2(CamlinternalOO[8],_nl_,_ld_),
     _no_=_nm_[2],
     _np_=_nm_[3],
     _nq_=_nm_[4],
     _nr_=_nm_[5],
     _nt_=_nm_[7],
     _nu_=_nm_[8],
     _nn_=_nm_[1],
     _ns_=_nm_[6];
    function _nv_(self_41,fa,l)
     {function inner(l)
       {var _sN_=0;
        function _sO_(fself)
         {if(! _nk_[1])
           {var
             _sP_=caml_call1(CamlinternalOO[16],_la_),
             _sQ_=caml_call2(CamlinternalOO[3],_sP_,cst$119),
             _sR_=caml_call2(CamlinternalOO[8],_sP_,_lc_),
             _sS_=_sR_[1],
             _sT_=_sR_[2],
             _sU_=
              caml_call6(CamlinternalOO[18],_sP_,0,0,_la_,show_list_t,0)[1],
             _sV_=
              function(self_42,i,s,x,xs)
               {var env=self_42[1 + _sQ_];
                if(xs)
                 var
                  _s5_=caml_call1(env[2],xs),
                  _s6_=caml_call2(Stdlib[28],cst$120,_s5_);
                else
                 var _s6_=cst$121;
                var _s7_=caml_call1(env[1],x);
                return caml_call2(Stdlib[28],_s7_,_s6_)},
             _sW_=
              [0,_sS_,function(self_42,param,_s4_){return cst$122},_sT_,_sV_];
            caml_call2(CamlinternalOO[11],_sP_,_sW_);
            var
             _sX_=
              function(_sY_)
               {var
                 _sZ_=_sY_[1],
                 _s0_=_sZ_[1],
                 self=caml_call2(CamlinternalOO[24],0,_sP_),
                 _s1_=_sZ_[4],
                 _s2_=caml_call1(GT[4],_sZ_[3]),
                 _s3_=caml_call1(GT[4],_sZ_[2]);
                caml_call5(_sU_,_sY_[2],self,_s3_,_s2_,_s1_);
                self[1 + _sQ_] = _s0_;
                return caml_call3(CamlinternalOO[26],0,self,_sP_)};
            caml_call1(CamlinternalOO[17],_sP_);
            _nk_[1] = _sX_}
          return caml_call1
                  (_nk_[1],[0,[0,[0,fa,inner],fa,inner,fself],show_list_t[4]])}
        return caml_call4(GT[3],list,_sO_,_sN_,l)}
      var _sL_=inner(l),_sM_=caml_call2(Stdlib[28],_sL_,cst$123);
      return caml_call2(Stdlib[28],cst$124,_sM_)}
    function _nw_(self_41,fa,fmt,xs)
     {caml_call2(Stdlib_Format[129],fmt,_nx_);
      var _sJ_=0;
      function _sK_(param){return caml_call3(Stdlib_Format[129],fmt,_ny_,fa)}
      caml_call4(GT[225],_mO_,_sK_,_sJ_,xs);
      return caml_call2(Stdlib_Format[129],fmt,_nz_)}
    function _nA_(self_41,fa,l)
     {var _sI_=caml_call2(self_41[1][1 + _np_],self_41,fa);
      return caml_call4(GT[223],list,fa,_sI_,l)}
    function _nB_(self_41,fa,l)
     {var _sH_=caml_call2(self_41[1][1 + _nr_],self_41,fa);
      return caml_call4(GT[225],list,fa,_sH_,l)}
    function _nC_(self_41,fa,l)
     {var _sG_=caml_call2(self_41[1][1 + _nq_],self_41,fa);
      return caml_call4(GT[226],list,fa,_sG_,l)}
    function _nD_(self_41,fa,l)
     {var _sF_=caml_call2(self_41[1][1 + _nu_],self_41,fa);
      return caml_call4(GT[228],list,fa,_sF_,l)}
    function _nE_(self_41,fa,l)
     {var _sE_=caml_call2(self_41[1][1 + _nt_],self_41,fa);
      return caml_call4(GT[227],list,fa,_sE_,l)}
    var
     _nF_=
      [0,
       _no_,
       function(self_41,fa,l)
        {var _sD_=caml_call2(self_41[1][1 + _no_],self_41,fa);
         return caml_call4(GT[222],list,fa,_sD_,l)},
       _nt_,
       _nE_,
       _nu_,
       _nD_,
       _nq_,
       _nC_,
       _nr_,
       _nB_,
       _np_,
       _nA_,
       _ns_,
       _nw_,
       _nn_,
       _nv_];
    caml_call2(CamlinternalOO[11],_nl_,_nF_);
    caml_call1(CamlinternalOO[17],_nl_);
    var
     _nG_=caml_call2(CamlinternalOO[24],0,_nl_),
     ground$4=[0,_mO_[1],_nG_,_nj_],
     _nH_=[0,0,0,0],
     _nI_=caml_call1(CamlinternalOO[16],_k$_),
     _nJ_=caml_call2(CamlinternalOO[8],_nI_,_ld_),
     _nK_=_nJ_[1],
     _nL_=_nJ_[2],
     _nM_=_nJ_[3],
     _nN_=_nJ_[4],
     _nO_=_nJ_[5],
     _nQ_=_nJ_[7],
     _nR_=_nJ_[8],
     _nP_=_nJ_[6];
    function _nS_(self_43,fa,l)
     {function _se_(l)
       {function inner(l)
         {var _sh_=0;
          function _si_(fself)
           {if(! _nH_[1])
             {var
               _sj_=caml_call1(CamlinternalOO[16],_la_),
               _sk_=caml_call2(CamlinternalOO[3],_sj_,cst$125),
               _sl_=caml_call2(CamlinternalOO[8],_sj_,_lc_),
               _sm_=_sl_[1],
               _sn_=_sl_[2],
               _so_=
                caml_call6(CamlinternalOO[18],_sj_,0,0,_la_,show_t_t$4,0)[1],
               _sp_=
                function(self_44,i,s,x,xs)
                 {var env=self_44[1 + _sk_],switch$0=0;
                  if(1 === xs[0] && ! xs[1]){var _sB_=cst$127;switch$0 = 1}
                  if(! switch$0)
                   var
                    _sA_=caml_call3(GT[221],logic,env[2],xs),
                    _sB_=caml_call2(Stdlib[28],cst$126,_sA_);
                  var _sC_=caml_call1(env[1],x);
                  return caml_call2(Stdlib[28],_sC_,_sB_)},
               _sq_=
                [0,
                 _sm_,
                 function(self_44,param,_sz_){return cst$128},
                 _sn_,
                 _sp_];
              caml_call2(CamlinternalOO[11],_sj_,_sq_);
              var
               _sr_=
                function(_ss_)
                 {var
                   _st_=_ss_[1],
                   _su_=_st_[1],
                   self=caml_call2(CamlinternalOO[24],0,_sj_),
                   _sv_=_st_[4],
                   _sw_=caml_call2(GT[221],logic,_st_[3]),
                   _sx_=caml_call1(GT[4],_sw_),
                   _sy_=caml_call1(GT[4],_st_[2]);
                  caml_call5(_so_,_ss_[2],self,_sy_,_sx_,_sv_);
                  self[1 + _sk_] = _su_;
                  return caml_call3(CamlinternalOO[26],0,self,_sj_)};
              caml_call1(CamlinternalOO[17],_sj_);
              _nH_[1] = _sr_}
            return caml_call1
                    (_nH_[1],[0,[0,[0,fa,inner],fa,inner,fself],show_t_t$4[4]])}
          return caml_call4(GT[3],t$3,_si_,_sh_,l)}
        var _sf_=inner(l),_sg_=caml_call2(Stdlib[28],_sf_,cst$129);
        return caml_call2(Stdlib[28],cst$130,_sg_)}
      return caml_call3(GT[221],logic,_se_,l)}
    function _nT_(self_43,fa,fmt,l)
     {var
       _sc_=caml_call2(Stdlib_Format[133],_nU_,fa),
       _sd_=caml_call3(self_43[1][1 + _nK_],self_43,_sc_,l);
      return caml_call3(Stdlib_Format[129],fmt,_nV_,_sd_)}
    function _nW_(self_43,fa,l)
     {var
       _sa_=caml_call2(self_43[1][1 + _nL_],self_43,fa),
       _sb_=caml_call3(GT[222],list,fa,_sa_);
      return caml_call3(GT[222],logic,_sb_,l)}
    function _nX_(self_43,fa,l)
     {var
       _r__=caml_call2(self_43[1][1 + _nN_],self_43,fa),
       _r$_=caml_call3(GT[226],list,fa,_r__);
      return caml_call3(GT[226],logic,_r$_,l)}
    function _nY_(self_43,fa,l)
     {var
       _r8_=caml_call2(self_43[1][1 + _nO_],self_43,fa),
       _r9_=caml_call3(GT[225],list,fa,_r8_);
      return caml_call3(GT[225],logic,_r9_,l)}
    function _nZ_(self_43,fa,l)
     {var
       _r6_=caml_call2(self_43[1][1 + _nQ_],self_43,fa),
       _r7_=caml_call3(GT[227],list,fa,_r6_);
      return caml_call3(GT[227],logic,_r7_,l)}
    function _n0_(self_43,fa,l)
     {var
       _r4_=caml_call2(self_43[1][1 + _nM_],self_43,fa),
       _r5_=caml_call3(GT[223],list,fa,_r4_);
      return caml_call3(GT[223],logic,_r5_,l)}
    var
     _n1_=
      [0,
       _nR_,
       function(self_43,fa,l)
        {var
          _r2_=caml_call2(self_43[1][1 + _nR_],self_43,fa),
          _r3_=caml_call3(GT[228],list,fa,_r2_);
         return caml_call3(GT[228],logic,_r3_,l)},
       _nM_,
       _n0_,
       _nQ_,
       _nZ_,
       _nO_,
       _nY_,
       _nN_,
       _nX_,
       _nL_,
       _nW_,
       _nP_,
       _nT_,
       _nK_,
       _nS_];
    caml_call2(CamlinternalOO[11],_nI_,_n1_);
    caml_call1(CamlinternalOO[17],_nI_);
    var logic$5=[0,gcata_logic,caml_call2(CamlinternalOO[24],0,_nI_),_m2_];
    function reify$8(ra)
     {function _rY_(self)
       {function _rZ_(fa)
         {function _r1_(fr)
           {function foo(param)
             {if(0 === param[0])
               {var xs=param[2],v=param[1];
                return [0,v,caml_call2(Stdlib_List[19],foo,xs)]}
              var x=param[1];
              return [1,caml_call4(GT[223],t$3,fa,fr,x)]}
            return caml_call1(_m_[1],foo)}
          return caml_call2(_m_[8][1],self,_r1_)}
        var _r0_=caml_call2(_m_[8][1],ra,_rZ_);
        return caml_call2(Reifier[4],Reifier[1],_r0_)}
      return caml_call1(Reifier[7],_rY_)}
    function prj_exn$4(ra)
     {function _rT_(rself)
       {function _rU_(fa)
         {function _rW_(fr)
           {function _rX_(x){return caml_call4(GT[223],t$3,fa,fr,x)}
            return caml_call1(_m_[1],_rX_)}
          return caml_call2(_m_[8][1],rself,_rW_)}
        var _rV_=caml_call2(_m_[8][1],ra,_rU_);
        return caml_call2(Reifier[4],Reifier[2],_rV_)}
      return caml_call1(Reifier[7],_rT_)}
    function gmap(fa,fb,param)
     {if(! param)return 0;
      var tl=param[2],h=param[1],_rR_=caml_call1(fb,tl),_rS_=caml_call1(fa,h);
      return caml_call2(Stdlib_List[4],_rS_,_rR_)}
    function prj_to_list_exn(ra)
     {function _rL_(self)
       {function _rM_(subj)
         {var
           _rO_=caml_call1(_m_[1],gmap),
           _rP_=caml_call2(_m_[4],_rO_,ra),
           _rQ_=caml_call2(_m_[4],_rP_,self);
          return caml_call2(_m_[4],_rQ_,subj)}
        var _rN_=caml_call1(_m_[5],_rM_);
        return caml_call2(_m_[6],Reifier[2],_rN_)}
      return caml_call1(Reifier[7],_rL_)}
    function prj$0(onvar,ra)
     {var symbol_bind=_m_[3];
      function _rG_(self)
       {var
         _rH_=
          caml_call2
           (symbol_bind,
            ra,
            function(fa)
             {return caml_call2
                      (symbol_bind,
                       self,
                       function(fr)
                        {function _rK_(x){return caml_call4(GT[223],t$3,fa,fr,x)}
                         return caml_call1(_m_[1],_rK_)})});
        function _rI_(param){throw [0,Assert_failure,_n2_]}
        var _rJ_=caml_call1(Reifier[3],_rI_);
        return caml_call2(Reifier[4],_rJ_,_rH_)}
      return caml_call1(Reifier[7],_rG_)}
    function nil$0(param){return 0}
    function symbol$14(x,y){return [0,x,y]}
    function of_list$2(f,param)
     {if(! param)return 0;
      var xs=param[2],x=param[1],_rF_=of_list$2(f,xs);
      return [0,caml_call1(f,x),_rF_]}
    function to_list(f,param)
     {if(! param)return 0;
      var xs=param[2],x=param[1],_rE_=to_list(f,xs);
      return [0,caml_call1(f,x),_rE_]}
    function inj$3(f,xs)
     {function _rC_(_rD_){return inj$3(f,_rD_)}
      return [1,caml_call4(GT[223],list,f,_rC_,xs)]}
    function list$0(param)
     {if(! param)return 0;var xs=param[2],x=param[1];return [0,x,list$0(xs)]}
    function logic_to_ground_exn(f,param)
     {if(0 === param[0])
       return caml_call1(Stdlib[2],cst_List_logic_to_ground_exn_v);
      var _rA_=param[1];
      if(! _rA_)return 0;
      var tl=_rA_[2],h=_rA_[1],_rB_=logic_to_ground_exn(f,tl);
      return [0,caml_call1(f,h),_rB_]}
    function symbol$15(x,y){return [0,x,[0,y,0]]}
    function symbol$16(x){return [0,x,0]}
    function foldro(f,a,xs,r)
     {var _rh_=0;
      function _ri_(h,t,a$0)
       {var _rs_=foldro(f,a,t,a$0),_rt_=caml_call3(f,h,a$0,r),_ru_=[0,h,t];
        function _rv_(_rz_){return unify$1(xs,_ru_,_rz_)}
        function _rw_(_ry_){return symbol$3(_rv_,_rt_,_ry_)}
        return function(_rx_){return symbol$3(_rw_,_rs_,_rx_)}}
      var _rj_=[0,caml_call1(Fresh[5],_ri_),_rh_];
      function _rk_(_rr_){return unify$1(a,r,_rr_)}
      var _rl_=0;
      function _rm_(_rq_){return unify$1(xs,_rl_,_rq_)}
      var _rn_=[0,function(_rp_){return symbol$3(_rm_,_rk_,_rp_)},_rj_];
      return function(_ro_){return conde(_rn_,_ro_)}}
    function mapo(f,xs,ys)
     {var _qT_=0;
      function _qU_(z,zs)
       {function _q5_(a1,a2)
         {var _q$_=[0,a1,a2];
          function _ra_(_rg_){return unify$1(ys,_q$_,_rg_)}
          var _rb_=mapo(f,zs,a2),_rc_=caml_call2(f,z,a1);
          function _rd_(_rf_){return symbol$3(_rc_,_rb_,_rf_)}
          return function(_re_){return symbol$3(_rd_,_ra_,_re_)}}
        var _q6_=caml_call1(Fresh[4],_q5_),_q7_=[0,z,zs];
        function _q8_(_q__){return unify$1(xs,_q7_,_q__)}
        return function(_q9_){return symbol$3(_q8_,_q6_,_q9_)}}
      var _qV_=[0,caml_call1(Fresh[4],_qU_),_qT_],_qW_=0;
      function _qX_(_q4_){return unify$1(ys,_qW_,_q4_)}
      var _qY_=0;
      function _qZ_(_q3_){return unify$1(xs,_qY_,_q3_)}
      var _q0_=[0,function(_q2_){return symbol$3(_qZ_,_qX_,_q2_)},_qV_];
      return function(_q1_){return conde(_q0_,_q1_)}}
    function filtero(p,xs,ys)
     {function folder(x,a$0,a)
       {var _qG_=0;
        function _qH_(_qS_){return unify$1(a$0,a,_qS_)}
        var
         _qI_=caml_call2(p,x,falso),
         _qJ_=[0,function(_qR_){return symbol$3(_qI_,_qH_,_qR_)},_qG_],
         _qK_=[0,x,a$0];
        function _qL_(_qQ_){return unify$1(_qK_,a,_qQ_)}
        var
         _qM_=caml_call2(p,x,truo),
         _qN_=[0,function(_qP_){return symbol$3(_qM_,_qL_,_qP_)},_qJ_];
        return function(_qO_){return conde(_qN_,_qO_)}}
      return foldro(folder,0,xs,ys)}
    function lookupo(p,xs,mx)
     {var _qd_=0;
      function _qe_(h,t)
       {var
         _qq_=lookupo(p,t,mx),
         _qp_=0,
         _qr_=caml_call2(p,h,falso),
         _qs_=[0,function(_qF_){return symbol$3(_qr_,_qq_,_qF_)},_qp_],
         _qt_=[0,h];
        function _qu_(_qE_){return unify$1(mx,_qt_,_qE_)}
        var
         _qv_=caml_call2(p,h,truo),
         _qw_=[0,function(_qD_){return symbol$3(_qv_,_qu_,_qD_)},_qs_];
        function _qx_(_qC_){return conde(_qw_,_qC_)}
        var _qy_=[0,h,t];
        function _qz_(_qB_){return unify$1(_qy_,xs,_qB_)}
        return function(_qA_){return symbol$3(_qz_,_qx_,_qA_)}}
      var _qf_=[0,caml_call1(Fresh[4],_qe_),_qd_],_qg_=0;
      function _qh_(_qo_){return unify$1(mx,_qg_,_qo_)}
      var _qi_=0;
      function _qj_(_qn_){return unify$1(xs,_qi_,_qn_)}
      var _qk_=[0,function(_qm_){return symbol$3(_qj_,_qh_,_qm_)},_qf_];
      return function(_ql_){return conde(_qk_,_ql_)}}
    function assoco(x,xs,v)
     {function _pW_(a,b,tl)
       {var _pX_=0,_pY_=assoco(x,tl,v);
        function _pZ_(_qc_){return diseq(a,x,_qc_)}
        var _p0_=[0,function(_qb_){return symbol$3(_pZ_,_pY_,_qb_)},_pX_];
        function _p1_(_qa_){return unify$1(b,v,_qa_)}
        function _p2_(_p$_){return unify$1(a,x,_p$_)}
        var _p3_=[0,function(_p__){return symbol$3(_p2_,_p1_,_p__)},_p0_];
        function _p4_(_p9_){return conde(_p3_,_p9_)}
        var _p5_=[0,[0,a,b],tl];
        function _p6_(_p8_){return unify$1(xs,_p5_,_p8_)}
        return function(_p7_){return symbol$3(_p6_,_p4_,_p7_)}}
      return caml_call1(Fresh[5],_pW_)}
    function anyo(_pU_,_pV_){return foldro(oro,falso,_pU_,_pV_)}
    function allo(_pS_,_pT_){return foldro(ando,truo,_pS_,_pT_)}
    function lengtho(l,n)
     {var _px_=0;
      function _py_(x,xs,n$0)
       {var _pI_=lengtho(xs,n$0),_pJ_=[0,n$0];
        function _pK_(_pR_){return unify$1(n,_pJ_,_pR_)}
        var _pL_=[0,x,xs];
        function _pM_(_pQ_){return unify$1(l,_pL_,_pQ_)}
        function _pN_(_pP_){return symbol$3(_pM_,_pK_,_pP_)}
        return function(_pO_){return symbol$3(_pN_,_pI_,_pO_)}}
      var _pz_=[0,caml_call1(Fresh[5],_py_),_px_];
      function _pA_(_pH_){return unify$1(n,o,_pH_)}
      var _pB_=0;
      function _pC_(_pG_){return unify$1(l,_pB_,_pG_)}
      var _pD_=[0,function(_pF_){return symbol$3(_pC_,_pA_,_pF_)},_pz_];
      return function(_pE_){return conde(_pD_,_pE_)}}
    function appendo(a,b,ab)
     {var _pc_=0;
      function _pd_(h,t,ab$0)
       {var _pn_=appendo(t,b,ab$0),_po_=[0,h,ab$0];
        function _pp_(_pw_){return unify$1(_po_,ab,_pw_)}
        var _pq_=[0,h,t];
        function _pr_(_pv_){return unify$1(a,_pq_,_pv_)}
        function _ps_(_pu_){return symbol$3(_pr_,_pp_,_pu_)}
        return function(_pt_){return symbol$3(_ps_,_pn_,_pt_)}}
      var _pe_=[0,caml_call1(Fresh[5],_pd_),_pc_];
      function _pf_(_pm_){return unify$1(b,ab,_pm_)}
      var _pg_=0;
      function _ph_(_pl_){return unify$1(a,_pg_,_pl_)}
      var _pi_=[0,function(_pk_){return symbol$3(_ph_,_pf_,_pk_)},_pe_];
      return function(_pj_){return conde(_pi_,_pj_)}}
    function reverso(a,b)
     {var _oU_=0;
      function _oV_(h,t,a$0)
       {var _o6_=reverso(t,a$0),_o7_=appendo(a$0,symbol$16(h),b),_o8_=[0,h,t];
        function _o9_(_pb_){return unify$1(a,_o8_,_pb_)}
        function _o__(_pa_){return symbol$3(_o9_,_o7_,_pa_)}
        return function(_o$_){return symbol$3(_o__,_o6_,_o$_)}}
      var _oW_=[0,caml_call1(Fresh[5],_oV_),_oU_],_oX_=0;
      function _oY_(_o5_){return unify$1(b,_oX_,_o5_)}
      var _oZ_=0;
      function _o0_(_o4_){return unify$1(a,_oZ_,_o4_)}
      var _o1_=[0,function(_o3_){return symbol$3(_o0_,_oY_,_o3_)},_oW_];
      return function(_o2_){return conde(_o1_,_o2_)}}
    function membero(l,a)
     {function _oF_(x,xs)
       {var _oG_=0,_oH_=membero(xs,a);
        function _oI_(_oT_){return diseq(x,a,_oT_)}
        var
         _oJ_=[0,function(_oS_){return symbol$3(_oI_,_oH_,_oS_)},_oG_],
         _oK_=[0,function(_oR_){return unify$1(x,a,_oR_)},_oJ_];
        function _oL_(_oQ_){return conde(_oK_,_oQ_)}
        var _oM_=[0,x,xs];
        function _oN_(_oP_){return unify$1(l,_oM_,_oP_)}
        return function(_oO_){return symbol$3(_oN_,_oL_,_oO_)}}
      return caml_call1(Fresh[4],_oF_)}
    function nullo(q)
     {var _oD_=0;return function(_oE_){return unify$1(q,_oD_,_oE_)}}
    function caro(xs,h)
     {function _oz_(tl)
       {var _oB_=[0,h,tl];return function(_oC_){return unify$1(xs,_oB_,_oC_)}}
      return function(_oA_){return call_fresh(_oz_,_oA_)}}
    function cdro(xs,tl)
     {function _ov_(h)
       {var _ox_=[0,h,tl];return function(_oy_){return unify$1(xs,_ox_,_oy_)}}
      return function(_ow_){return call_fresh(_ov_,_ow_)}}
    var
     OCanren_List=
      [0,
       list_t,
       gcata_ground$3,
       fmt_list_t,
       fmt_list,
       foldr_list_t,
       foldr_list,
       foldl_list_t,
       foldl_list,
       compare_list_t,
       compare_list,
       eq_list_t,
       eq_list,
       html_list_t,
       html_list,
       gmap_list_t,
       gmap_list,
       show_list_t,
       show_list,
       t_t$4,
       gcata_ground$3,
       fmt_t_t$4,
       fmt_t$4,
       foldr_t_t$4,
       foldr_t$4,
       foldl_t_t$4,
       foldl_t$4,
       compare_t_t$4,
       compare_t$4,
       eq_t_t$4,
       eq_t$4,
       html_t_t$3,
       html_t$3,
       gmap_t_t$4,
       gmap_t$4,
       show_t_t$4,
       show_t$4,
       t$3,
       ground_t$4,
       gcata_ground$3,
       fmt_ground_t$4,
       fmt_ground$4,
       foldr_ground_t$4,
       foldr_ground$4,
       foldl_ground_t$4,
       foldl_ground$4,
       compare_ground_t$4,
       compare_ground$4,
       eq_ground_t$4,
       eq_ground$4,
       html_ground_t$3,
       html_ground$3,
       gmap_ground_t$4,
       gmap_ground$4,
       show_ground_t$4,
       show_ground$4,
       ground$4,
       logic_t$7,
       gcata_logic,
       fmt_logic_t$7,
       fmt_logic$7,
       foldr_logic_t$7,
       foldr_logic$7,
       foldl_logic_t$7,
       foldl_logic$7,
       compare_logic_t$7,
       compare_logic$7,
       eq_logic_t$7,
       eq_logic$7,
       html_logic_t$6,
       html_logic$4,
       gmap_logic_t$7,
       gmap_logic$5,
       show_logic_t$7,
       show_logic$5,
       logic$5,
       of_list$2,
       to_list,
       inj$3,
       logic_to_ground_exn,
       list$0,
       nil$0,
       symbol$14,
       symbol$14,
       symbol$15,
       symbol$16,
       reify$8,
       prj_exn$4,
       prj_to_list_exn,
       prj$0,
       foldro,
       mapo,
       filtero,
       lookupo,
       assoco,
       anyo,
       allo,
       lengtho,
       appendo,
       reverso,
       membero,
       nullo,
       caro,
       caro,
       cdro,
       cdro];
    caml_register_global(346,OCanren_List,"OCanren__List");
    function eqo(x,y,t)
     {var _oh_=0;
      function _oi_(_ou_){return unify$1(t,falso,_ou_)}
      function _oj_(_ot_){return diseq(x,y,_ot_)}
      var _ok_=[0,function(_os_){return symbol$3(_oj_,_oi_,_os_)},_oh_];
      function _ol_(_or_){return unify$1(t,truo,_or_)}
      function _om_(_oq_){return unify$1(x,y,_oq_)}
      var _on_=[0,function(_op_){return symbol$3(_om_,_ol_,_op_)},_ok_];
      return function(_oo_){return conde(_on_,_oo_)}}
    function neqo(x,y,t)
     {var _n5_=0;
      function _n6_(_og_){return unify$1(t,falso,_og_)}
      function _n7_(_of_){return unify$1(x,y,_of_)}
      var _n8_=[0,function(_oe_){return symbol$3(_n7_,_n6_,_oe_)},_n5_];
      function _n9_(_od_){return unify$1(t,truo,_od_)}
      function _n__(_oc_){return diseq(x,y,_oc_)}
      var _n$_=[0,function(_ob_){return symbol$3(_n__,_n9_,_ob_)},_n8_];
      return function(_oa_){return conde(_n$_,_oa_)}}
    function nat$0(n){return nat(of_int(n))}
    function list$1(f,param)
     {if(! param)return 0;
      var xs=param[2],x=param[1],_n4_=list$1(f,xs);
      return [0,caml_call1(f,x),_n4_]}
    function nat_list(param)
     {if(! param)return 0;
      var xs=param[2],x=param[1],_n3_=nat_list(xs);
      return [0,nat$0(x),_n3_]}
    var
     Std=
      [0,
       eqo,
       neqo,
       nat$0,
       symbol$14,
       symbol$15,
       symbol$16,
       nil$0,
       list$1,
       nat_list,
       some,
       none,
       pair,
       triple,
       structural,
       debug_var,
       only_head],
     OCanren$0=
      [0,
       logic_t,
       gcata_logic,
       fmt_logic_t,
       fmt_logic,
       foldr_logic_t,
       foldr_logic,
       foldl_logic_t,
       foldl_logic,
       compare_logic_t,
       compare_logic,
       eq_logic_t,
       eq_logic,
       html_logic_t,
       html_logic,
       gmap_logic_t,
       gmap_logic,
       show_logic_t,
       show_logic,
       logic,
       to_logic,
       from_logic,
       Reifier,
       symbol$2,
       inji,
       symbol$2,
       prj_exn,
       reify$2,
       Not_a_value,
       make_rr,
       State,
       call_fresh,
       wc$0,
       unify$1,
       unify$1,
       diseq,
       diseq,
       structural,
       symbol$3,
       symbol$3,
       symbol$5,
       symbol$5,
       conde,
       conde,
       symbol$4,
       success,
       failure,
       Fresh,
       delay,
       run,
       succ$2,
       NUMERAL_TYPS,
       q,
       qr,
       qrs,
       qrst,
       q,
       qr,
       qrs,
       qrst,
       Tabling,
       debug_var,
       only_head,
       PrunesControl,
       Std];
    caml_register_global(347,OCanren$0,"OCanren");
    return}
  (globalThis));

//# sourceMappingURL=data:application/json;base64,
