(env
 (_
  (flags
   (:standard -warn-error +5))))

(library
 (name lib1)
 (modules lib)
 (flags (-rectypes))
 (libraries OCanren OCanren.tester js_of_ocaml)
 (inline_tests)
 (wrapped false)
 (preprocess
  (pps
   OCanren-ppx.ppx_repr
   OCanren-ppx.ppx_fresh
   OCanren-ppx.ppx_distrib
   OCanren-ppx.ppx_wildcard
   GT.ppx
   GT.ppx_all
   ppx_inline_test)))

(executable
 (name main)
 (modules main sched_core)
 (modes js exe)
 (flags
  (:standard -rectypes))
 (libraries lib1 js_of_ocaml)
 (preprocess
  (pps
   OCanren-ppx.ppx_repr
   OCanren-ppx.ppx_fresh
   OCanren-ppx.ppx_wildcard
   OCanren-ppx.ppx_tester
   OCanren-ppx.ppx_distrib
   OCanren-ppx.ppx_deriving_reify
   GT.ppx
   GT.ppx_all
   js_of_ocaml-ppx)))

; (executable
;  (name appendo)
;  (modules appendo)
;  (flags
;   (:standard -rectypes))
;  (modes native js)
;  (libraries lib1)
;  (preprocess
;   (pps OCanren-ppx.ppx_repr OCanren-ppx.ppx_fresh GT.ppx GT.ppx_all)))

; (cram
;  (deps ./main.exe appendo.exe))

(executable
 (name foo)
 (modules foo)
 (modes js)
 (preprocess
  (pps js_of_ocaml-ppx)))

; (executable
;  (name main1)
;  (modules main)
;  (modes js)
;  (preprocess
;   (pps js_of_ocaml-ppx)))

(executable
 (name for_ocaml_test)
 (modules for_ocaml_test)
 (flags
  (:standard -rectypes))
 (libraries lib1)
 (preprocess
  (pps OCanren-ppx.ppx_repr OCanren-ppx.ppx_fresh GT.ppx GT.ppx_all)))
